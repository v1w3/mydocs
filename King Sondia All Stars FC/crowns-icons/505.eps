%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1 crowns.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: 
%%CreationDate: 9/1/2015
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:tiff="http://ns.adobe.com/tiff/1.0/"
            xmlns:exif="http://ns.adobe.com/exif/1.0/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <tiff:Make>HP</tiff:Make>
         <tiff:Model>HP Scanjet SJ200</tiff:Model>
         <tiff:XResolution>200/1</tiff:XResolution>
         <tiff:YResolution>200/1</tiff:YResolution>
         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>
         <tiff:YCbCrPositioning>2</tiff:YCbCrPositioning>
         <exif:DateTimeOriginal>2015:08:23 10:54:46</exif:DateTimeOriginal>
         <exif:ColorSpace>1</exif:ColorSpace>
         <exif:PixelXDimension>2149</exif:PixelXDimension>
         <exif:PixelYDimension>1610</exif:PixelYDimension>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-09-01T22:14:27+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-09-01T22:14:27+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-09-01T22:14:27+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7BmK0uxV2KoDWtas9Is1&#xA;urtuMbSxwjem8jAE/wCxWrH2GAlIFo/Ch2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxVqorSu/hirH9L8xz3PmbUNKkjLRRMTbuBRkWNUV/UBoeLOxKN3&#xA;37YLZGO1pJ+ZtvMI7PUWC3lgvKD6ixKqJZkYJMGU70/z64JMsbKtEtLvTtGtrW8nN5dQRUZgAGbi&#xA;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&#xA;irsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DocumentID>xmp.did:17b2211e-3403-8a4e-8bc6-a6c8086a64d2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:17b2211e-3403-8a4e-8bc6-a6c8086a64d2</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:0ab9101e-e050-614e-a565-35b1c76757a1</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:e93e9153-a17e-3044-b4f7-25ddf3effd4d</stRef:instanceID>
            <stRef:documentID>xmp.did:e93e9153-a17e-3044-b4f7-25ddf3effd4d</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:0ab9101e-e050-614e-a565-35b1c76757a1</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0ab9101e-e050-614e-a565-35b1c76757a1</stEvt:instanceID>
                  <stEvt:when>2015-08-23T11:37:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e93e9153-a17e-3044-b4f7-25ddf3effd4d</stEvt:instanceID>
                  <stEvt:when>2015-08-31T16:13:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:17b2211e-3403-8a4e-8bc6-a6c8086a64d2</stEvt:instanceID>
                  <stEvt:when>2015-09-01T22:14:27+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.870588 .870588 .870588 rgb
f
2000 283.177 mo
0 283.177 li
0 0 li
2000 0 li
2000 283.177 li
cp
.752941 .811765 .721569 rgb
f
94.4574 517.205 mo
100.016 530.882 li
100.016 530.882 122.377 543.963 189.898 543.963 cv
257.409 543.963 279.78 530.882 279.78 530.882 cv
285.338 517.205 li
273.101 521.592 244.338 529.026 189.898 529.026 cv
135.458 529.026 106.685 521.592 94.4574 517.205 cv
cp
.290196 .290196 .290196 rgb
f
322.823 411.596 mo
301.545 463.975 li
301.395 464.344 301.004 464.556 300.612 464.479 cv
300.221 464.403 299.938 464.06 299.938 463.66 cv
299.938 450.314 294.999 436.596 287.056 423.874 cv
286.874 423.583 286.843 423.223 286.972 422.905 cv
287.101 422.587 287.374 422.349 287.707 422.267 cv
300.904 419.003 311.837 415.032 321.349 410.236 cv
321.748 410.035 322.229 410.103 322.557 410.405 cv
322.886 410.708 322.991 411.182 322.823 411.596 cv
cp
189.898 518.725 mo
177.293 518.725 167.07 508.502 167.07 495.897 cv
167.07 483.293 177.293 473.07 189.898 473.07 cv
202.502 473.07 212.725 483.293 212.725 495.897 cv
212.725 508.502 202.502 518.725 189.898 518.725 cv
cp
157.591 395.506 mo
157.475 395.377 157.479 395.179 157.602 395.057 cv
171.494 381.116 181.569 367.348 189.608 351.867 cv
189.664 351.759 189.776 351.691 189.898 351.691 cv
190.019 351.691 190.131 351.759 190.187 351.867 cv
198.13 367.164 208.061 380.788 221.698 394.558 cv
222.098 394.962 222.112 395.605 221.732 396.028 cv
205.46 414.084 189.898 437.585 189.898 463.809 cv
189.898 437.332 174.033 413.629 157.591 395.506 cv
cp
93.244 422.55 mo
93.3107 422.566 93.3656 422.613 93.3911 422.677 cv
93.4168 422.741 93.41 422.813 93.373 422.871 cv
85.0601 435.873 79.8571 449.962 79.8571 463.66 cv
79.8571 464.06 79.5744 464.403 79.1827 464.479 cv
78.7909 464.556 78.3999 464.344 78.2497 463.975 cv
57.324 412.463 li
57.1014 411.915 57.2407 411.287 57.6741 410.884 cv
58.1074 410.481 58.7448 410.388 59.275 410.65 cv
68.8716 415.399 79.9129 419.326 93.244 422.55 cv
cp
343.231 373.709 mo
343.366 373.377 343.246 372.995 342.944 372.801 cv
342.642 372.607 342.245 372.655 341.998 372.916 cv
322.474 393.575 302.576 407.385 266.399 416.15 cv
266.297 416.175 266.213 416.248 266.173 416.346 cv
266.134 416.443 266.144 416.554 266.201 416.643 cv
274.811 430.144 280.197 444.769 280.197 458.986 cv
280.197 481.774 261.627 490.627 244.327 490.627 cv
230.829 490.627 210.572 480.93 210.572 458.986 cv
210.572 432.508 224.311 413.589 240.734 395.505 cv
240.851 395.377 240.846 395.179 240.724 395.056 cv
214.319 368.551 201.691 342.681 190.613 304.501 cv
190.521 304.182 190.229 303.963 189.897 303.963 cv
189.565 303.963 189.273 304.183 189.181 304.502 cv
178.094 342.681 165.466 368.551 139.071 395.056 cv
138.949 395.179 138.944 395.377 139.061 395.505 cv
155.474 413.589 169.223 432.508 169.223 458.986 cv
169.223 480.93 148.966 490.627 135.458 490.627 cv
118.158 490.627 99.5983 481.774 99.5983 458.986 cv
99.5983 444.769 104.974 430.144 113.584 416.643 cv
113.641 416.554 113.651 416.443 113.612 416.346 cv
113.573 416.248 113.488 416.175 113.386 416.15 cv
77.2193 407.386 57.3136 393.576 37.7978 372.918 cv
37.5514 372.658 37.1542 372.609 36.8524 372.803 cv
36.5506 372.997 36.4295 373.379 36.5645 373.711 cv
93.0377 512.691 li
104.372 516.979 133.225 525.038 189.898 525.038 cv
246.56 525.038 275.413 516.979 286.757 512.691 cv
343.231 373.709 li
cp
f
189.898 482.995 mo
182.771 482.995 176.995 488.771 176.995 495.897 cv
176.995 503.024 182.771 508.8 189.898 508.8 cv
197.024 508.8 202.8 503.024 202.8 495.897 cv
202.8 488.771 197.024 482.995 189.898 482.995 cv
cp
f
642.096 460.508 mo
642.206 460.565 642.276 460.679 642.276 460.803 cv
642.276 460.928 642.206 461.042 642.096 461.099 cv
622.741 471.129 601.587 492.091 591.102 511.516 cv
590.914 511.863 590.552 512.08 590.158 512.08 cv
589.763 512.08 589.4 511.865 589.213 511.518 cv
578.939 492.501 558.45 472.012 539.433 461.748 cv
539.086 461.56 538.869 461.197 538.869 460.803 cv
538.87 460.408 539.087 460.046 539.434 459.858 cv
558.86 449.364 579.821 428.21 589.861 408.854 cv
589.919 408.744 590.033 408.674 590.157 408.674 cv
590.282 408.674 590.396 408.744 590.453 408.855 cv
600.695 428.618 622.333 450.256 642.096 460.508 cv
cp
717.175 397.242 mo
717.368 397.047 717.445 396.764 717.379 396.497 cv
717.312 396.231 717.112 396.017 716.849 395.935 cv
699.183 390.42 683.646 384.455 669.709 377.486 cv
669.445 377.354 669.129 377.381 668.89 377.555 cv
668.652 377.729 668.531 378.022 668.577 378.314 cv
670.497 390.506 670.922 398.919 668.851 408.912 cv
667.518 415.341 661.354 419.654 654.873 418.629 cv
635.377 415.542 612.646 405.307 615.881 393.846 cv
620.496 377.48 628.46 369.897 640.855 361.17 cv
641.062 361.025 641.187 360.788 641.19 360.535 cv
641.193 360.282 641.075 360.043 640.871 359.892 cv
621.875 345.791 605.924 328.046 590.822 304.328 cv
590.677 304.101 590.426 303.963 590.157 303.963 cv
589.887 303.963 589.637 304.101 589.492 304.329 cv
574.38 328.047 558.429 345.791 539.433 359.892 cv
539.229 360.043 539.111 360.282 539.114 360.535 cv
539.117 360.788 539.242 361.025 539.449 361.17 cv
551.844 369.897 559.807 377.48 564.423 393.846 cv
567.658 405.307 544.927 415.542 525.441 418.629 cv
518.96 419.654 512.785 415.341 511.453 408.912 cv
509.382 398.919 509.807 390.506 511.727 378.314 cv
511.773 378.022 511.652 377.729 511.414 377.554 cv
511.175 377.38 510.859 377.354 510.595 377.486 cv
496.658 384.455 481.131 390.42 463.465 395.935 cv
463.202 396.017 463.001 396.23 462.935 396.497 cv
462.868 396.764 462.946 397.046 463.139 397.242 cv
496.75 431.283 513.882 459.464 521.783 509.09 cv
537.991 516.85 564.423 519.663 590.157 519.663 cv
615.881 519.663 642.313 516.85 658.521 509.09 cv
666.432 459.464 683.555 431.283 717.175 397.242 cv
cp
f
673.047 525.666 mo
672.782 522.521 670.929 519.727 668.134 518.26 cv
658.525 513.215 li
642.313 520.968 615.881 523.788 590.154 523.788 cv
564.427 523.788 537.995 520.968 521.783 513.215 cv
512.173 518.26 li
509.378 519.727 507.525 522.521 507.261 525.666 cv
506.125 539.15 569.78 543.963 590.154 543.963 cv
610.528 543.963 674.182 539.15 673.047 525.666 cv
cp
f
621.851 459.861 mo
610.119 453.327 597.634 440.834 591.1 429.1 cv
590.91 428.758 590.55 428.545 590.158 428.545 cv
589.766 428.545 589.405 428.757 589.215 429.099 cv
582.68 440.833 570.186 453.327 558.453 459.861 cv
558.111 460.051 557.899 460.413 557.9 460.804 cv
557.9 461.196 558.112 461.556 558.454 461.747 cv
570.187 468.28 582.68 480.764 589.214 492.497 cv
589.405 492.839 589.765 493.052 590.156 493.052 cv
590.548 493.052 590.909 492.84 591.1 492.498 cv
597.633 480.765 610.118 468.28 621.85 461.747 cv
622.192 461.556 622.405 461.196 622.405 460.804 cv
622.406 460.413 622.193 460.052 621.851 459.861 cv
cp
f
189.898 880.541 mo
171.825 880.541 119.573 875.298 120.585 860.64 cv
120.941 855.444 126.701 849.787 129.241 847.097 cv
143.624 855.535 167.077 858.594 189.898 858.594 cv
212.719 858.594 236.172 855.535 250.554 847.097 cv
253.095 849.787 258.855 855.444 259.223 860.64 cv
260.223 875.298 207.971 880.541 189.898 880.541 cv
cp
f
318.672 734.901 mo
312.117 743.999 277.83 714.108 243.539 788.776 cv
243.289 789.32 242.671 789.591 242.101 789.405 cv
241.532 789.219 241.192 788.636 241.311 788.048 cv
264.752 672.109 327.204 723.037 318.672 734.901 cv
cp
190.911 847.97 mo
190.7 848.33 190.315 848.551 189.899 848.551 cv
189.482 848.551 189.096 848.331 188.886 847.971 cv
184.716 840.85 177.279 833.421 170.156 829.244 cv
169.797 829.034 169.576 828.649 169.576 828.232 cv
169.576 827.816 169.796 827.43 170.156 827.22 cv
177.279 823.05 184.715 815.613 188.886 808.491 cv
189.096 808.131 189.482 807.91 189.899 807.91 cv
190.316 807.91 190.7 808.132 190.911 808.492 cv
195.081 815.614 202.518 823.05 209.64 827.22 cv
210 827.43 210.221 827.816 210.221 828.232 cv
210.221 828.649 209.999 829.034 209.64 829.244 cv
202.518 833.421 195.081 840.849 190.911 847.97 cv
cp
156.73 696.904 mo
153.81 693.892 153.339 690.604 159.167 688.282 cv
178.194 680.671 201.602 680.671 220.629 688.282 cv
226.457 690.604 225.986 693.892 223.066 696.904 cv
200.89 719.849 194.308 747.971 191.066 779.833 cv
191.005 780.433 190.5 780.889 189.897 780.888 cv
189.295 780.888 188.791 780.432 188.73 779.832 cv
185.488 747.97 178.905 719.849 156.73 696.904 cv
cp
61.1237 734.901 mo
52.5908 723.035 115.073 672.094 138.507 788.099 cv
138.624 788.683 138.286 789.263 137.72 789.447 cv
137.154 789.632 136.538 789.364 136.29 788.822 cv
101.991 714.096 67.6804 744.001 61.1237 734.901 cv
cp
341.723 729.463 mo
329.295 696.169 291.046 685.868 267.569 697.686 cv
219.191 722.048 235.436 771.495 219.548 775.024 cv
207.741 777.646 206.131 757.365 223.434 730.877 cv
240.828 704.262 256.625 700.158 253.452 683.913 cv
250.267 667.668 216.72 658.494 189.898 658.494 cv
163.076 658.494 129.529 667.668 126.356 683.913 cv
123.171 700.158 138.979 704.262 156.362 730.877 cv
173.665 757.365 172.055 777.646 160.248 775.024 cv
144.36 771.495 160.604 722.048 112.226 697.686 cv
88.7502 685.868 50.5008 696.169 38.0729 729.463 cv
28.1858 755.951 36.6588 767.253 43.7178 767.253 cv
51.685 767.253 46.9023 758.779 59.2613 752.422 cv
87.635 737.833 121.884 780.612 129.241 842.97 cv
143.624 851.397 167.077 854.466 189.898 854.466 cv
212.719 854.466 236.172 851.397 250.554 842.97 cv
257.912 780.612 292.161 737.833 320.535 752.422 cv
332.905 758.779 328.111 767.253 336.078 767.253 cv
343.137 767.253 351.61 755.951 341.723 729.463 cv
cp
f
904.216 491.795 mo
911.899 516.965 li
934.148 536.429 1046.39 536.686 1068.93 516.965 cv
1076.6 491.844 li
1056.46 503.147 1022.99 505.847 990.943 505.847 cv
958.827 505.847 924.588 503.135 904.216 491.795 cv
cp
1098.17 408.027 mo
1098.04 408.446 1097.63 408.712 1097.2 408.658 cv
1096.76 408.605 1096.43 408.247 1096.41 407.81 cv
1095.97 399.316 1093.81 387.34 1088.83 376.528 cv
1088.64 376.115 1088.79 375.623 1089.18 375.384 cv
1099.53 368.999 1108.09 359.991 1113.12 353.107 cv
1113.38 352.752 1113.86 352.635 1114.25 352.832 cv
1114.64 353.029 1114.84 353.481 1114.71 353.902 cv
1098.17 408.027 li
cp
991.615 417.09 mo
991.451 417.615 990.964 417.973 990.413 417.973 cv
989.862 417.973 989.376 417.615 989.211 417.089 cv
986.602 408.759 980.627 396.224 971.703 386.055 cv
971.286 385.58 971.287 384.871 971.704 384.395 cv
980.627 374.227 986.603 361.692 989.211 353.355 cv
989.376 352.829 989.863 352.472 990.414 352.472 cv
990.965 352.472 991.451 352.831 991.615 353.357 cv
994.221 361.694 1000.2 374.228 1009.13 384.397 cv
1009.54 384.872 1009.54 385.581 1009.13 386.057 cv
1000.2 396.225 994.22 408.76 991.615 417.09 cv
cp
884.546 405.881 mo
884.5 406.485 884.03 406.97 883.428 407.036 cv
882.827 407.102 882.263 406.731 882.086 406.152 cv
866.715 355.847 li
866.537 355.266 866.8 354.64 867.34 354.361 cv
867.88 354.082 868.543 354.228 868.915 354.709 cv
874 361.281 881.939 369.333 891.377 375.22 cv
891.913 375.554 892.119 376.234 891.858 376.808 cv
887.339 386.75 885.184 397.638 884.546 405.881 cv
cp
1069.27 367.203 mo
1068.98 367.257 1068.73 367.447 1068.61 367.714 cv
1068.49 367.981 1068.5 368.292 1068.65 368.545 cv
1080.89 389.482 1083.96 402.869 1081.11 417.084 cv
1077.29 414.225 1072.79 412.58 1067.95 412.58 cv
1061.49 412.58 1055.59 415.546 1051.15 420.41 cv
1050.91 420.674 1050.84 421.055 1050.99 421.382 cv
1051.13 421.709 1051.46 421.92 1051.81 421.919 cv
1051.82 421.919 1051.82 421.919 1051.82 421.919 cv
1065.63 421.919 1076.82 435.406 1076.82 452.047 cv
1076.82 491.919 1017.17 492.643 1017.17 452.047 cv
1017.17 435.406 1028.36 421.919 1042.17 421.919 cv
1042.52 421.919 1042.85 421.708 1042.99 421.381 cv
1043.14 421.054 1043.07 420.672 1042.83 420.408 cv
1038.4 415.546 1032.51 412.58 1026.04 412.58 cv
1022.51 412.58 1019.14 413.464 1016.1 415.059 cv
1017.64 403.042 1021.89 393.932 1033.62 385.509 cv
1033.94 385.281 1034.13 384.921 1034.15 384.531 cv
1034.16 384.142 1033.99 383.767 1033.7 383.518 cv
1014.23 367.294 999.399 339.85 992.028 317.137 cv
991.859 316.619 991.377 316.267 990.831 316.267 cv
990.286 316.266 989.803 316.617 989.633 317.135 cv
982.194 339.848 966.629 367.294 947.137 383.518 cv
946.837 383.767 946.67 384.141 946.684 384.53 cv
946.698 384.92 946.891 385.281 947.207 385.509 cv
958.929 393.932 963.18 403.042 964.73 415.059 cv
961.686 413.464 958.324 412.58 954.777 412.58 cv
948.312 412.58 942.429 415.546 937.986 420.41 cv
937.745 420.674 937.683 421.055 937.827 421.382 cv
937.971 421.708 938.294 421.919 938.652 421.919 cv
938.652 421.919 938.652 421.919 938.652 421.919 cv
952.47 421.919 963.662 435.406 963.662 452.047 cv
963.662 492.643 903.996 491.919 903.996 452.047 cv
903.996 435.406 915.2 421.919 929.006 421.919 cv
929.01 421.919 929.014 421.919 929.018 421.919 cv
929.375 421.92 929.699 421.709 929.843 421.382 cv
929.987 421.055 929.925 420.674 929.684 420.41 cv
925.239 415.546 919.345 412.58 912.881 412.58 cv
908.045 412.58 903.542 414.225 899.725 417.084 cv
896.887 402.967 899.891 389.668 911.915 368.98 cv
912.12 368.628 912.142 368.198 911.973 367.827 cv
911.805 367.456 911.467 367.189 911.067 367.112 cv
887.901 362.604 869.724 340.641 854.41 318.764 cv
854.055 318.257 853.384 318.083 852.827 318.354 cv
852.27 318.625 851.993 319.261 852.173 319.853 cv
902.511 485.378 li
922.637 498.522 957.919 501.602 990.943 501.602 cv
1023.91 501.602 1058.39 498.534 1078.31 485.427 cv
1128.66 319.852 li
1128.84 319.26 1128.56 318.624 1128 318.354 cv
1127.45 318.083 1126.78 318.256 1126.42 318.763 cv
1111 340.793 1092.66 362.911 1069.27 367.203 cv
cp
f
109.86 1733.08 mo
73.3758 1733.08 39.5784 1756.3 54.3716 1803.04 cv
63.9271 1833.22 89.1387 1867.71 121.008 1899.09 cv
121.333 1899.41 121.798 1899.55 122.246 1899.46 cv
128.622 1898.22 134.63 1896.98 141.104 1895.11 cv
141.323 1895.05 141.493 1894.87 141.55 1894.65 cv
141.607 1894.43 141.543 1894.2 141.381 1894.03 cv
125.942 1878.55 113.827 1859.02 109.005 1842.44 cv
100.495 1813.14 118.435 1798.71 138.229 1798.71 cv
148.613 1798.7 159.041 1802.64 166.633 1809.9 cv
167.053 1810.3 167.679 1810.4 168.201 1810.14 cv
168.723 1809.88 169.029 1809.33 168.967 1808.75 cv
168.277 1802.34 166.686 1787.54 163.049 1753.73 cv
162.945 1752.76 162.477 1751.87 161.739 1751.23 cv
147.825 1739.16 128.512 1733.08 109.86 1733.08 cv
cp
f
269.936 1733.08 mo
306.42 1733.08 340.218 1756.3 325.424 1803.04 cv
315.869 1833.22 290.657 1867.71 258.788 1899.09 cv
258.463 1899.41 257.998 1899.55 257.55 1899.46 cv
251.174 1898.22 245.166 1896.98 238.692 1895.11 cv
238.473 1895.05 238.303 1894.87 238.246 1894.65 cv
238.189 1894.43 238.253 1894.2 238.415 1894.03 cv
253.854 1878.55 265.969 1859.02 270.791 1842.44 cv
279.301 1813.14 261.361 1798.71 241.567 1798.71 cv
231.183 1798.7 220.755 1802.64 213.163 1809.9 cv
212.743 1810.3 212.117 1810.4 211.595 1810.14 cv
211.073 1809.88 210.767 1809.33 210.829 1808.75 cv
211.519 1802.34 213.11 1787.54 216.747 1753.73 cv
216.851 1752.76 217.319 1751.87 218.057 1751.23 cv
231.971 1739.16 251.284 1733.08 269.936 1733.08 cv
cp
f
172.334 1816.81 mo
172.63 1819.65 li
172.323 1816.8 li
172.323 1816.8 172.323 1816.81 172.334 1816.81 cv
cp
f
256.01 1904.07 mo
256.043 1903.94 256.021 1903.8 255.949 1903.69 cv
255.877 1903.57 255.761 1903.49 255.629 1903.47 cv
232.983 1898.95 219.242 1894.7 200.351 1880.35 cv
199.562 1879.75 199.144 1878.78 199.25 1877.8 cv
204.398 1829.98 li
204.914 1825.2 li
204.914 1825.19 li
205.429 1820.43 li
212.175 1757.68 li
212.237 1757.1 211.857 1756.58 211.293 1756.46 cv
204.112 1754.92 196.98 1754.19 189.901 1754.19 cv
182.779 1754.19 175.654 1754.92 168.5 1756.46 cv
167.936 1756.58 167.556 1757.11 167.618 1757.68 cv
168.496 1765.78 174.334 1820.06 174.373 1820.42 cv
174.878 1825.19 li
174.878 1825.2 li
175.393 1829.97 li
180.542 1877.8 li
180.648 1878.78 180.228 1879.75 179.439 1880.35 cv
169.18 1888.13 158.452 1894.37 145.73 1898.24 cv
138.701 1900.54 126.995 1902.99 124.251 1903.45 cv
124.118 1903.47 123.999 1903.55 123.924 1903.66 cv
123.848 1903.77 123.822 1903.91 123.851 1904.04 cv
124.62 1907.51 123.96 1904.78 130.575 1930.98 cv
140.866 1942.03 174.039 1944.94 189.901 1944.94 cv
205.494 1944.94 238.862 1942.11 249.228 1930.98 cv
255.336 1906.74 li
256.005 1904.09 li
256.01 1904.07 li
cp
f
206.549 1731.09 mo
206.981 1730.98 207.436 1731.13 207.711 1731.48 cv
207.985 1731.83 208.027 1732.31 207.818 1732.71 cv
200.056 1747.31 li
198.857 1749.57 li
198.647 1749.97 198.222 1750.2 197.775 1750.17 cv
195.183 1749.97 192.556 1749.87 189.901 1749.87 cv
186.562 1749.87 183.27 1750.04 180.035 1750.35 cv
179.581 1750.4 179.145 1750.16 178.932 1749.76 cv
177.674 1747.39 li
169.843 1732.63 li
169.635 1732.24 169.676 1731.76 169.948 1731.41 cv
170.22 1731.06 170.672 1730.9 171.103 1731.01 cv
176.895 1732.42 183.115 1733.12 189.243 1733.12 cv
195.256 1733.12 201.187 1732.44 206.549 1731.09 cv
cp
f
209.237 1724.58 mo
209.336 1724.87 209.314 1725.18 209.177 1725.45 cv
209.039 1725.73 208.798 1725.93 208.509 1726.02 cv
196.889 1729.66 181.751 1729.65 169.219 1726 cv
168.923 1725.92 168.676 1725.71 168.535 1725.44 cv
168.393 1725.17 168.368 1724.85 168.468 1724.56 cv
187.784 1668.18 li
187.94 1667.73 188.368 1667.42 188.848 1667.42 cv
189.329 1667.42 189.757 1667.73 189.913 1668.18 cv
209.237 1724.58 li
cp
f
1087.34 1187.69 mo
1033.96 1204.87 946.869 1204.87 893.487 1187.69 cv
896.006 1191.62 898.373 1195.61 900.562 1199.63 cv
935.897 1217.28 1044.68 1217.41 1080.27 1199.63 cv
1082.46 1195.61 1084.82 1191.62 1087.34 1187.69 cv
cp
f
899.478 1141.39 mo
899.48 1141.23 899.573 1141.08 899.719 1141.01 cv
899.865 1140.93 900.039 1140.95 900.169 1141.05 cv
906.32 1145.65 915.432 1149.32 923.201 1150.43 cv
923.922 1150.53 924.546 1150.98 924.869 1151.64 cv
925.191 1152.29 925.171 1153.06 924.813 1153.7 cv
921.385 1159.79 918.924 1167.96 918.367 1175.11 cv
918.315 1175.78 917.915 1176.37 917.315 1176.66 cv
916.714 1176.96 916.003 1176.92 915.442 1176.55 cv
909.307 1172.56 901.113 1169.5 894.096 1168.58 cv
893.468 1168.5 892.921 1168.11 892.641 1167.54 cv
892.36 1166.97 892.383 1166.3 892.7 1165.75 cv
896.664 1158.89 899.391 1149.22 899.478 1141.39 cv
cp
988.398 1107.08 mo
988.752 1106.28 989.543 1105.77 990.416 1105.77 cv
991.289 1105.77 992.081 1106.28 992.434 1107.08 cv
998.313 1120.34 1008.26 1133.93 1017.77 1141.57 cv
1018.29 1141.99 1018.6 1142.62 1018.6 1143.29 cv
1018.6 1143.96 1018.29 1144.6 1017.77 1145.02 cv
1008.26 1152.66 998.313 1166.24 992.434 1179.5 cv
992.08 1180.3 991.289 1180.82 990.416 1180.82 cv
989.543 1180.82 988.752 1180.3 988.398 1179.5 cv
982.518 1166.24 972.559 1152.66 963.051 1145.02 cv
962.529 1144.6 962.226 1143.96 962.226 1143.29 cv
962.226 1142.63 962.528 1141.99 963.05 1141.57 cv
972.558 1133.93 982.518 1120.34 988.398 1107.08 cv
cp
1078.13 1142.78 mo
1078.78 1142.37 1079.6 1142.33 1080.29 1142.67 cv
1080.98 1143.01 1081.44 1143.68 1081.51 1144.45 cv
1082.14 1151.48 1084.57 1159.42 1087.92 1165.38 cv
1088.27 1166.01 1088.29 1166.78 1087.97 1167.44 cv
1087.65 1168.09 1087.02 1168.54 1086.3 1168.64 cv
1079.54 1169.6 1071.76 1172.51 1065.79 1176.29 cv
1065.14 1176.7 1064.32 1176.75 1063.63 1176.4 cv
1062.94 1176.06 1062.48 1175.39 1062.41 1174.62 cv
1061.79 1167.59 1059.36 1159.65 1056.02 1153.7 cv
1055.66 1153.06 1055.64 1152.29 1055.96 1151.64 cv
1056.28 1150.98 1056.91 1150.53 1057.63 1150.43 cv
1064.39 1149.46 1072.17 1146.56 1078.13 1142.78 cv
cp
892.27 1182.64 mo
945.47 1200.71 1035.36 1200.71 1088.56 1182.64 cv
1088.89 1182.53 li
1090.77 1182.51 li
1105.57 1160.96 1125.06 1141.85 1146.55 1131.25 cv
1147.37 1130.85 1147.86 1129.98 1147.77 1129.08 cv
1147.69 1128.17 1147.06 1127.4 1146.18 1127.15 cv
1141.18 1125.72 1135.92 1123.91 1130.49 1121.78 cv
1129.98 1121.58 1129.41 1121.58 1128.9 1121.77 cv
1097.63 1133.55 li
1090.01 1102.58 li
1089.87 1102 1089.5 1101.5 1088.99 1101.2 cv
1085.21 1098.97 1081.42 1096.66 1077.64 1094.27 cv
1076.97 1093.84 1076.11 1093.81 1075.41 1094.19 cv
1074.71 1094.57 1074.26 1095.3 1074.25 1096.1 cv
1073.99 1112.69 1064.54 1130.82 1044.37 1126.51 cv
1018.01 1120.88 1029.74 1088.68 1047.03 1076.48 cv
1047.6 1076.07 1047.95 1075.42 1047.97 1074.72 cv
1047.98 1074.02 1047.66 1073.35 1047.11 1072.93 cv
1041.89 1068.91 1036.84 1064.81 1031.98 1060.66 cv
1031.52 1060.27 1030.91 1060.08 1030.31 1060.14 cv
1029.71 1060.21 1029.16 1060.51 1028.79 1060.99 cv
1025.73 1064.98 1019 1072.54 1012.03 1072.54 cv
1000.98 1072.54 1000.2 1059.22 1007.65 1053.59 cv
1014.69 1048.28 li
1015.2 1047.89 1015.52 1047.31 1015.56 1046.67 cv
1015.61 1046.03 1015.37 1045.4 1014.92 1044.95 cv
1005.82 1035.9 998.042 1026.84 992.194 1018.17 cv
991.795 1017.58 991.129 1017.23 990.416 1017.23 cv
989.703 1017.23 989.037 1017.58 988.638 1018.17 cv
982.788 1026.84 975.003 1035.9 965.916 1044.95 cv
965.463 1045.4 965.228 1046.03 965.272 1046.67 cv
965.315 1047.3 965.632 1047.89 966.142 1048.28 cv
973.181 1053.59 li
980.631 1059.22 979.845 1072.54 968.797 1072.54 cv
961.834 1072.54 955.102 1064.97 952.035 1060.99 cv
951.665 1060.51 951.115 1060.2 950.513 1060.14 cv
949.91 1060.08 949.309 1060.27 948.849 1060.66 cv
943.995 1064.81 938.938 1068.91 933.72 1072.93 cv
933.164 1073.35 932.844 1074.02 932.859 1074.72 cv
932.874 1075.42 933.221 1076.08 933.794 1076.48 cv
951.096 1088.68 962.812 1120.88 936.461 1126.51 cv
916.284 1130.82 906.838 1112.69 906.572 1096.1 cv
906.559 1095.3 906.116 1094.57 905.413 1094.2 cv
904.711 1093.82 903.857 1093.84 903.183 1094.27 cv
899.413 1096.67 895.624 1098.98 891.834 1101.2 cv
891.32 1101.5 890.95 1102 890.808 1102.58 cv
883.204 1133.55 li
851.929 1121.77 li
851.418 1121.58 850.855 1121.58 850.347 1121.78 cv
844.909 1123.91 839.653 1125.72 834.65 1127.15 cv
833.773 1127.4 833.14 1128.17 833.058 1129.08 cv
832.976 1129.98 833.462 1130.85 834.28 1131.25 cv
855.65 1141.8 875.038 1160.76 889.814 1182.17 cv
892.27 1182.64 li
cp
f
1004.45 1141.85 mo
1004.87 1142.21 1005.12 1142.74 1005.12 1143.29 cv
1005.11 1143.85 1004.87 1144.38 1004.45 1144.74 cv
999.868 1148.63 995.184 1154.97 992.126 1161.34 cv
991.81 1161.99 991.145 1162.41 990.415 1162.41 cv
989.686 1162.41 989.022 1161.99 988.706 1161.33 cv
985.585 1154.84 980.77 1148.38 976.112 1144.51 cv
975.751 1144.21 975.542 1143.76 975.542 1143.29 cv
975.542 1142.82 975.75 1142.38 976.111 1142.08 cv
980.77 1138.2 985.585 1131.75 988.706 1125.25 cv
989.022 1124.59 989.687 1124.18 990.416 1124.18 cv
991.145 1124.18 991.81 1124.59 992.126 1125.25 cv
995.184 1131.62 999.869 1137.95 1004.45 1141.85 cv
cp
f
915.007 1155.51 mo
915.357 1155.57 915.658 1155.79 915.815 1156.11 cv
915.971 1156.42 915.963 1156.8 915.792 1157.11 cv
914.387 1159.65 913.364 1163 913.068 1165.99 cv
913.031 1166.36 912.805 1166.69 912.47 1166.85 cv
912.135 1167.02 911.739 1167 911.421 1166.8 cv
908.87 1165.22 905.6 1163.99 902.723 1163.56 cv
902.374 1163.51 902.072 1163.29 901.915 1162.97 cv
901.758 1162.65 901.766 1162.28 901.937 1161.97 cv
903.341 1159.42 904.362 1156.08 904.653 1153.08 cv
904.689 1152.71 904.915 1152.38 905.251 1152.22 cv
905.586 1152.05 905.983 1152.07 906.301 1152.27 cv
908.854 1153.86 912.129 1155.08 915.007 1155.51 cv
cp
f
1078.9 1161.97 mo
1079.07 1162.28 1079.07 1162.65 1078.92 1162.97 cv
1078.76 1163.29 1078.46 1163.51 1078.11 1163.56 cv
1075.23 1163.99 1071.95 1165.22 1069.4 1166.8 cv
1069.08 1167 1068.69 1167.02 1068.35 1166.85 cv
1068.02 1166.69 1067.79 1166.36 1067.75 1165.99 cv
1067.46 1163 1066.44 1159.65 1065.03 1157.11 cv
1064.86 1156.8 1064.85 1156.42 1065.01 1156.11 cv
1065.16 1155.79 1065.46 1155.57 1065.81 1155.51 cv
1068.69 1155.08 1071.97 1153.86 1074.53 1152.27 cv
1074.84 1152.07 1075.24 1152.05 1075.57 1152.22 cv
1075.91 1152.38 1076.14 1152.71 1076.17 1153.08 cv
1076.47 1156.07 1077.49 1159.42 1078.9 1161.97 cv
cp
f
473.929 1194.71 mo
475.816 1200.36 477.241 1205.71 477.811 1209.66 cv
532.869 1233.75 646.961 1233.96 702.494 1209.66 cv
703.078 1205.71 704.489 1200.37 706.376 1194.73 cv
642.848 1218.47 537.104 1218.29 473.929 1194.71 cv
cp
501.851 1185.2 mo
537.866 1182.42 569.095 1169.61 588.595 1151.21 cv
589.469 1150.38 590.835 1150.38 591.709 1151.21 cv
611.223 1169.62 642.478 1182.44 678.522 1185.2 cv
625.025 1197.81 555.198 1197.74 501.851 1185.2 cv
cp
551.688 1080.89 mo
551.161 1080.46 550.856 1079.81 550.856 1079.13 cv
550.856 1078.45 551.16 1077.8 551.687 1077.37 cv
565.862 1065.77 578.293 1051.19 588.201 1034.52 cv
588.61 1033.83 589.351 1033.41 590.151 1033.41 cv
590.951 1033.41 591.694 1033.83 592.102 1034.52 cv
602.011 1051.19 614.441 1065.77 628.617 1077.37 cv
629.144 1077.8 629.449 1078.45 629.449 1079.13 cv
629.449 1079.81 629.145 1080.45 628.618 1080.89 cv
614.443 1092.49 602.012 1107.07 592.104 1123.73 cv
591.695 1124.42 590.954 1124.84 590.154 1124.84 cv
589.354 1124.84 588.611 1124.42 588.202 1123.74 cv
578.294 1107.07 565.864 1092.49 551.688 1080.89 cv
cp
654.483 1081.2 mo
655.196 1080.71 655.637 1079.91 655.671 1079.05 cv
655.706 1078.18 655.332 1077.35 654.66 1076.81 cv
630.429 1057.14 609.25 1032.22 592.507 1003.68 cv
592.016 1002.85 591.12 1002.34 590.151 1002.34 cv
589.182 1002.34 588.288 1002.85 587.798 1003.69 cv
571.021 1032.3 549.773 1057.27 525.459 1076.97 cv
524.833 1077.48 524.484 1078.25 524.517 1079.05 cv
524.549 1079.86 524.96 1080.6 525.625 1081.06 cv
590.14 1125.21 563.49 1163.55 463.968 1165.38 cv
463.133 1165.39 462.374 1165.86 461.992 1166.61 cv
461.61 1167.35 461.665 1168.24 462.139 1168.93 cv
465.387 1173.65 468.851 1181 471.716 1188.52 cv
535.339 1213.22 644.586 1213.41 708.589 1188.54 cv
711.454 1181.02 714.918 1173.65 718.173 1168.93 cv
718.647 1168.24 718.705 1167.35 718.322 1166.61 cv
717.94 1165.86 717.18 1165.39 716.344 1165.38 cv
616.923 1163.55 590.237 1125.29 654.483 1081.2 cv
cp
f
591.52 688.145 mo
591.241 688.681 590.687 689.017 590.082 689.017 cv
589.478 689.018 588.923 688.682 588.644 688.146 cv
576.379 664.611 577.853 639.292 590.082 639.292 cv
602.293 639.292 603.79 664.598 591.52 688.145 cv
cp
f
475.181 739.235 mo
475.071 739.845 474.622 740.339 474.025 740.508 cv
473.428 740.677 472.787 740.49 472.375 740.027 cv
462.195 728.608 459.299 714.53 466.154 712.597 cv
473 710.666 477.896 724.173 475.181 739.235 cv
cp
f
705.133 739.235 mo
705.243 739.845 705.691 740.339 706.288 740.508 cv
706.885 740.677 707.526 740.49 707.939 740.027 cv
718.118 728.608 721.014 714.53 714.159 712.597 cv
707.313 710.666 702.418 724.173 705.133 739.235 cv
cp
f
615.641 796.951 mo
615.927 797.237 616.089 797.625 616.089 798.03 cv
616.089 798.434 615.927 798.822 615.641 799.108 cv
605.787 808.919 597.904 821.463 591.576 837.985 cv
591.35 838.574 590.785 838.962 590.154 838.962 cv
589.524 838.962 588.959 838.573 588.734 837.984 cv
582.406 821.462 574.523 808.919 564.669 799.108 cv
564.382 798.822 564.221 798.434 564.221 798.03 cv
564.221 797.625 564.382 797.237 564.669 796.951 cv
574.523 787.139 582.406 774.585 588.734 758.072 cv
588.959 757.484 589.524 757.095 590.154 757.095 cv
590.785 757.095 591.35 757.483 591.576 758.072 cv
597.904 774.585 605.787 787.139 615.641 796.951 cv
cp
f
489.313 794.016 mo
503.005 841.667 li
506.943 830.991 512.104 821.114 519.396 811.363 cv
519.69 810.97 519.776 810.46 519.628 809.993 cv
519.48 809.525 519.116 809.157 518.65 809.005 cv
507.561 805.384 498.145 800.396 489.313 794.016 cv
cp
f
591.582 859.534 mo
591.36 860.128 590.792 860.522 590.157 860.522 cv
589.523 860.522 588.954 860.129 588.732 859.534 cv
579.056 833.66 566.883 814.196 551.563 799.111 cv
551.273 798.825 551.109 798.434 551.109 798.027 cv
551.109 797.619 551.272 797.228 551.563 796.942 cv
566.883 781.847 579.056 762.383 588.732 736.508 cv
588.954 735.913 589.522 735.519 590.157 735.519 cv
590.792 735.519 591.36 735.914 591.582 736.509 cv
601.258 762.383 613.431 781.847 628.751 796.942 cv
629.041 797.228 629.205 797.619 629.205 798.027 cv
629.204 798.434 629.041 798.825 628.75 799.111 cv
613.431 814.196 601.258 833.659 591.582 859.534 cv
cp
704.313 747.634 mo
704.504 746.969 704.222 746.259 703.627 745.906 cv
703.032 745.553 702.274 745.646 701.781 746.131 cv
682.668 764.956 665.83 777.25 639.403 783.214 cv
618.955 762.786 603.416 734.989 591.616 695.128 cv
591.424 694.482 590.83 694.038 590.156 694.039 cv
589.482 694.039 588.889 694.483 588.697 695.13 cv
576.897 734.989 561.359 762.786 540.921 783.214 cv
514.485 777.25 497.638 764.958 478.533 746.134 cv
478.041 745.649 477.283 745.556 476.688 745.909 cv
476.094 746.262 475.811 746.972 476.001 747.637 cv
483.763 774.673 li
498.629 788.629 512.78 798.5 532.067 804.394 cv
532.549 804.541 532.927 804.918 533.076 805.4 cv
533.224 805.881 533.125 806.405 532.81 806.799 cv
519.441 823.526 513.396 840.699 508.951 862.368 cv
509.168 863.128 li
511.089 863.768 li
535.799 874.946 571.231 876.617 590.157 876.617 cv
609.083 876.617 644.515 874.946 669.225 863.768 cv
669.322 863.725 li
671.189 862.976 li
671.363 862.368 li
666.918 840.699 660.862 823.526 647.493 806.799 cv
647.178 806.406 647.079 805.881 647.228 805.4 cv
647.376 804.918 647.754 804.541 648.236 804.394 cv
667.523 798.5 681.674 788.629 696.55 774.673 cv
704.313 747.634 li
cp
590.157 881.826 mo
571.318 881.826 536.417 880.187 510.969 869.4 cv
515.636 885.7 li
534.269 896.335 564.492 899.743 590.157 899.743 cv
615.822 899.743 646.045 896.335 664.689 885.7 cv
669.355 869.39 li
643.896 880.187 608.996 881.826 590.157 881.826 cv
cp
f
677.304 841.667 mo
690.997 794.016 li
682.165 800.395 672.737 805.384 661.659 809.005 cv
661.193 809.157 660.829 809.524 660.681 809.992 cv
660.533 810.46 660.619 810.97 660.913 811.362 cv
668.206 821.113 673.367 830.991 677.304 841.667 cv
cp
f
618.353 1725.88 mo
600.524 1718.94 578.92 1719.29 561.964 1725.87 cv
554.136 1707.71 596.1 1700.45 613.406 1712.3 cv
618.42 1715.73 620.703 1720.45 618.353 1725.88 cv
cp
f
675.368 1899.17 mo
673.376 1905.48 674.612 1901.58 668.641 1920.43 cv
656.508 1924.95 642.173 1921.7 634.873 1912.91 cv
624.346 1925.61 600.723 1925.66 590.158 1912.91 cv
579.573 1925.65 555.964 1925.62 545.432 1912.91 cv
538.204 1921.61 523.924 1924.99 511.675 1920.43 cv
505.608 1901.27 506.94 1905.48 504.949 1899.17 cv
512.986 1901.26 525.084 1902.47 525.084 1902.47 cv
557.698 1905.91 621.106 1906.07 655.233 1902.47 cv
655.233 1902.47 667.322 1901.26 675.368 1899.17 cv
cp
f
665.161 1931.43 mo
661.724 1942.29 li
661.724 1942.29 634.437 1948.89 590.158 1948.89 cv
545.869 1948.89 518.592 1942.29 518.592 1942.29 cv
515.156 1931.43 li
526.055 1934.11 538.616 1931.03 545.432 1922.83 cv
555.959 1935.53 579.569 1935.57 590.158 1922.83 cv
600.725 1935.58 624.348 1935.53 634.873 1922.83 cv
641.736 1931.09 654.338 1934.09 665.161 1931.43 cv
cp
f
652.412 1818.31 mo
652.423 1818.31 li
646.79 1845.22 635.802 1875.49 624.386 1900.02 cv
615.017 1900.37 604.687 1900.56 593.438 1900.59 cv
619.707 1862.6 645.529 1776.63 590.158 1776.63 cv
534.788 1776.63 560.61 1862.6 586.879 1900.59 cv
575.63 1900.56 565.288 1900.37 555.931 1900.02 cv
544.54 1875.54 533.537 1845.27 527.894 1818.31 cv
527.905 1818.31 li
525.348 1806.46 524.178 1797.16 524.648 1787.23 cv
524.636 1787.22 524.636 1787.22 524.636 1787.21 cv
526.239 1750.74 552.15 1725.29 590.158 1725.29 cv
628.348 1725.29 654.061 1750.8 655.68 1787.19 cv
655.68 1787.21 655.669 1787.22 655.658 1787.23 cv
656.18 1797.53 654.802 1807.24 652.412 1818.31 cv
cp
f
528.834 1898.34 mo
519.298 1897.43 511.653 1896.26 506.057 1894.83 cv
498.378 1893.24 li
481.108 1878.29 454.884 1851.5 450.149 1823.13 cv
442.986 1780.18 470.43 1771.42 488.73 1771.42 cv
502.8 1771.42 513.433 1777.14 520.462 1783.18 cv
519.352 1794.77 520.649 1804.79 522.89 1816.13 cv
505.676 1810.46 486.293 1820.67 490.32 1846.6 cv
493.487 1867.01 515.727 1887.72 528.834 1898.34 cv
cp
f
730.168 1823.13 mo
725.433 1851.5 699.209 1878.29 681.938 1893.24 cv
681.938 1893.24 668.095 1896.76 651.483 1898.34 cv
664.59 1887.72 686.83 1867.01 689.997 1846.6 cv
693.568 1823.54 678.905 1814.6 667.007 1814.6 cv
663.482 1814.6 660.281 1815.19 657.426 1816.13 cv
658.02 1813.13 658.546 1810.12 659.016 1807.12 cv
660.314 1798.81 660.583 1790.78 659.855 1783.18 cv
666.895 1777.14 677.517 1771.42 691.586 1771.42 cv
709.875 1771.42 737.32 1780.18 730.168 1823.13 cv
cp
f
613.786 1695.27 mo
613.786 1699.12 612.991 1702.79 611.57 1706.15 cv
605.817 1703.47 598.396 1701.95 590.158 1701.95 cv
581.921 1701.95 574.5 1703.47 568.747 1706.15 cv
567.325 1702.79 566.531 1699.12 566.531 1695.27 cv
566.531 1685.21 578.42 1672.59 587.288 1664.57 cv
588.916 1663.1 591.397 1663.09 593.025 1664.57 cv
601.893 1672.59 613.786 1685.21 613.786 1695.27 cv
cp
f
327.835 100.941 mo
328.139 100.592 328.616 100.446 329.064 100.565 cv
329.512 100.684 329.854 101.048 329.944 101.502 cv
330.763 105.616 331.894 109.143 333.335 111.957 cv
333.498 112.276 333.512 112.651 333.374 112.981 cv
333.236 113.312 332.959 113.566 332.617 113.673 cv
330.129 114.454 327.758 115.663 325.594 117.225 cv
325.297 117.439 324.92 117.509 324.567 117.414 cv
324.214 117.32 323.922 117.071 323.772 116.738 cv
322.675 114.306 321.223 112.083 319.455 110.169 cv
319.212 109.905 319.097 109.548 319.141 109.192 cv
319.186 108.836 319.385 108.518 319.686 108.322 cv
322.336 106.598 325.074 104.104 327.835 100.941 cv
cp
239.699 94.5862 mo
239.47 94.899 239.105 95.0839 238.718 95.0841 cv
238.33 95.0843 237.965 94.8998 237.736 94.5872 cv
235.141 91.0509 231.993 88.016 228.41 85.6776 cv
228.103 85.4769 227.902 85.1479 227.865 84.7826 cv
227.828 84.4172 227.957 84.0546 228.218 83.7955 cv
231.52 80.5098 234.678 76.0412 237.648 70.5726 cv
237.861 70.1804 238.272 69.9362 238.718 69.9366 cv
239.165 69.937 239.574 70.1822 239.787 70.5745 cv
242.75 76.0423 245.908 80.5102 249.209 83.7955 cv
249.469 84.0545 249.598 84.417 249.561 84.7821 cv
249.524 85.1473 249.324 85.477 249.017 85.6776 cv
245.434 88.0157 242.288 91.0503 239.699 94.5862 cv
cp
153.655 116.738 mo
153.505 117.071 153.213 117.319 152.86 117.413 cv
152.507 117.507 152.129 117.439 151.833 117.225 cv
149.671 115.663 147.304 114.454 144.813 113.673 cv
144.471 113.566 144.193 113.313 144.055 112.981 cv
143.916 112.65 143.931 112.275 144.095 111.955 cv
145.54 109.143 146.666 105.616 147.483 101.503 cv
147.573 101.048 147.915 100.684 148.363 100.565 cv
148.811 100.445 149.288 100.592 149.593 100.941 cv
152.353 104.103 155.091 106.598 157.746 108.322 cv
158.047 108.517 158.246 108.836 158.291 109.192 cv
158.335 109.548 158.221 109.906 157.977 110.17 cv
156.204 112.084 154.752 114.306 153.655 116.738 cv
cp
391.026 124.471 mo
391.28 124.022 391.166 123.455 390.758 123.14 cv
390.35 122.824 389.773 122.857 389.402 123.215 cv
383.303 129.113 377.262 133.058 371.943 134.476 cv
371.615 134.564 371.351 134.806 371.235 135.126 cv
371.12 135.445 371.168 135.801 371.365 136.078 cv
375.28 141.601 376.25 148.494 373.274 154.268 cv
369.781 161.034 362.595 164.26 357.213 161.482 cv
354.703 160.194 353.033 157.828 352.318 154.984 cv
354.923 153.476 357.213 151.606 358.015 148.561 cv
358.864 145.345 358.12 141.881 354.398 141.022 cv
351.65 140.383 349.502 141.442 347.727 144.878 cv
345.685 148.829 348.796 154.144 348.796 154.144 cv
344.149 157.284 338.032 158.133 333.251 156.291 cv
325.55 153.314 320.978 144.315 323.651 134.304 cv
325.979 125.586 333.515 119.445 342.754 117.585 cv
343.093 117.517 343.376 117.284 343.508 116.963 cv
343.64 116.643 343.603 116.278 343.41 115.99 cv
338.233 108.292 335.521 95.5357 335.575 80.0469 cv
335.577 79.5755 335.26 79.1623 334.805 79.0411 cv
334.35 78.9198 333.87 79.121 333.636 79.5306 cv
325.969 92.9901 317.264 102.701 308.944 106.799 cv
308.633 106.952 308.419 107.25 308.374 107.594 cv
308.329 107.937 308.459 108.281 308.719 108.509 cv
315.804 114.723 319.28 123.792 316.951 132.52 cv
314.279 142.53 305.834 148.056 297.675 146.796 cv
292.617 146.023 288.198 143.131 285.727 138.093 cv
285.727 138.093 290.613 134.142 290.804 129.695 cv
291.014 125.114 288.094 123.177 285.183 123.043 cv
282.282 122.91 279.199 124.58 278.989 129.16 cv
278.789 133.608 283.293 137.978 283.293 137.978 cv
280.383 142.788 274.819 145.947 269.704 145.718 cv
257.575 146.128 247.316 134.113 246.801 118.883 cv
246.342 105.384 254.604 93.3437 267.174 86.8507 cv
267.488 86.6886 267.698 86.378 267.731 86.0264 cv
267.764 85.6748 267.615 85.3311 267.337 85.1132 cv
256.151 76.3432 246.402 58.4577 239.715 35.114 cv
239.588 34.6689 239.181 34.3623 238.718 34.3625 cv
238.255 34.3627 237.848 34.6698 237.721 35.1148 cv
231.033 58.4581 221.276 76.3433 210.089 85.1131 cv
209.812 85.3309 209.664 85.675 209.697 86.0264 cv
209.73 86.3778 209.939 86.6887 210.253 86.8507 cv
222.824 93.3437 231.094 105.384 230.626 118.883 cv
230.111 134.113 219.852 146.128 207.723 145.718 cv
202.608 145.947 197.044 142.788 194.134 137.978 cv
194.134 137.978 198.638 133.608 198.438 129.16 cv
198.227 124.58 195.145 122.91 192.244 123.043 cv
189.333 123.177 186.413 125.114 186.623 129.695 cv
186.824 134.142 191.7 138.093 191.7 138.093 cv
189.228 143.131 184.81 146.023 179.752 146.796 cv
171.593 148.056 163.148 142.53 160.476 132.52 cv
158.147 123.792 161.623 114.723 168.716 108.509 cv
168.976 108.281 169.106 107.938 169.06 107.594 cv
169.015 107.25 168.802 106.952 168.491 106.799 cv
160.164 102.701 151.464 92.9883 143.79 79.5273 cv
143.557 79.1181 143.077 78.9175 142.622 79.0388 cv
142.167 79.1601 141.85 79.5729 141.852 80.0439 cv
141.908 95.5338 139.202 108.291 134.019 115.99 cv
133.825 116.277 133.788 116.643 133.92 116.963 cv
134.051 117.284 134.335 117.517 134.675 117.585 cv
143.921 119.445 151.448 125.586 153.776 134.304 cv
156.448 144.315 151.877 153.314 144.176 156.291 cv
139.405 158.133 133.288 157.284 128.631 154.144 cv
128.631 154.144 131.742 148.829 129.7 144.878 cv
127.924 141.442 125.777 140.383 123.029 141.022 cv
119.307 141.881 118.563 145.345 119.412 148.561 cv
120.223 151.606 122.504 153.476 125.119 154.984 cv
124.394 157.828 122.724 160.194 120.223 161.482 cv
114.841 164.26 107.646 161.034 104.163 154.268 cv
101.178 148.494 102.155 141.601 106.064 136.078 cv
106.26 135.801 106.308 135.445 106.193 135.126 cv
106.077 134.807 105.813 134.564 105.485 134.476 cv
100.169 133.06 94.1322 129.119 88.0408 123.226 cv
87.6704 122.868 87.0931 122.836 86.6854 123.151 cv
86.2777 123.466 86.1629 124.034 86.4166 124.482 cv
87.9887 127.262 89.5887 130.151 91.2032 133.14 cv
93.6353 134.968 95.964 136.344 98.1154 137.206 cv
98.4395 137.335 98.6921 137.598 98.8093 137.927 cv
98.9266 138.256 98.8978 138.62 98.7285 138.926 cv
97.8675 140.478 97.2564 142.174 96.8812 143.952 cv
105.212 160.328 113.553 179.032 120.223 198.834 cv
120.233 198.834 li
143.175 196.072 199.967 188.195 236.981 157.64 cv
237.988 156.809 239.446 156.806 240.453 157.638 cv
277.467 188.195 334.252 196.072 357.194 198.834 cv
357.203 198.834 li
363.874 179.032 372.224 160.328 380.555 143.952 cv
380.173 142.174 379.56 140.479 378.699 138.927 cv
378.53 138.621 378.5 138.257 378.617 137.928 cv
378.735 137.599 378.988 137.336 379.313 137.206 cv
381.468 136.345 383.793 134.968 386.233 133.14 cv
387.85 130.147 389.452 127.254 391.026 124.471 cv
cp
241.353 231.767 mo
239.748 232.798 237.687 232.797 236.082 231.767 cv
219.596 221.192 196.695 217.678 177.682 214.112 cv
196.661 210.553 219.515 201.888 235.994 190.805 cv
237.641 189.698 239.795 189.698 241.441 190.806 cv
257.912 201.888 280.766 210.553 299.755 214.112 cv
280.732 217.678 257.831 221.192 241.353 231.767 cv
cp
240.453 164.738 mo
239.444 163.905 237.99 163.907 236.981 164.74 cv
201.103 194.354 146.655 202.671 122.456 205.666 cv
125.529 215.496 128.163 225.544 130.148 235.669 cv
181.625 236.526 205.99 242.635 236.378 259.245 cv
237.837 260.043 239.602 260.041 241.061 259.244 cv
271.448 242.635 295.813 236.525 347.288 235.669 cv
349.273 225.544 351.898 215.496 354.97 205.666 cv
330.762 202.671 276.33 194.353 240.453 164.738 cv
cp
.368627 .345098 .247059 rgb
f
120.233 198.834 mo
120.557 199.817 120.891 200.799 121.206 201.782 cv
120.882 200.799 120.557 199.817 120.223 198.834 cv
120.233 198.834 li
cp
f
354.97 205.666 mo
355.333 204.521 355.696 203.376 356.077 202.24 cv
355.705 203.376 355.333 204.521 354.98 205.666 cv
354.97 205.666 li
cp
f
357.203 198.834 mo
356.822 199.96 356.44 201.105 356.077 202.24 cv
356.44 201.105 356.822 199.96 357.194 198.834 cv
357.203 198.834 li
cp
f
1927.12 1422.75 mo
1924.21 1416.18 1920.38 1410.56 1915.1 1404.94 cv
1914.88 1404.71 1914.8 1404.39 1914.87 1404.08 cv
1914.95 1403.77 1915.18 1403.53 1915.49 1403.43 cv
1922.98 1401.03 1929.16 1397.87 1934.99 1393.37 cv
1927.12 1422.75 li
cp
1905.1 1504.94 mo
1902.2 1498.29 1898.38 1492.62 1893.08 1486.97 cv
1892.83 1486.71 1892.74 1486.34 1892.83 1485.99 cv
1892.92 1485.64 1893.18 1485.36 1893.52 1485.25 cv
1901.05 1482.81 1907.25 1479.6 1913.12 1475.02 cv
1905.1 1504.94 li
cp
1873.91 1495.47 mo
1867.62 1495.47 1862.52 1490.37 1862.52 1484.08 cv
1862.52 1477.79 1867.62 1472.69 1873.91 1472.69 cv
1880.2 1472.69 1885.3 1477.79 1885.3 1484.08 cv
1885.3 1490.37 1880.2 1495.47 1873.91 1495.47 cv
cp
1831.14 1501.99 mo
1830.93 1502.26 1830.59 1502.41 1830.24 1502.38 cv
1829.9 1502.35 1829.59 1502.14 1829.44 1501.83 cv
1824.75 1492.7 1819.15 1486.01 1811.02 1479.77 cv
1810.74 1479.55 1810.58 1479.2 1810.61 1478.84 cv
1810.65 1478.48 1810.86 1478.16 1811.18 1478 cv
1820.28 1473.31 1826.96 1467.73 1833.19 1459.61 cv
1833.41 1459.32 1833.76 1459.17 1834.12 1459.2 cv
1834.48 1459.24 1834.8 1459.45 1834.96 1459.77 cv
1839.64 1468.87 1845.23 1475.55 1853.35 1481.78 cv
1853.63 1482 1853.79 1482.35 1853.75 1482.71 cv
1853.72 1483.07 1853.51 1483.38 1853.19 1483.55 cv
1844.07 1488.24 1837.38 1493.84 1831.14 1501.99 cv
cp
1790.6 1491.14 mo
1784.31 1491.14 1779.21 1486.04 1779.21 1479.75 cv
1779.21 1473.46 1784.31 1468.36 1790.6 1468.36 cv
1796.89 1468.36 1801.99 1473.46 1801.99 1479.75 cv
1801.99 1486.04 1796.89 1491.14 1790.6 1491.14 cv
cp
1752.43 1501.84 mo
1752.27 1502.14 1751.97 1502.35 1751.62 1502.38 cv
1751.28 1502.41 1750.94 1502.26 1750.73 1501.99 cv
1744.47 1493.83 1737.76 1488.22 1728.62 1483.52 cv
1728.31 1483.36 1728.11 1483.06 1728.08 1482.71 cv
1728.05 1482.37 1728.19 1482.03 1728.47 1481.82 cv
1736.63 1475.56 1742.23 1468.86 1746.94 1459.71 cv
1747.09 1459.4 1747.4 1459.2 1747.74 1459.17 cv
1748.09 1459.14 1748.43 1459.28 1748.64 1459.56 cv
1754.89 1467.72 1761.59 1473.33 1770.74 1478.03 cv
1771.04 1478.18 1771.25 1478.49 1771.28 1478.83 cv
1771.31 1479.18 1771.16 1479.52 1770.89 1479.73 cv
1762.73 1485.98 1757.13 1492.68 1752.43 1501.84 cv
cp
1707.94 1495.47 mo
1701.65 1495.47 1696.55 1490.37 1696.55 1484.08 cv
1696.55 1477.79 1701.65 1472.69 1707.94 1472.69 cv
1714.24 1472.69 1719.34 1477.79 1719.34 1484.08 cv
1719.34 1490.37 1714.24 1495.47 1707.94 1495.47 cv
cp
1676.75 1504.94 mo
1668.74 1475.02 li
1674.63 1479.61 1680.84 1482.83 1688.41 1485.27 cv
1688.74 1485.38 1688.99 1485.64 1689.07 1485.98 cv
1689.16 1486.31 1689.07 1486.67 1688.83 1486.92 cv
1683.5 1492.59 1679.67 1498.27 1676.75 1504.94 cv
cp
1722.05 1393.17 mo
1721.72 1393 1721.5 1392.67 1721.47 1392.31 cv
1721.43 1391.94 1721.59 1391.58 1721.88 1391.35 cv
1729.97 1385.14 1735.54 1378.48 1740.22 1369.42 cv
1740.39 1369.09 1740.71 1368.87 1741.08 1368.84 cv
1741.45 1368.8 1741.81 1368.96 1742.03 1369.25 cv
1748.25 1377.34 1754.91 1382.9 1763.98 1387.58 cv
1764.31 1387.75 1764.53 1388.07 1764.56 1388.44 cv
1764.59 1388.81 1764.44 1389.17 1764.14 1389.39 cv
1756.06 1395.61 1750.48 1402.28 1745.81 1411.34 cv
1745.64 1411.67 1745.32 1411.89 1744.95 1411.92 cv
1744.58 1411.95 1744.22 1411.79 1743.99 1411.5 cv
1737.78 1403.42 1731.12 1397.85 1722.05 1393.17 cv
cp
1817.72 1389.39 mo
1817.43 1389.17 1817.27 1388.81 1817.31 1388.44 cv
1817.34 1388.07 1817.56 1387.75 1817.89 1387.58 cv
1826.95 1382.9 1833.61 1377.34 1839.83 1369.25 cv
1840.06 1368.96 1840.42 1368.8 1840.79 1368.84 cv
1841.16 1368.87 1841.48 1369.09 1841.65 1369.42 cv
1846.32 1378.48 1851.89 1385.14 1859.97 1391.35 cv
1860.27 1391.58 1860.42 1391.94 1860.39 1392.31 cv
1860.36 1392.67 1860.14 1393 1859.81 1393.17 cv
1850.75 1397.85 1844.09 1403.42 1837.87 1411.5 cv
1837.65 1411.8 1837.29 1411.95 1836.92 1411.92 cv
1836.55 1411.89 1836.23 1411.67 1836.06 1411.34 cv
1831.38 1402.28 1825.81 1395.61 1817.72 1389.39 cv
cp
1646.87 1393.37 mo
1652.65 1397.83 1658.75 1400.96 1666.14 1403.36 cv
1666.49 1403.47 1666.76 1403.76 1666.85 1404.11 cv
1666.95 1404.47 1666.85 1404.85 1666.6 1405.12 cv
1661.39 1410.67 1657.63 1416.24 1654.74 1422.74 cv
1646.87 1393.37 li
cp
1939.02 1378.33 mo
1927.08 1388.4 1914.84 1394.75 1899.06 1399.22 cv
1906.38 1406.98 1912.01 1414.66 1916.45 1423.14 cv
1928.96 1447.04 1901.91 1466.42 1869.82 1459.01 cv
1851.13 1454.69 1829.68 1430.97 1846.56 1413.92 cv
1854.37 1406.03 1863.05 1399.87 1873.79 1394.43 cv
1874.12 1394.26 1874.34 1393.94 1874.38 1393.56 cv
1874.41 1393.19 1874.25 1392.83 1873.95 1392.61 cv
1860.1 1382.13 1850.75 1370.93 1842.9 1355.44 cv
1842.73 1355.1 1842.41 1354.88 1842.04 1354.85 cv
1841.67 1354.82 1841.3 1354.98 1841.08 1355.27 cv
1830.6 1369.13 1819.4 1378.47 1803.91 1386.32 cv
1803.57 1386.49 1803.35 1386.82 1803.32 1387.19 cv
1803.29 1387.56 1803.45 1387.92 1803.74 1388.15 cv
1813.35 1395.41 1820.78 1403.01 1827.06 1412.16 cv
1843.98 1436.84 1809.22 1460.99 1790.93 1460.99 cv
1772.64 1460.99 1737.87 1436.84 1754.8 1412.16 cv
1761.07 1403.01 1768.52 1395.41 1778.11 1388.15 cv
1778.41 1387.92 1778.57 1387.56 1778.54 1387.19 cv
1778.51 1386.82 1778.28 1386.49 1777.95 1386.32 cv
1762.45 1378.47 1751.26 1369.13 1740.78 1355.27 cv
1740.55 1354.98 1740.19 1354.82 1739.82 1354.85 cv
1739.45 1354.88 1739.12 1355.1 1738.95 1355.44 cv
1731.11 1370.93 1721.77 1382.13 1707.91 1392.61 cv
1707.62 1392.83 1707.46 1393.19 1707.49 1393.56 cv
1707.52 1393.94 1707.74 1394.26 1708.08 1394.43 cv
1718.82 1399.87 1727.5 1406.03 1735.3 1413.92 cv
1752.17 1430.97 1730.73 1454.69 1712.03 1459.01 cv
1679.95 1466.42 1652.9 1447.04 1665.41 1423.14 cv
1669.61 1415.13 1674.87 1407.83 1681.6 1400.5 cv
1681.86 1400.23 1681.95 1399.84 1681.85 1399.48 cv
1681.75 1399.12 1681.47 1398.84 1681.11 1398.74 cv
1666.15 1394.29 1654.36 1388.04 1642.84 1378.33 cv
1641.93 1377.56 1641.01 1376.77 1640.09 1375.95 cv
1639.73 1375.63 1639.21 1375.58 1638.8 1375.83 cv
1638.39 1376.09 1638.19 1376.58 1638.32 1377.04 cv
1641.45 1388.75 li
1652.26 1429.12 li
1678.09 1525.55 li
1678.95 1525.68 li
1711.07 1530.48 1760.62 1533.07 1790.93 1533.07 cv
1821.24 1533.07 1870.78 1530.48 1902.9 1525.68 cv
1903.76 1525.55 li
1929.59 1429.13 li
1940.4 1388.75 li
1940.41 1388.75 li
1943.55 1377.04 li
1943.67 1376.58 1943.48 1376.09 1943.07 1375.84 cv
1942.66 1375.58 1942.13 1375.63 1941.77 1375.95 cv
1940.86 1376.77 1939.94 1377.56 1939.02 1378.33 cv
cp
.290196 .290196 .290196 rgb
f
1790.93 1541.41 mo
1761.34 1541.41 1712.77 1538.91 1680.43 1534.27 cv
1685.86 1554.54 li
1703.61 1561.74 1757.94 1566.41 1790.93 1566.41 cv
1823.92 1566.41 1878.25 1561.74 1896 1554.54 cv
1901.43 1534.27 li
1869.1 1538.91 1820.53 1541.41 1790.93 1541.41 cv
cp
f
1392.05 1005.65 mo
1391.82 1005.05 1391.25 1004.66 1390.61 1004.66 cv
1389.97 1004.66 1389.39 1005.05 1389.16 1005.65 cv
1385.42 1015.29 1378.79 1025.83 1373.28 1032.31 cv
1373 1032.64 1372.87 1033.07 1372.92 1033.5 cv
1372.97 1033.92 1373.2 1034.31 1373.54 1034.57 cv
1379.23 1038.74 1385.19 1044.41 1389.14 1052.91 cv
1389.41 1053.48 1389.98 1053.85 1390.61 1053.85 cv
1391.24 1053.85 1391.81 1053.48 1392.07 1052.91 cv
1396.02 1044.41 1401.99 1038.74 1407.67 1034.57 cv
1408.02 1034.31 1408.24 1033.92 1408.29 1033.5 cv
1408.34 1033.07 1408.21 1032.64 1407.93 1032.31 cv
1402.42 1025.83 1395.8 1015.29 1392.05 1005.65 cv
cp
f
1334.12 1064.51 mo
1333.88 1063.93 1333.31 1063.55 1332.68 1063.55 cv
1332.06 1063.55 1331.49 1063.93 1331.25 1064.51 cv
1328.5 1071.22 1323.99 1078.38 1320.15 1082.98 cv
1319.87 1083.31 1319.75 1083.73 1319.8 1084.15 cv
1319.85 1084.58 1320.07 1084.96 1320.41 1085.22 cv
1324.36 1088.17 1328.46 1092.12 1331.29 1097.88 cv
1331.55 1098.41 1332.09 1098.75 1332.68 1098.75 cv
1333.27 1098.75 1333.81 1098.41 1334.08 1097.88 cv
1336.91 1092.12 1341.01 1088.17 1344.96 1085.22 cv
1345.3 1084.96 1345.52 1084.58 1345.57 1084.15 cv
1345.62 1083.73 1345.49 1083.31 1345.22 1082.98 cv
1341.38 1078.38 1336.87 1071.22 1334.12 1064.51 cv
cp
f
1447.09 1065.2 mo
1447.33 1064.61 1447.9 1064.23 1448.53 1064.23 cv
1449.16 1064.23 1449.73 1064.61 1449.96 1065.2 cv
1452.72 1071.91 1457.22 1079.07 1461.07 1083.67 cv
1461.34 1083.99 1461.47 1084.42 1461.42 1084.84 cv
1461.37 1085.27 1461.15 1085.65 1460.8 1085.91 cv
1456.88 1088.84 1452.81 1092.75 1449.98 1098.46 cv
1449.7 1099.01 1449.14 1099.36 1448.53 1099.36 cv
1447.92 1099.36 1447.36 1099.01 1447.08 1098.46 cv
1444.25 1092.75 1440.18 1088.84 1436.25 1085.91 cv
1435.91 1085.65 1435.69 1085.27 1435.64 1084.84 cv
1435.59 1084.42 1435.72 1083.99 1435.99 1083.67 cv
1439.84 1079.07 1444.34 1071.91 1447.09 1065.2 cv
cp
f
1449.14 1179.75 mo
1448.85 1180.42 1448.19 1180.85 1447.47 1180.85 cv
1446.74 1180.85 1446.09 1180.42 1445.8 1179.75 cv
1442.79 1172.87 1437.54 1167.98 1432.28 1164.29 cv
1431.58 1163.8 1431.41 1162.84 1431.89 1162.13 cv
1439.13 1151.68 1444.22 1136.67 1446.41 1126.74 cv
1446.52 1126.25 1446.96 1125.9 1447.47 1125.9 cv
1447.97 1125.9 1448.41 1126.25 1448.52 1126.74 cv
1450.71 1136.67 1455.8 1151.68 1463.03 1162.14 cv
1463.52 1162.84 1463.34 1163.8 1462.65 1164.29 cv
1457.38 1167.98 1452.14 1172.87 1449.14 1179.75 cv
cp
1392.83 1183.18 mo
1392.56 1183.9 1391.88 1184.37 1391.12 1184.37 cv
1390.36 1184.37 1389.67 1183.9 1389.41 1183.18 cv
1384.68 1170.46 1375.24 1161.73 1365.9 1155.32 cv
1365.56 1155.08 1365.33 1154.72 1365.25 1154.31 cv
1365.18 1153.91 1365.27 1153.48 1365.51 1153.15 cv
1378.22 1135.17 1386.92 1108.35 1390.06 1092.32 cv
1390.16 1091.81 1390.6 1091.45 1391.12 1091.45 cv
1391.63 1091.45 1392.08 1091.81 1392.18 1092.32 cv
1395.32 1108.35 1404.01 1135.17 1416.73 1153.14 cv
1416.97 1153.48 1417.06 1153.9 1416.99 1154.31 cv
1416.92 1154.72 1416.68 1155.08 1416.34 1155.32 cv
1407 1161.73 1397.56 1170.46 1392.83 1183.18 cv
cp
1335.42 1179.75 mo
1335.13 1180.41 1334.47 1180.84 1333.75 1180.84 cv
1333.02 1180.84 1332.37 1180.41 1332.08 1179.75 cv
1329.08 1172.87 1323.83 1167.98 1318.57 1164.29 cv
1317.87 1163.8 1317.7 1162.84 1318.18 1162.13 cv
1325.42 1151.67 1330.51 1136.66 1332.69 1126.74 cv
1332.8 1126.24 1333.24 1125.89 1333.75 1125.89 cv
1334.25 1125.89 1334.69 1126.24 1334.8 1126.74 cv
1337 1136.66 1342.09 1151.67 1349.32 1162.13 cv
1349.8 1162.84 1349.63 1163.8 1348.93 1164.29 cv
1343.67 1167.98 1338.42 1172.87 1335.42 1179.75 cv
cp
1480.18 1157.58 mo
1468.04 1148.73 1454.87 1114.79 1450.04 1102.14 cv
1449.79 1101.51 1449.19 1101.08 1448.51 1101.07 cv
1447.84 1101.06 1447.22 1101.46 1446.95 1102.08 cv
1443.3 1110.55 1434.48 1130.06 1431.58 1130.06 cv
1421.87 1130.06 1398.43 1072.91 1392.17 1057.19 cv
1391.91 1056.55 1391.29 1056.13 1390.61 1056.13 cv
1389.92 1056.13 1389.3 1056.55 1389.05 1057.19 cv
1382.78 1072.91 1359.34 1130.06 1349.63 1130.06 cv
1346.71 1130.06 1337.78 1110.26 1334.18 1101.89 cv
1333.93 1101.31 1333.36 1100.94 1332.72 1100.96 cv
1332.09 1100.97 1331.53 1101.37 1331.31 1101.96 cv
1326.98 1113.55 1313.2 1148.71 1301.03 1157.58 cv
1287.36 1167.56 1266.08 1172.06 1247.71 1172.58 cv
1247.07 1172.6 1246.49 1172.99 1246.23 1173.58 cv
1245.97 1174.16 1246.06 1174.85 1246.48 1175.34 cv
1249.17 1178.5 1251.89 1182.06 1254.39 1186.01 cv
1254.93 1186.1 li
1293.17 1192.67 1342.62 1196.51 1390.62 1196.66 cv
1438.59 1196.51 1488.04 1192.67 1526.28 1186.1 cv
1526.82 1186.01 li
1529.37 1181.99 1532.15 1178.36 1534.89 1175.15 cv
1535.28 1174.69 1535.37 1174.06 1535.13 1173.51 cv
1534.89 1172.96 1534.35 1172.61 1533.75 1172.59 cv
1515.32 1172.1 1493.92 1167.6 1480.18 1157.58 cv
cp
f
1390.61 1205.71 mo
1390.6 1205.71 li
1344.66 1205.56 1297.01 1201.71 1259.34 1195.12 cv
1261.57 1200.05 1263.33 1205.44 1264.26 1211.31 cv
1318.63 1210.92 1371.52 1218.11 1389.04 1229.19 cv
1390 1229.79 1391.22 1229.79 1392.18 1229.19 cv
1409.69 1218.11 1462.58 1210.92 1516.96 1211.31 cv
1517.88 1205.44 1519.64 1200.05 1521.88 1195.13 cv
1484.2 1201.71 1436.55 1205.56 1390.61 1205.71 cv
cp
f
1041.17 1916.2 mo
1038.62 1916.2 1036.56 1914.14 1036.56 1911.59 cv
1036.56 1909.04 1038.62 1906.97 1041.17 1906.97 cv
1043.72 1906.97 1045.78 1909.04 1045.78 1911.59 cv
1045.78 1914.14 1043.72 1916.2 1041.17 1916.2 cv
cp
1020.58 1920.82 mo
1016.47 1920.82 1013.13 1917.47 1013.13 1913.36 cv
1013.13 1909.25 1016.47 1905.91 1020.58 1905.91 cv
1024.7 1905.91 1028.04 1909.25 1028.04 1913.36 cv
1028.04 1917.47 1024.7 1920.82 1020.58 1920.82 cv
cp
1002.13 1913.71 mo
1002.13 1920.38 996.727 1925.79 990.062 1925.79 cv
983.397 1925.79 977.996 1920.38 977.996 1913.71 cv
977.996 1907.06 983.397 1901.65 990.062 1901.65 cv
996.727 1901.65 1002.13 1907.06 1002.13 1913.71 cv
cp
960.25 1920.82 mo
956.136 1920.82 952.792 1917.47 952.792 1913.36 cv
952.792 1909.25 956.136 1905.91 960.25 1905.91 cv
964.365 1905.91 967.698 1909.25 967.698 1913.36 cv
967.698 1917.47 964.365 1920.82 960.25 1920.82 cv
cp
939.665 1916.2 mo
937.115 1916.2 935.047 1914.14 935.047 1911.59 cv
935.047 1909.04 937.115 1906.97 939.665 1906.97 cv
942.205 1906.97 944.273 1909.04 944.273 1911.59 cv
944.273 1914.14 942.205 1916.2 939.665 1916.2 cv
cp
1059.64 1888.2 mo
1056.54 1890.48 1052.43 1890.83 1048.99 1889.11 cv
1043.36 1886.3 li
1039.99 1884.62 1035.97 1884.92 1032.88 1887.08 cv
1027.79 1890.66 li
1024.61 1892.89 1020.45 1893.13 1017.03 1891.29 cv
1011.49 1888.3 li
1008.22 1886.54 1004.25 1886.68 1001.11 1888.68 cv
995.851 1892.03 li
992.545 1894.14 988.327 1894.18 984.984 1892.13 cv
979.639 1888.86 li
976.485 1886.93 972.536 1886.85 969.303 1888.64 cv
963.818 1891.69 li
960.389 1893.59 956.175 1893.38 952.961 1891.13 cv
947.853 1887.56 li
944.803 1885.43 940.838 1885.11 937.491 1886.74 cv
931.82 1889.5 li
928.327 1891.2 924.174 1890.78 921.092 1888.41 cv
919.68 1887.33 li
923.163 1899.57 925.113 1913.09 925.113 1927.56 cv
925.113 1927.56 946.759 1935.72 990.416 1935.72 cv
1034.07 1935.72 1055.72 1927.56 1055.72 1927.56 cv
1055.72 1912.97 1057.7 1899.34 1061.24 1887.03 cv
1059.64 1888.2 li
cp
f
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
971.245 1788.44 mo
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
cp
1121.02 1809.73 mo
1119.18 1812.31 1109.31 1807.96 1092.49 1816.21 cv
1079.22 1822.73 1066.01 1836.16 1055.72 1857.28 cv
1055.7 1856.67 1055.69 1856.06 1055.69 1855.45 cv
1055.69 1826.72 1080.01 1799.69 1101.46 1799.69 cv
1116.77 1799.69 1122.8 1807.24 1121.02 1809.73 cv
cp
990.416 1856.58 mo
985.904 1833.15 948.184 1819.99 948.184 1785.6 cv
948.184 1756.14 982.604 1758.27 990.416 1732.01 cv
998.227 1758.27 1032.65 1756.14 1032.65 1785.6 cv
1032.65 1819.99 994.927 1833.15 990.416 1856.58 cv
cp
925.113 1857.28 mo
914.826 1836.16 901.613 1822.73 888.336 1816.21 cv
871.513 1807.96 861.654 1812.31 859.811 1809.73 cv
858.032 1807.24 864.065 1799.69 879.367 1799.69 cv
900.82 1799.69 925.145 1826.72 925.145 1855.45 cv
925.145 1856.06 925.135 1856.67 925.113 1857.28 cv
cp
1100.08 1788.44 mo
1068.14 1788.44 1057.14 1826.77 1042.59 1826.77 cv
1038.69 1826.77 1034.07 1825.48 1034.07 1819.31 cv
1034.07 1804.4 1066.72 1797.66 1066.72 1773.53 cv
1066.72 1735.8 1001.53 1736.58 991.669 1704.97 cv
990.855 1702.38 990.416 1699.58 990.416 1696.51 cv
990.416 1699.58 989.976 1702.38 989.162 1704.97 cv
979.303 1736.58 914.108 1735.8 914.108 1773.53 cv
914.108 1797.66 946.759 1804.4 946.759 1819.31 cv
946.759 1825.48 942.141 1826.77 938.24 1826.77 cv
923.688 1826.77 912.683 1788.44 880.75 1788.44 cv
853.414 1788.44 840.287 1806.18 840.287 1823.57 cv
844.648 1822.37 848.945 1821.79 853.156 1821.79 cv
877.996 1821.79 901.956 1841.92 914.997 1873.7 cv
921.196 1878.14 li
924.33 1880.38 928.457 1880.68 931.88 1878.91 cv
937.445 1876.03 li
940.787 1874.3 944.809 1874.54 947.922 1876.65 cv
953.063 1880.14 li
956.273 1882.32 960.439 1882.5 963.828 1880.61 cv
969.299 1877.56 li
972.562 1875.73 976.558 1875.83 979.729 1877.81 cv
985.016 1881.1 li
988.323 1883.17 992.514 1883.18 995.831 1881.13 cv
1001.14 1877.85 li
1004.31 1875.89 1008.3 1875.81 1011.56 1877.65 cv
1016.99 1880.71 li
1020.39 1882.62 1024.57 1882.45 1027.79 1880.26 cv
1032.93 1876.77 li
1036.04 1874.66 1040.05 1874.42 1043.39 1876.13 cv
1048.95 1878.99 li
1052.38 1880.76 1056.52 1880.45 1059.65 1878.18 cv
1065.83 1873.71 li
1078.87 1841.92 1102.82 1821.79 1127.67 1821.79 cv
1131.89 1821.79 1136.18 1822.37 1140.54 1823.57 cv
1140.54 1806.18 1127.41 1788.44 1100.08 1788.44 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
990.416 1755.78 mo
984.029 1765.36 971.245 1771.04 971.245 1788.44 cv
971.245 1807.24 987.222 1815.41 990.416 1823.93 cv
993.609 1815.41 1009.58 1807.24 1009.58 1788.44 cv
1009.58 1771.04 996.802 1765.36 990.416 1755.78 cv
cp
f
1004.61 1690.83 mo
1004.61 1698.67 998.255 1705.03 990.414 1705.03 cv
982.574 1705.03 976.218 1698.67 976.218 1690.83 cv
976.218 1682.99 982.574 1676.64 990.414 1676.64 cv
998.255 1676.64 1004.61 1682.99 1004.61 1690.83 cv
cp
f
1009.58 1788.44 mo
1009.58 1807.24 993.609 1815.41 990.416 1823.93 cv
987.222 1815.41 971.245 1807.24 971.245 1788.44 cv
971.245 1771.04 984.029 1765.36 990.416 1755.78 cv
996.802 1765.36 1009.58 1771.04 1009.58 1788.44 cv
cp
f
1009.58 1788.44 mo
1009.58 1807.24 993.609 1815.41 990.416 1823.93 cv
987.222 1815.41 971.245 1807.24 971.245 1788.44 cv
971.245 1771.04 984.029 1765.36 990.416 1755.78 cv
996.802 1765.36 1009.58 1771.04 1009.58 1788.44 cv
cp
f
1049.95 869.432 mo
1046.1 869.432 1042.99 866.313 1042.99 862.466 cv
1042.99 858.619 1046.1 855.5 1049.95 855.5 cv
1053.8 855.5 1056.92 858.619 1056.92 862.466 cv
1056.92 866.313 1053.8 869.432 1049.95 869.432 cv
cp
990.415 879.413 mo
983.112 879.413 977.189 873.49 977.189 866.186 cv
977.189 858.872 983.112 852.949 990.415 852.949 cv
997.719 852.949 1003.64 858.872 1003.64 866.186 cv
1003.64 873.49 997.719 879.413 990.415 879.413 cv
cp
930.881 869.432 mo
927.034 869.432 923.914 866.313 923.914 862.466 cv
923.914 858.619 927.034 855.5 930.881 855.5 cv
934.727 855.5 937.836 858.619 937.836 862.466 cv
937.836 866.313 934.727 869.432 930.881 869.432 cv
cp
1022.06 853.603 mo
1006.33 832.517 974.631 833.503 960.19 855.205 cv
946.081 838.324 921.145 837.14 905.503 851.558 cv
906.22 856.164 906.599 861.117 906.599 866.386 cv
915.515 873.627 953.339 886.168 990.415 886.168 cv
1027.48 886.168 1065.32 873.627 1074.23 866.386 cv
1074.23 861.117 1074.61 856.164 1075.33 851.558 cv
1059.81 837.25 1035.84 838.679 1022.06 853.603 cv
cp
f
1137.49 808.706 mo
1137.49 810.688 1137.28 812.622 1136.88 814.487 cv
1136.72 815.233 1136.13 815.812 1135.39 815.956 cv
1134.64 816.101 1133.87 815.783 1133.45 815.149 cv
1129.38 809.066 1122.39 805.06 1114.48 805.06 cv
1101.76 805.06 1087.02 815.536 1079.39 835.739 cv
1072.46 827.002 1061.74 821.374 1049.72 821.374 cv
1041 821.374 1032.98 824.325 1026.59 829.279 cv
1020.87 815.641 1007.4 806.072 991.691 806.072 cv
975.376 806.072 961.475 816.389 956.164 830.87 cv
939.961 816.536 914.993 818.645 901.445 835.739 cv
893.815 815.536 879.071 805.06 866.351 805.06 cv
858.712 805.06 851.949 808.792 847.821 814.521 cv
847.292 815.255 846.376 815.602 845.493 815.401 cv
844.611 815.2 843.935 814.491 843.776 813.6 cv
843.493 812.011 843.344 810.375 843.344 808.706 cv
843.344 793.172 856.043 780.578 871.715 780.578 cv
872.916 780.578 874.107 780.652 875.256 780.81 cv
875.098 779.629 875.024 778.417 875.024 777.195 cv
875.024 761.228 887.397 748.286 902.636 748.286 cv
904.31 748.286 905.947 748.444 907.536 748.744 cv
908.416 748.911 909.114 749.583 909.313 750.457 cv
909.512 751.33 909.175 752.238 908.454 752.77 cv
902.768 756.966 899.064 763.894 899.064 771.736 cv
899.064 784.14 908.549 793.731 918.518 794.173 cv
935.876 794.922 945.614 783.582 945.614 770.503 cv
945.614 757.424 933.473 746.843 918.518 746.843 cv
917.805 746.843 917.153 746.444 916.828 745.81 cv
916.504 745.176 916.563 744.415 916.978 743.837 cv
924.769 733.007 936.067 726.186 948.639 726.186 cv
969.401 726.186 986.674 744.735 990.415 769.301 cv
997.059 725.679 1040.88 711.581 1063.87 743.844 cv
1064.28 744.422 1064.34 745.183 1064.01 745.814 cv
1063.69 746.445 1063.03 746.843 1062.32 746.843 cv
1062.32 746.843 1062.32 746.843 1062.31 746.843 cv
1047.36 746.843 1035.22 757.424 1035.22 770.503 cv
1035.22 783.582 1044.95 794.922 1062.31 794.173 cv
1072.28 793.731 1081.77 784.14 1081.77 771.736 cv
1081.77 763.617 1077.8 756.479 1071.78 752.337 cv
1071.15 751.91 1070.84 751.155 1070.99 750.414 cv
1071.13 749.673 1071.7 749.088 1072.43 748.922 cv
1074.29 748.506 1076.22 748.286 1078.19 748.286 cv
1093.43 748.286 1105.81 761.228 1105.81 777.195 cv
1105.81 778.417 1105.73 779.629 1105.58 780.81 cv
1106.72 780.652 1107.91 780.578 1109.12 780.578 cv
1124.79 780.578 1137.49 793.172 1137.49 808.706 cv
cp
f
1009.04 725.575 mo
999.511 731.15 992.618 740.077 990.415 750.51 cv
988.213 740.077 981.32 731.15 971.793 725.575 cv
972.743 707.069 978.948 674.35 988.186 654.294 cv
988.587 653.424 989.457 652.867 990.415 652.867 cv
991.373 652.867 992.243 653.423 992.644 654.293 cv
1001.85 674.289 1008.09 706.971 1009.04 725.575 cv
cp
f
969.928 707.711 mo
969.279 711.116 968.413 716.899 968.062 720.358 cv
968.025 720.451 967.744 723.392 967.736 723.488 cv
962.74 721.212 957.186 719.81 951.305 719.494 cv
953.111 710.969 961.667 705.723 969.928 707.711 cv
cp
f
1029.53 719.494 mo
1023.64 719.81 1018.09 721.212 1013.1 723.488 cv
1013.09 723.389 1012.81 720.453 1012.77 720.358 cv
1012.44 717.124 1011.59 711.345 1010.9 707.711 cv
1019.17 705.722 1027.72 710.973 1029.53 719.494 cv
cp
f
1733.02 804.137 mo
1732.8 804.303 1704.84 824.721 1704.62 824.894 cv
1691.96 813.906 li
1691.46 813.468 1691.31 812.751 1691.58 812.145 cv
1699.04 795.932 1698.29 797.557 1698.59 796.906 cv
1733.02 804.137 li
cp
f
1792.16 866.268 mo
1791.87 866.64 1791.43 866.858 1790.96 866.859 cv
1790.49 866.859 1790.05 866.641 1789.77 866.269 cv
1782.34 856.544 1769.44 839.592 1763.52 831.846 cv
1763.11 831.308 1763.11 830.562 1763.52 830.025 cv
1767.2 825.184 1783.4 803.921 1789.77 795.592 cv
1790.05 795.22 1790.49 795.002 1790.96 795.002 cv
1791.43 795.002 1791.87 795.22 1792.16 795.593 cv
1797.52 802.629 1813.87 824.078 1818.4 830.024 cv
1818.81 830.561 1818.81 831.307 1818.4 831.844 cv
1813.94 837.688 1801.73 853.716 1792.16 866.268 cv
cp
1856.61 766.234 mo
1852.43 766.234 1842.53 766.373 1834.4 766.5 cv
1831.67 766.542 1829.1 765.213 1827.56 762.96 cv
1826.02 760.706 1825.71 757.831 1826.74 755.301 cv
1853.22 690.008 li
1853.43 689.483 1853.23 688.882 1852.74 688.592 cv
1852.25 688.303 1851.63 688.412 1851.27 688.849 cv
1836.6 706.664 1806.31 740.904 1790.96 748.009 cv
1775.75 741.091 1745.57 706.79 1730.59 688.713 cv
1730.23 688.278 1729.61 688.171 1729.12 688.461 cv
1728.64 688.75 1728.43 689.351 1728.65 689.875 cv
1755.18 755.301 li
1756.2 757.83 1755.89 760.705 1754.35 762.957 cv
1752.81 765.21 1750.24 766.542 1747.51 766.5 cv
1739.39 766.373 1729.49 766.234 1725.31 766.234 cv
1707.32 766.234 1659.72 734.049 1642.75 722.16 cv
1642.29 721.841 1641.67 721.902 1641.29 722.304 cv
1640.9 722.707 1640.87 723.331 1641.21 723.773 cv
1689.82 787.159 li
1699.42 792.93 li
1739.87 801.41 1731.23 799.598 1742.81 802.032 cv
1702.22 831.66 1707.84 827.552 1705.77 829.145 cv
1709.48 845.306 li
1720.51 857.764 1749.74 865.92 1763.65 868.798 cv
1767.55 869.606 1778.91 877.383 1789.89 888.751 cv
1790.17 889.044 1790.56 889.209 1790.96 889.209 cv
1791.37 889.208 1791.76 889.043 1792.04 888.75 cv
1803.01 877.383 1814.37 869.606 1818.27 868.798 cv
1832.17 865.92 1861.41 857.764 1872.44 845.306 cv
1876.16 829.145 li
1873.74 827.295 1879.2 831.302 1839.11 802.032 cv
1850.69 799.597 1842.06 801.408 1882.49 792.93 cv
1892.09 787.159 li
1940.66 723.854 li
1941 723.406 1940.97 722.773 1940.58 722.364 cv
1940.18 721.956 1939.55 721.893 1939.09 722.217 cv
1922.04 734.152 1874.57 766.234 1856.61 766.234 cv
cp
f
1790.96 740.111 mo
1796.44 737.578 1803.17 731.901 1807.67 727.854 cv
1809.38 700.308 1804.82 671.981 1790.96 649.826 cv
1777.1 671.982 1772.54 700.309 1774.25 727.855 cv
1778.62 731.78 1785.62 737.683 1790.96 740.111 cv
cp
f
1890.33 812.145 mo
1890.61 812.751 1890.46 813.469 1889.95 813.906 cv
1877.3 824.894 li
1877.09 824.721 1849.11 804.296 1848.89 804.137 cv
1883.33 796.906 li
1883.62 797.557 1882.88 795.931 1890.33 812.145 cv
cp
f
1813.28 830.025 mo
1813.69 830.563 1813.69 831.308 1813.28 831.845 cv
1792.16 859.564 li
1791.87 859.936 1791.43 860.155 1790.96 860.155 cv
1790.49 860.155 1790.05 859.937 1789.77 859.564 cv
1768.63 831.846 li
1768.22 831.308 1768.22 830.563 1768.63 830.025 cv
1789.77 802.297 li
1790.05 801.924 1790.49 801.706 1790.96 801.706 cv
1791.43 801.706 1791.87 801.925 1792.16 802.297 cv
1813.28 830.025 li
cp
f
1466.83 516.092 mo
1466.83 508.358 1458.83 491.553 1449.49 485.693 cv
1462.3 485.424 1480.43 476.623 1489.49 467.833 cv
1466.83 516.092 li
cp
1390.67 505.955 mo
1389.08 500.468 1370.14 476.778 1364.28 474.034 cv
1377.35 462.811 1389.08 439.618 1390.67 424.905 cv
1392.28 439.618 1404.01 462.811 1417.08 474.034 cv
1411.21 476.778 1392.28 500.468 1390.67 505.955 cv
cp
1361.61 373.706 mo
1370.41 368.115 1385.07 353.443 1390.67 344.642 cv
1396.28 353.443 1410.94 368.115 1419.74 373.706 cv
1410.94 379.307 1396.28 393.968 1390.67 402.769 cv
1385.07 393.968 1370.41 379.307 1361.61 373.706 cv
cp
1314.52 516.092 mo
1291.86 467.833 li
1300.93 476.623 1319.06 485.424 1331.85 485.693 cv
1322.53 491.553 1314.52 508.358 1314.52 516.092 cv
cp
1483.08 408.898 mo
1490.97 414.81 1500.92 431.811 1493.76 443.035 cv
1478.35 467.17 1444.18 468.568 1426.18 466.197 cv
1446.18 456.288 1457.33 435.994 1455.66 409.375 cv
1455.55 407.656 1455.38 405.896 1455.17 404.115 cv
1455.14 403.877 1445.63 403.535 1434.02 406.672 cv
1424.6 409.188 1413.8 413.992 1405.52 422.938 cv
1409.4 416.529 1413.98 409.654 1418.98 402.945 cv
1427.26 391.804 1436.72 381.15 1446.18 373.882 cv
1429.01 360.681 1408.14 336.318 1393.43 312.442 cv
1392.5 310.909 1391.58 309.367 1390.67 307.845 cv
1389.78 309.367 1388.86 310.909 1387.92 312.442 cv
1373.21 336.318 1352.33 360.681 1335.18 373.882 cv
1344.63 381.15 1354.08 391.804 1362.37 402.945 cv
1367.37 409.654 1371.94 416.529 1375.83 422.938 cv
1367.54 413.992 1356.74 409.188 1347.34 406.672 cv
1335.72 403.535 1326.21 403.877 1326.19 404.115 cv
1325.97 405.896 1325.81 407.656 1325.69 409.375 cv
1324.02 435.994 1335.17 456.288 1355.17 466.197 cv
1337.17 468.568 1303 467.17 1287.59 443.035 cv
1280.43 431.811 1290.38 414.81 1298.27 408.898 cv
1277.23 406.879 1258.39 401.102 1243.95 392.819 cv
1311.86 528.889 li
1311.86 528.889 1325.46 540.082 1390.67 540.082 cv
1455.89 540.082 1469.5 528.889 1469.5 528.889 cv
1537.4 392.819 li
1522.96 401.102 1504.13 406.879 1483.08 408.898 cv
cp
f
1790.93 1921.31 mo
1840.56 1921.31 1857.44 1915.69 1862.86 1912.78 cv
1862.53 1917.12 1862.24 1921.5 1861.99 1925.83 cv
1861.99 1925.83 1855.06 1935.64 1790.93 1935.64 cv
1726.83 1935.64 1719.87 1925.83 1719.87 1925.83 cv
1719.62 1921.5 1719.34 1917.12 1719 1912.78 cv
1724.42 1915.67 1741.29 1921.31 1790.93 1921.31 cv
cp
f
1890.98 1788.61 mo
1863.15 1788.61 1861.53 1820.17 1850.85 1837.88 cv
1845.71 1846.42 1834.61 1849.19 1826.06 1844.03 cv
1821.14 1841.06 1818.56 1837.24 1817.74 1832.96 cv
1813.84 1847.47 1812.01 1864.73 1816.97 1872.07 cv
1818.61 1874.49 1820.92 1875.67 1824.02 1875.67 cv
1835.96 1875.67 1842.89 1865.14 1850.9 1852.94 cv
1860.39 1838.52 1871.13 1822.17 1893.03 1822.17 cv
1898.33 1822.17 1908.22 1823.24 1914.98 1830.42 cv
1918.66 1834.33 1920.81 1839.42 1921.37 1845.59 cv
1922.84 1840.85 1923.65 1835.69 1923.65 1830.27 cv
1923.65 1807.26 1909.03 1788.61 1890.98 1788.61 cv
cp
1769.37 1799.56 mo
1761.58 1778.09 li
1769.86 1751.12 li
1790.93 1733.36 li
1812.01 1751.12 li
1820.29 1778.09 li
1812.5 1799.56 li
1790.93 1807.22 li
1769.37 1799.56 li
cp
1911.52 1833.69 mo
1905.98 1827.81 1897.55 1826.93 1893.03 1826.93 cv
1873.7 1826.93 1864.14 1841.49 1854.89 1855.56 cv
1846.48 1868.35 1838.54 1880.43 1824.02 1880.43 cv
1819.35 1880.43 1815.55 1878.47 1813.03 1874.75 cv
1807.25 1866.23 1801.96 1826 1840.35 1793.1 cv
1836.46 1777.33 1833.32 1766.74 1831.77 1748.6 cv
1806.62 1719.45 1798.13 1702.54 1790.93 1676.72 cv
1783.74 1702.54 1775.24 1719.45 1750.1 1748.6 cv
1748.55 1766.74 1745.4 1777.33 1741.52 1793.1 cv
1780.28 1826.28 1774.33 1866.69 1768.81 1874.79 cv
1766.29 1878.48 1762.5 1880.43 1757.85 1880.43 cv
1743.33 1880.43 1735.38 1868.35 1726.97 1855.56 cv
1717.73 1841.49 1708.16 1826.93 1688.84 1826.93 cv
1684.31 1826.93 1675.89 1827.81 1670.35 1833.69 cv
1666.97 1837.3 1665.19 1842.28 1665.11 1848.55 cv
1669.99 1843.07 1676.81 1839.67 1684.35 1839.67 cv
1708.07 1839.67 1715.29 1871.21 1718.44 1906.03 cv
1723.21 1908.84 1739.45 1914.88 1790.93 1914.88 cv
1842.38 1914.88 1858.63 1908.86 1863.42 1906.05 cv
1866.58 1871.21 1873.8 1839.67 1897.52 1839.67 cv
1905.06 1839.67 1911.88 1843.07 1916.76 1848.55 cv
1916.67 1842.28 1914.9 1837.3 1911.52 1833.69 cv
cp
1764.14 1832.97 mo
1763.31 1837.25 1760.72 1841.07 1755.8 1844.03 cv
1747.26 1849.19 1736.16 1846.42 1731.01 1837.88 cv
1720.34 1820.17 1718.72 1788.61 1690.89 1788.61 cv
1672.84 1788.61 1658.21 1807.26 1658.21 1830.27 cv
1658.21 1835.69 1659.02 1840.86 1660.49 1845.59 cv
1661.06 1839.42 1663.2 1834.34 1666.88 1830.42 cv
1673.65 1823.24 1683.54 1822.17 1688.84 1822.17 cv
1710.74 1822.17 1721.48 1838.51 1730.96 1852.94 cv
1738.98 1865.14 1745.9 1875.67 1757.85 1875.67 cv
1760.94 1875.67 1763.24 1874.5 1764.87 1872.11 cv
1770.03 1864.56 1767.98 1847.22 1764.14 1832.97 cv
cp
f
1810.36 1777.54 mo
1805.2 1791.74 li
1790.93 1796.82 li
1776.66 1791.74 li
1771.5 1777.54 li
1776.98 1759.68 li
1790.93 1747.93 li
1804.88 1759.68 li
1810.36 1777.54 li
cp
f
88.474 1205.54 mo
91.328 1211.51 93.9176 1217.83 96.2649 1224.6 cv
96.2649 1224.6 128.001 1234.91 189.898 1234.91 cv
251.795 1234.91 283.532 1224.6 283.532 1224.6 cv
285.879 1217.83 288.468 1211.51 291.322 1205.54 cv
276.303 1208.18 242.263 1212.89 189.898 1212.89 cv
137.533 1212.89 103.494 1208.18 88.474 1205.54 cv
cp
189.898 1196.01 mo
157.126 1195.96 130.503 1194.41 110.171 1192.52 cv
139.381 1187.38 170.822 1165.17 188.922 1139.7 cv
189.147 1139.38 189.51 1139.2 189.898 1139.2 cv
190.286 1139.2 190.65 1139.38 190.875 1139.7 cv
208.974 1165.17 240.415 1187.38 269.625 1192.52 cv
249.294 1194.41 222.67 1195.96 189.898 1196.01 cv
cp
188.864 1042.36 mo
189.078 1041.99 189.472 1041.76 189.898 1041.76 cv
190.323 1041.76 190.718 1041.99 190.932 1042.36 cv
198.822 1055.89 207.333 1068.45 217.223 1080.48 cv
217.521 1080.84 217.58 1081.34 217.375 1081.76 cv
209.839 1097.22 201.034 1111.3 190.863 1125.12 cv
190.637 1125.43 190.279 1125.61 189.898 1125.61 cv
189.517 1125.61 189.159 1125.43 188.933 1125.12 cv
178.763 1111.3 169.957 1097.22 162.422 1081.76 cv
162.217 1081.34 162.276 1080.84 162.574 1080.48 cv
172.464 1068.46 180.974 1055.89 188.864 1042.36 cv
cp
285.649 1111.78 mo
285.347 1111.56 284.96 1111.49 284.601 1111.59 cv
284.243 1111.7 283.954 1111.97 283.821 1112.32 cv
272.097 1143.23 li
271.978 1143.55 271.731 1143.8 271.417 1143.92 cv
271.103 1144.05 270.752 1144.03 270.449 1143.88 cv
222.74 1120.41 li
222.45 1120.27 222.23 1120.02 222.13 1119.71 cv
222.03 1119.4 222.059 1119.07 222.209 1118.78 cv
244.276 1076.96 li
244.515 1076.5 244.439 1075.95 244.086 1075.58 cv
221.614 1051.83 205.991 1026.41 190.972 995.898 cv
190.771 995.489 190.354 995.23 189.898 995.23 cv
189.441 995.23 189.025 995.49 188.824 995.899 cv
173.805 1026.41 158.182 1051.83 135.711 1075.58 cv
135.358 1075.95 135.282 1076.5 135.521 1076.96 cv
157.587 1118.78 li
157.738 1119.07 157.767 1119.4 157.667 1119.71 cv
157.567 1120.02 157.347 1120.27 157.056 1120.41 cv
109.347 1143.88 li
109.045 1144.03 108.693 1144.05 108.38 1143.92 cv
108.066 1143.8 107.819 1143.55 107.699 1143.23 cv
95.9755 1112.32 li
95.8428 1111.97 95.5544 1111.7 95.1958 1111.59 cv
94.8372 1111.49 94.4494 1111.56 94.1476 1111.78 cv
79.142 1122.76 61.8224 1133.78 41.472 1145.19 cv
41.1266 1145.38 40.8992 1145.74 40.8648 1146.13 cv
40.8304 1146.53 40.9935 1146.91 41.3001 1147.16 cv
59.8286 1162.32 73.8706 1178.17 84.584 1197.91 cv
101.367 1200.61 136.674 1204.96 189.898 1204.96 cv
243.112 1204.96 278.43 1200.61 295.212 1197.91 cv
305.926 1178.17 319.968 1162.32 338.496 1147.16 cv
338.803 1146.91 338.966 1146.53 338.931 1146.13 cv
338.897 1145.74 338.67 1145.38 338.324 1145.19 cv
317.974 1133.78 300.654 1122.76 285.649 1111.78 cv
cp
f
892.702 1516.86 mo
899.441 1536.36 li
909.765 1543.44 947.517 1551.11 990.41 1551.11 cv
1033.31 1551.11 1071.07 1543.44 1081.39 1536.36 cv
1088.13 1516.84 li
1069.61 1523.67 1032.07 1529.84 990.41 1529.84 cv
948.773 1529.84 911.246 1523.67 892.702 1516.86 cv
cp
1034.54 1415.85 mo
1029.53 1415.85 1025.47 1412 1025.47 1407.27 cv
1025.47 1402.54 1029.53 1398.7 1034.54 1398.7 cv
1039.55 1398.7 1043.6 1402.54 1043.6 1407.27 cv
1043.6 1412 1039.55 1415.85 1034.54 1415.85 cv
cp
945.35 1415.85 mo
940.349 1415.85 936.282 1412 936.282 1407.27 cv
936.282 1402.54 940.349 1398.7 945.35 1398.7 cv
950.361 1398.7 954.418 1402.54 954.418 1407.27 cv
954.418 1412 950.361 1415.85 945.35 1415.85 cv
cp
1095.54 1409.73 mo
1095.3 1409.95 1095.17 1410.26 1095.17 1410.58 cv
1095.17 1431.81 li
1095.17 1443.98 1087.86 1450.07 1080.54 1450.07 cv
1073.23 1450.07 1065.92 1443.98 1065.92 1431.81 cv
1065.92 1410.46 li
1065.92 1410.21 1065.83 1409.96 1065.68 1409.76 cv
1036.42 1370.61 li
1036.2 1370.31 1035.85 1370.14 1035.48 1370.14 cv
1035.11 1370.14 1034.77 1370.31 1034.55 1370.61 cv
1005.27 1409.76 li
1005.12 1409.96 1005.04 1410.21 1005.04 1410.46 cv
1005.04 1431.81 li
1005.04 1443.98 997.729 1450.07 990.41 1450.07 cv
983.102 1450.07 975.794 1443.98 975.794 1431.81 cv
975.794 1410.46 li
975.794 1410.21 975.713 1409.96 975.562 1409.76 cv
946.284 1370.61 li
946.064 1370.31 945.717 1370.14 945.35 1370.14 cv
944.982 1370.14 944.636 1370.31 944.416 1370.61 cv
915.148 1409.76 li
914.997 1409.96 914.916 1410.21 914.916 1410.46 cv
914.916 1431.81 li
914.916 1443.98 907.597 1450.07 900.289 1450.07 cv
892.971 1450.07 885.663 1443.98 885.663 1431.81 cv
885.663 1410.58 li
885.663 1410.26 885.527 1409.95 885.29 1409.73 cv
845.198 1372.53 li
844.806 1372.16 844.217 1372.11 843.768 1372.4 cv
843.32 1372.7 843.128 1373.26 843.303 1373.76 cv
852.138 1399.36 li
853.222 1398.93 854.402 1398.7 855.637 1398.7 cv
860.648 1398.7 864.704 1402.54 864.704 1407.27 cv
864.704 1411.32 861.732 1414.7 857.751 1415.6 cv
887.787 1502.6 li
906.76 1509.85 946.38 1516.48 990.41 1516.48 cv
1034.45 1516.48 1074.07 1509.85 1093.04 1502.6 cv
1123.08 1415.6 li
1119.1 1414.7 1116.13 1411.32 1116.13 1407.27 cv
1116.13 1402.54 1120.18 1398.7 1125.19 1398.7 cv
1126.43 1398.7 1127.61 1398.93 1128.69 1399.36 cv
1137.53 1373.76 li
1137.7 1373.26 1137.51 1372.7 1137.06 1372.4 cv
1136.61 1372.11 1136.02 1372.16 1135.63 1372.53 cv
1095.54 1409.73 li
cp
f
899.436 1536.36 mo
909.761 1543.44 947.521 1551.11 990.415 1551.11 cv
1033.31 1551.11 1071.07 1543.44 1081.39 1536.36 cv
f
892.692 1516.85 mo
887.777 1502.6 li
887.787 1502.6 li
892.692 1516.85 li
cp
f
1280.35 796.164 mo
1280.33 796.164 li
1279.99 795.181 1279.63 794.186 1279.29 793.191 cv
1280.35 796.164 li
cp
f
1264.6 740.417 mo
1253.22 708.158 li
1257.39 711.327 1262.52 716.389 1264.7 723.145 cv
1266.65 729.226 1265.88 735.577 1264.6 740.417 cv
cp
1320.42 771.167 mo
1321.08 771.468 1321.84 771.396 1322.43 770.978 cv
1323.01 770.559 1323.33 769.859 1323.26 769.143 cv
1320.94 746.221 1297.41 734.798 1281.08 748.427 cv
1281.87 721.72 1266.88 700.548 1244.97 686.714 cv
1244.36 686.33 1243.57 686.373 1243.01 686.823 cv
1242.44 687.272 1242.23 688.03 1242.47 688.709 cv
1242.57 688.992 1242.67 689.276 1242.77 689.559 cv
1242.74 689.535 li
1264.97 752.529 li
1276.08 784.088 li
1279.29 793.191 li
1280.35 796.164 li
1293.59 833.718 li
1301.83 832.514 1309.71 829.492 1316.61 824.725 cv
1317.59 824.05 1318.54 823.35 1319.46 822.613 cv
1311.72 820.844 1304.11 813.154 1300.43 802.417 cv
1300.43 802.405 1300.43 802.405 1300.42 802.392 cv
1293.23 781.367 1305.29 764.192 1320.42 771.167 cv
cp
f
1516.65 723.145 mo
1518.83 716.389 1523.96 711.327 1528.13 708.158 cv
1516.75 740.417 li
1515.47 735.577 1514.7 729.226 1516.65 723.145 cv
cp
1480.93 802.392 mo
1480.92 802.405 1480.92 802.405 1480.92 802.417 cv
1477.24 813.154 1469.63 820.844 1461.89 822.613 cv
1462.81 823.35 1463.75 824.05 1464.74 824.725 cv
1471.64 829.492 1479.52 832.514 1487.76 833.718 cv
1501 796.164 li
1502.06 793.191 li
1505.26 784.088 li
1516.38 752.529 li
1538.6 689.535 li
1538.58 689.559 li
1538.68 689.276 1538.78 688.992 1538.88 688.709 cv
1539.12 688.029 1538.9 687.272 1538.34 686.822 cv
1537.78 686.372 1536.99 686.329 1536.38 686.714 cv
1514.47 700.548 1499.48 721.72 1500.26 748.427 cv
1483.93 734.785 1460.41 746.246 1458.09 769.142 cv
1458.02 769.858 1458.34 770.558 1458.92 770.976 cv
1459.51 771.394 1460.27 771.468 1460.93 771.167 cv
1476.06 764.192 1488.12 781.367 1480.93 802.392 cv
cp
f
1392.35 723.342 mo
1391.97 723.839 1391.39 724.129 1390.76 724.129 cv
1390.14 724.13 1389.55 723.839 1389.17 723.343 cv
1384.54 717.295 1381.01 708.882 1381.01 700.971 cv
1381.01 693.028 1384.56 684.618 1389.17 678.601 cv
1389.55 678.104 1390.14 677.814 1390.76 677.814 cv
1391.38 677.813 1391.97 678.104 1392.35 678.6 cv
1396.98 684.648 1400.51 693.061 1400.51 700.971 cv
1400.51 708.915 1396.96 717.325 1392.35 723.342 cv
cp
1408.79 728.956 mo
1419.1 701.619 1410.65 674.692 1392.16 652.705 cv
1391.78 652.259 1391.23 651.998 1390.65 651.99 cv
1390.07 651.983 1389.51 652.228 1389.12 652.664 cv
1382.58 660.046 1358.32 690.751 1372.73 728.956 cv
1350.88 720.611 1331.94 741.825 1337.7 764.468 cv
1337.87 765.163 1338.41 765.711 1339.1 765.905 cv
1339.79 766.099 1340.53 765.91 1341.04 765.408 cv
1353.78 752.922 1371.92 765.967 1371.96 789.58 cv
1371.95 789.592 1371.95 789.592 1371.96 789.604 cv
1371.98 796.766 1370.21 803.338 1367.25 808.412 cv
1374.43 811.753 1382.44 813.571 1390.76 813.571 cv
1399.08 813.571 1407.09 811.753 1414.27 808.412 cv
1411.31 803.338 1409.54 796.766 1409.56 789.604 cv
1409.57 789.592 1409.57 789.592 1409.56 789.58 cv
1409.6 765.967 1427.74 752.922 1440.48 765.408 cv
1440.99 765.91 1441.73 766.101 1442.42 765.907 cv
1443.11 765.713 1443.65 765.165 1443.82 764.469 cv
1449.6 741.781 1430.6 720.628 1408.79 728.956 cv
cp
f
1485.85 839.614 mo
1474.84 870.866 li
1474.84 870.866 1439.58 887.045 1390.76 887.045 cv
1341.94 887.045 1306.69 870.866 1306.69 870.866 cv
1295.67 839.627 li
1304.4 838.177 1312.74 834.86 1320.1 829.774 cv
1330.7 822.473 1338.34 812.157 1342.04 800.497 cv
1342.26 799.809 1342.83 799.292 1343.53 799.142 cv
1344.24 798.992 1344.97 799.233 1345.45 799.772 cv
1356.59 812.287 1373.09 819.713 1390.76 819.713 cv
1408.43 819.713 1424.93 812.288 1436.07 799.784 cv
1436.55 799.246 1437.28 799.006 1437.99 799.156 cv
1438.69 799.307 1439.26 799.824 1439.48 800.511 cv
1443.29 812.543 1451.28 823.094 1462.4 830.45 cv
1469.55 835.167 1477.53 838.251 1485.85 839.614 cv
cp
f
1465.12 1532.36 mo
1465.12 1532.36 1476.62 1478.29 1486.07 1482.25 cv
1495.55 1486.22 1465.12 1532.36 1465.12 1532.36 cv
cp
1431.12 1530.06 mo
1431.12 1530.06 1426.94 1467.42 1443.14 1470.69 cv
1459.35 1473.97 1431.12 1530.06 1431.12 1530.06 cv
cp
1390.14 1526.54 mo
1390.14 1526.54 1368.86 1465.98 1390.14 1465.98 cv
1411.39 1465.98 1390.14 1526.54 1390.14 1526.54 cv
cp
1349.13 1530.06 mo
1349.13 1530.06 1320.92 1473.97 1337.13 1470.69 cv
1353.32 1467.42 1349.13 1530.06 1349.13 1530.06 cv
cp
1294.19 1482.25 mo
1303.65 1478.29 1315.15 1532.36 1315.15 1532.36 cv
1315.15 1532.36 1284.71 1486.22 1294.19 1482.25 cv
cp
1520.46 1419.47 mo
1479.58 1469.34 li
1476.51 1473.09 1471.4 1474.46 1466.86 1472.77 cv
1462.33 1471.08 1459.37 1466.69 1459.5 1461.86 cv
1461.12 1403.04 li
1461.23 1398.82 li
1459.42 1402.59 li
1431.81 1460.11 li
1429.14 1465.69 1423.22 1468.97 1417.07 1468.29 cv
1410.93 1467.61 1405.87 1463.12 1404.49 1457.09 cv
1390.76 1397.59 li
1390.13 1394.88 li
1389.51 1397.59 li
1375.78 1457.09 li
1374.38 1463.12 1369.34 1467.61 1363.19 1468.29 cv
1357.04 1468.97 1351.13 1465.69 1348.45 1460.11 cv
1320.85 1402.59 li
1319.03 1398.82 li
1319.14 1403.04 li
1320.76 1461.86 li
1320.9 1466.69 1317.94 1471.08 1313.4 1472.77 cv
1308.87 1474.46 1303.75 1473.09 1300.69 1469.34 cv
1259.81 1419.47 li
1255.83 1414.62 li
1258.33 1420.23 li
1316.4 1550.24 li
1316.4 1550.24 1346.68 1562.09 1390.13 1562.09 cv
1433.58 1562.09 1463.86 1550.24 1463.86 1550.24 cv
1521.92 1420.23 li
1524.42 1414.62 li
1520.46 1419.47 li
cp
f
1390.13 1390.92 mo
1384.59 1390.92 1380.1 1386.43 1380.1 1380.89 cv
1380.1 1375.35 1384.59 1370.86 1390.13 1370.86 cv
1395.67 1370.86 1400.15 1375.35 1400.15 1380.89 cv
1400.15 1386.43 1395.67 1390.92 1390.13 1390.92 cv
cp
1390.13 1364.17 mo
1380.9 1364.17 1373.42 1371.66 1373.42 1380.89 cv
1373.42 1389.92 1380.56 1397.26 1389.51 1397.59 cv
1389.71 1397.6 1389.93 1397.6 1390.13 1397.6 cv
1390.34 1397.6 1390.55 1397.6 1390.76 1397.59 cv
1399.7 1397.26 1406.85 1389.92 1406.85 1380.89 cv
1406.85 1371.66 1399.37 1364.17 1390.13 1364.17 cv
cp
f
1315.73 1396.71 mo
1310.19 1396.71 1305.7 1392.21 1305.7 1386.68 cv
1305.7 1381.14 1310.19 1376.64 1315.73 1376.64 cv
1321.27 1376.64 1325.75 1381.14 1325.75 1386.68 cv
1325.75 1392.21 1321.27 1396.71 1315.73 1396.71 cv
cp
1315.73 1369.96 mo
1306.5 1369.96 1299.02 1377.44 1299.02 1386.68 cv
1299.02 1395.91 1306.5 1403.39 1315.73 1403.39 cv
1316.9 1403.39 1318.04 1403.27 1319.14 1403.04 cv
1319.72 1402.92 1320.29 1402.78 1320.85 1402.59 cv
1327.58 1400.43 1332.45 1394.13 1332.45 1386.68 cv
1332.45 1377.44 1324.97 1369.96 1315.73 1369.96 cv
cp
f
1251.45 1415.02 mo
1245.9 1415.02 1241.41 1410.54 1241.41 1405 cv
1241.41 1399.46 1245.9 1394.97 1251.45 1394.97 cv
1256.98 1394.97 1261.47 1399.46 1261.47 1405 cv
1261.47 1410.54 1256.98 1415.02 1251.45 1415.02 cv
cp
1251.45 1388.29 mo
1242.21 1388.29 1234.73 1395.77 1234.73 1405 cv
1234.73 1414.23 1242.21 1421.72 1251.45 1421.72 cv
1253.9 1421.72 1256.23 1421.18 1258.33 1420.23 cv
1258.83 1420 1259.33 1419.75 1259.81 1419.47 cv
1264.8 1416.58 1268.16 1411.19 1268.16 1405 cv
1268.16 1395.77 1260.67 1388.29 1251.45 1388.29 cv
cp
f
1464.53 1396.71 mo
1459 1396.71 1454.5 1392.21 1454.5 1386.68 cv
1454.5 1381.14 1459 1376.64 1464.53 1376.64 cv
1470.07 1376.64 1474.57 1381.14 1474.57 1386.68 cv
1474.57 1392.21 1470.07 1396.71 1464.53 1396.71 cv
cp
1464.53 1369.96 mo
1455.3 1369.96 1447.82 1377.44 1447.82 1386.68 cv
1447.82 1394.13 1452.69 1400.43 1459.42 1402.59 cv
1459.97 1402.78 1460.55 1402.92 1461.12 1403.04 cv
1462.23 1403.27 1463.36 1403.39 1464.53 1403.39 cv
1473.77 1403.39 1481.25 1395.91 1481.25 1386.68 cv
1481.25 1377.44 1473.77 1369.96 1464.53 1369.96 cv
cp
f
1528.82 1415.02 mo
1523.28 1415.02 1518.79 1410.54 1518.79 1405 cv
1518.79 1399.46 1523.28 1394.97 1528.82 1394.97 cv
1534.36 1394.97 1538.85 1399.46 1538.85 1405 cv
1538.85 1410.54 1534.36 1415.02 1528.82 1415.02 cv
cp
1528.82 1388.29 mo
1519.59 1388.29 1512.1 1395.77 1512.1 1405 cv
1512.1 1411.19 1515.47 1416.58 1520.46 1419.47 cv
1520.93 1419.75 1521.42 1420 1521.92 1420.23 cv
1524.02 1421.18 1526.36 1421.72 1528.82 1421.72 cv
1538.05 1421.72 1545.53 1414.23 1545.53 1405 cv
1545.53 1395.77 1538.05 1388.29 1528.82 1388.29 cv
cp
f
181.175 1550.16 mo
223.745 1550.16 250.894 1546.27 267.716 1542.12 cv
261.495 1554.33 li
261.495 1554.33 246.437 1566.05 181.175 1566.05 cv
115.903 1566.05 100.844 1554.33 100.844 1554.33 cv
94.6234 1542.12 li
111.434 1546.27 138.595 1550.16 181.175 1550.16 cv
cp
f
189.947 1486.15 mo
189.947 1501.46 186.027 1505.73 181.175 1505.73 cv
176.323 1505.73 172.392 1501.46 172.392 1486.15 cv
172.392 1470.83 176.323 1466.56 181.175 1466.56 cv
186.027 1466.56 189.947 1470.83 189.947 1486.15 cv
cp
f
325.292 1429.23 mo
319.843 1439.91 li
319.58 1440.43 318.981 1440.68 318.429 1440.5 cv
257.248 1420.93 li
256.527 1420.7 256.205 1419.86 256.586 1419.21 cv
262.693 1408.73 li
262.972 1408.25 263.547 1408.03 264.075 1408.2 cv
324.599 1427.57 li
325.294 1427.79 325.623 1428.58 325.292 1429.23 cv
cp
f
181.175 1520.87 mo
168.011 1520.87 157.344 1513.3 157.344 1486.15 cv
157.344 1458.99 168.011 1451.42 181.175 1451.42 cv
194.339 1451.42 205.006 1458.99 205.006 1486.15 cv
205.006 1513.3 194.339 1520.87 181.175 1520.87 cv
cp
249.353 1431.6 mo
234.328 1457.35 li
234.065 1457.8 233.539 1458.03 233.032 1457.91 cv
217.228 1454.15 li
216.695 1454.02 216.319 1453.54 216.319 1452.99 cv
216.319 1384.83 li
216.319 1384.18 215.79 1383.65 215.137 1383.65 cv
147.214 1383.65 li
146.561 1383.65 146.031 1384.18 146.031 1384.83 cv
146.031 1452.99 li
146.031 1453.54 145.655 1454.02 145.122 1454.15 cv
129.307 1457.91 li
128.8 1458.03 128.274 1457.8 128.011 1457.35 cv
112.986 1431.6 li
112.706 1431.12 112.132 1430.9 111.604 1431.07 cv
49.6448 1450.89 li
48.9502 1451.11 48.6202 1451.9 48.9514 1452.55 cv
84.1427 1521.58 li
99.1794 1526.57 128.267 1532.58 181.175 1532.58 cv
234.083 1532.58 263.182 1526.56 278.197 1521.58 cv
278.208 1521.58 li
313.399 1452.55 li
313.73 1451.9 313.4 1451.11 312.705 1450.89 cv
250.735 1431.07 li
250.207 1430.9 249.633 1431.12 249.353 1431.6 cv
cp
f
43.9205 1440.5 mo
105.102 1420.93 li
105.822 1420.7 106.144 1419.86 105.763 1419.21 cv
99.6468 1408.73 li
99.3673 1408.25 98.7927 1408.03 98.2647 1408.2 cv
37.7414 1427.57 li
37.0464 1427.79 36.7166 1428.59 37.0487 1429.24 cv
42.5069 1439.91 li
42.7705 1440.43 43.3688 1440.68 43.9205 1440.5 cv
cp
f
216.319 1369.07 mo
216.319 1356.38 li
216.319 1355.73 215.79 1355.2 215.137 1355.2 cv
147.214 1355.2 li
146.561 1355.2 146.031 1355.73 146.031 1356.38 cv
146.031 1369.07 li
146.031 1369.72 146.561 1370.25 147.214 1370.25 cv
215.137 1370.25 li
215.79 1370.25 216.319 1369.72 216.319 1369.07 cv
cp
f
589.192 1521.21 mo
631.638 1521.21 668.791 1519.29 689.827 1516.12 cv
682.336 1533.47 li
656.896 1551.09 524.51 1551.84 497.977 1533.47 cv
490.497 1516.15 li
511.201 1519.31 547.614 1521.21 589.192 1521.21 cv
cp
f
678.253 1498.1 mo
674.492 1498.1 671.449 1495.05 671.449 1491.29 cv
671.449 1487.54 674.492 1484.49 678.253 1484.49 cv
682.004 1484.49 685.058 1487.54 685.058 1491.29 cv
685.058 1495.05 682.004 1498.1 678.253 1498.1 cv
cp
636.75 1500.82 mo
631.499 1500.82 627.234 1496.55 627.234 1491.29 cv
627.234 1486.03 631.499 1481.78 636.75 1481.78 cv
642.012 1481.78 646.277 1486.03 646.277 1491.29 cv
646.277 1496.55 642.012 1500.82 636.75 1500.82 cv
cp
589.814 1507.62 mo
582.302 1507.62 576.204 1498.94 576.204 1488.24 cv
576.204 1477.52 582.302 1468.84 589.814 1468.84 cv
597.326 1468.84 603.423 1477.52 603.423 1488.24 cv
603.423 1498.94 597.326 1507.62 589.814 1507.62 cv
cp
542.877 1500.82 mo
537.616 1500.82 533.351 1496.55 533.351 1491.29 cv
533.351 1486.03 537.616 1481.78 542.877 1481.78 cv
548.139 1481.78 552.393 1486.03 552.393 1491.29 cv
552.393 1496.55 548.139 1500.82 542.877 1500.82 cv
cp
501.374 1498.1 mo
497.624 1498.1 494.57 1495.05 494.57 1491.29 cv
494.57 1487.54 497.624 1484.49 501.374 1484.49 cv
505.136 1484.49 508.179 1487.54 508.179 1491.29 cv
508.179 1495.05 505.136 1498.1 501.374 1498.1 cv
cp
588.989 1465.47 mo
537.048 1465.47 492.501 1467.1 470.458 1469.78 cv
487.979 1510.31 li
507.525 1513.75 545.406 1515.85 589.192 1515.85 cv
633.15 1515.85 672.563 1513.7 692.356 1510.27 cv
709.855 1469.81 li
687.576 1467.15 641.187 1465.47 588.989 1465.47 cv
cp
f
739.085 1398.09 mo
739.917 1398.09 740.477 1398.95 740.147 1399.71 cv
720.56 1445.03 li
712.062 1464.68 li
689.987 1461.84 643.426 1460.11 588.989 1460.11 cv
535.634 1460.11 489.972 1461.84 468.24 1464.65 cv
459.753 1445.03 li
440.166 1399.71 li
439.836 1398.95 440.396 1398.09 441.229 1398.09 cv
477.489 1398.09 li
477.95 1398.09 478.368 1398.37 478.551 1398.79 cv
496.392 1440.05 li
496.59 1440.51 497.054 1440.79 497.551 1440.75 cv
504.176 1440.16 510.991 1439.64 517.972 1439.18 cv
518.485 1439.15 518.918 1438.78 519.028 1438.28 cv
527.707 1399 li
527.824 1398.47 528.294 1398.09 528.837 1398.09 cv
565.759 1398.09 li
566.302 1398.09 566.772 1398.47 566.889 1399 cv
575.069 1436.05 li
575.188 1436.59 575.662 1436.97 576.21 1436.96 cv
580.823 1436.9 585.48 1436.87 590.157 1436.87 cv
594.833 1436.87 599.491 1436.9 604.103 1436.96 cv
604.651 1436.97 605.126 1436.59 605.244 1436.05 cv
613.424 1399 li
613.542 1398.47 614.011 1398.09 614.555 1398.09 cv
651.477 1398.09 li
652.02 1398.09 652.49 1398.47 652.607 1399 cv
661.285 1438.28 li
661.396 1438.78 661.828 1439.15 662.341 1439.18 cv
669.322 1439.64 676.138 1440.16 682.763 1440.75 cv
683.259 1440.79 683.723 1440.51 683.921 1440.05 cv
701.763 1398.79 li
701.946 1398.37 702.363 1398.09 702.825 1398.09 cv
739.085 1398.09 li
cp
f
466.002 1383.13 mo
466.002 1388.01 462.042 1391.97 457.158 1391.97 cv
452.274 1391.97 448.314 1388.01 448.314 1383.13 cv
448.314 1378.24 452.274 1374.29 457.158 1374.29 cv
462.042 1374.29 466.002 1378.24 466.002 1383.13 cv
cp
f
555.8 1383.13 mo
555.8 1388.01 551.84 1391.97 546.956 1391.97 cv
542.072 1391.97 538.112 1388.01 538.112 1383.13 cv
538.112 1378.24 542.072 1374.29 546.956 1374.29 cv
551.84 1374.29 555.8 1378.24 555.8 1383.13 cv
cp
f
645.598 1383.13 mo
645.598 1388.01 641.638 1391.97 636.754 1391.97 cv
631.87 1391.97 627.91 1388.01 627.91 1383.13 cv
627.91 1378.24 631.87 1374.29 636.754 1374.29 cv
641.638 1374.29 645.598 1378.24 645.598 1383.13 cv
cp
f
735.396 1383.13 mo
735.396 1388.01 731.436 1391.97 726.552 1391.97 cv
721.668 1391.97 717.708 1388.01 717.708 1383.13 cv
717.708 1378.24 721.668 1374.29 726.552 1374.29 cv
731.436 1374.29 735.396 1378.24 735.396 1383.13 cv
cp
f
1693.94 433.145 mo
1693.94 437.879 1690.1 441.717 1685.37 441.717 cv
1680.64 441.717 1676.8 437.879 1676.8 433.145 cv
1676.8 428.411 1680.64 424.573 1685.37 424.573 cv
1690.1 424.573 1693.94 428.411 1693.94 433.145 cv
cp
f
1761.17 388.479 mo
1761.17 393.214 1757.33 397.052 1752.59 397.052 cv
1747.86 397.052 1744.02 393.214 1744.02 388.479 cv
1744.02 383.745 1747.86 379.907 1752.59 379.907 cv
1757.33 379.907 1761.17 383.745 1761.17 388.479 cv
cp
f
1790.94 543.683 mo
1825.68 543.683 1878.92 537.369 1893.35 532.856 cv
1899.84 515.853 li
1874.49 521.69 1825.13 527.962 1790.94 527.962 cv
1756.75 527.962 1707.4 521.69 1682.05 515.853 cv
1678.64 506.922 li
1688.52 532.856 li
1702.96 537.369 1756.21 543.683 1790.94 543.683 cv
cp
1788.19 478.003 mo
1788.69 477.224 1789.56 476.753 1790.49 476.754 cv
1791.42 476.754 1792.29 477.225 1792.79 478.004 cv
1803.23 494.052 1819.38 506.367 1838.54 512.378 cv
1821.93 514.063 1805.13 515.143 1790.94 515.143 cv
1776.56 515.143 1759.49 514.031 1742.66 512.304 cv
1761.72 506.275 1777.79 493.991 1788.19 478.003 cv
cp
1789.61 355.703 mo
1789.82 355.36 1790.2 355.152 1790.6 355.152 cv
1791.01 355.152 1791.39 355.36 1791.6 355.702 cv
1794.4 360.139 1802.1 373.844 1802.1 390.062 cv
1802.1 406.28 1794.4 419.978 1791.6 424.412 cv
1791.39 424.755 1791.01 424.963 1790.6 424.963 cv
1790.2 424.963 1789.82 424.754 1789.61 424.412 cv
1786.81 419.977 1779.1 406.28 1779.1 390.062 cv
1779.1 373.844 1786.81 360.14 1789.61 355.703 cv
cp
1903.24 506.922 mo
1939.73 411.213 li
1940.04 410.39 1939.85 409.461 1939.24 408.83 cv
1938.62 408.199 1937.7 407.982 1936.87 408.275 cv
1925.59 412.249 1907.75 429.661 1901.02 449.843 cv
1892.73 437.17 1868.38 440.573 1866.82 455.941 cv
1866.74 456.757 1867.31 457.493 1868.11 457.624 cv
1882.24 459.909 1891.06 496.763 1847.34 496.763 cv
1821.12 496.763 1810.19 471.348 1814.4 451.644 cv
1818.56 432.213 1837.36 418.265 1859.93 428.224 cv
1860.38 428.426 1860.91 428.402 1861.35 428.158 cv
1861.79 427.913 1862.08 427.478 1862.15 426.982 cv
1865.1 405.559 1839.89 391.109 1818.91 402.467 cv
1820.64 368.827 1806.29 324.056 1792.8 305.2 cv
1792.37 304.6 1791.68 304.244 1790.94 304.244 cv
1790.21 304.244 1789.51 304.6 1789.08 305.2 cv
1775.6 324.057 1761.24 368.828 1762.97 402.467 cv
1741.99 391.109 1716.79 405.559 1719.74 426.982 cv
1719.8 427.478 1720.1 427.914 1720.54 428.158 cv
1720.98 428.402 1721.5 428.426 1721.96 428.224 cv
1744.53 418.265 1763.33 432.213 1767.48 451.644 cv
1771.7 471.348 1760.77 496.763 1734.54 496.763 cv
1690.87 496.763 1699.63 459.974 1713.74 457.63 cv
1714.57 457.492 1715.15 456.73 1715.06 455.891 cv
1713.46 440.566 1689.15 437.184 1680.85 449.843 cv
1674.12 429.637 1656.26 412.209 1644.97 408.261 cv
1644.15 407.973 1643.23 408.189 1642.62 408.815 cv
1642.01 409.442 1641.82 410.364 1642.13 411.181 cv
1678.64 506.922 li
1702.74 512.961 1755.16 519.847 1790.94 519.847 cv
1826.73 519.847 1879.14 512.961 1903.24 506.922 cv
cp
f
1887.94 433.145 mo
1887.94 437.879 1891.78 441.717 1896.51 441.717 cv
1901.25 441.717 1905.09 437.879 1905.09 433.145 cv
1905.09 428.411 1901.25 424.573 1896.51 424.573 cv
1891.78 424.573 1887.94 428.411 1887.94 433.145 cv
cp
f
1820.72 388.479 mo
1820.72 393.214 1824.56 397.052 1829.29 397.052 cv
1834.03 397.052 1837.86 393.214 1837.86 388.479 cv
1837.86 383.745 1834.03 379.907 1829.29 379.907 cv
1824.56 379.907 1820.72 383.745 1820.72 388.479 cv
cp
f
1919.71 1129.83 mo
1907.18 1170.48 li
1883.6 1175.51 1849.12 1178.68 1813.24 1179.63 cv
1812.71 1162.06 1808.51 1142.93 1790.93 1142.93 cv
1773.36 1142.93 1769.16 1162.06 1768.63 1179.63 cv
1732.75 1178.68 1698.26 1175.51 1674.68 1170.48 cv
1662.15 1129.82 li
1672.45 1137.94 1705.78 1163.86 1718 1159.09 cv
1720.67 1158.07 1726.67 1155.77 1722.68 1105.41 cv
1722.64 1104.9 1722.93 1104.41 1723.41 1104.21 cv
1723.89 1104.02 1724.45 1104.16 1724.78 1104.55 cv
1756.21 1142.07 1763.54 1139.26 1766.42 1138.15 cv
1768.96 1137.17 1775.42 1134.68 1789.78 1082.47 cv
1789.92 1081.95 1790.39 1081.6 1790.93 1081.6 cv
1791.47 1081.6 1791.94 1081.95 1792.08 1082.47 cv
1806.45 1134.68 1812.91 1137.17 1815.45 1138.15 cv
1818.33 1139.26 1825.65 1142.08 1857.09 1104.55 cv
1857.42 1104.15 1857.97 1104.02 1858.45 1104.21 cv
1858.93 1104.41 1859.23 1104.9 1859.19 1105.41 cv
1855.19 1155.77 1861.2 1158.07 1863.87 1159.09 cv
1876.07 1163.86 1909.38 1137.98 1919.71 1129.83 cv
cp
f
1907.18 1176.9 mo
1894.21 1218.99 li
1855.84 1233.87 1726.01 1233.87 1687.66 1218.99 cv
1674.68 1176.9 li
1698.26 1181.92 1732.73 1185.09 1768.59 1186.04 cv
1768.83 1204.23 1772.64 1224.9 1790.93 1224.9 cv
1809.23 1224.9 1813.03 1204.22 1813.27 1186.04 cv
1849.14 1185.09 1883.6 1181.92 1907.18 1176.9 cv
cp
f
1790.93 1204.4 mo
1784.69 1204.4 1784.42 1190.29 1784.42 1183.92 cv
1784.42 1177.61 1784.68 1163.44 1790.93 1163.44 cv
1797.62 1163.44 1797.53 1179.63 1797.43 1186.31 cv
1797.15 1200.39 1794.34 1204.4 1790.93 1204.4 cv
cp
1790.93 1147.61 mo
1774.94 1147.61 1772.75 1170.27 1773.26 1186.15 cv
1773.66 1212.74 1781.43 1220.22 1790.93 1220.22 cv
1806.47 1220.22 1808.63 1199.52 1808.63 1183.92 cv
1808.63 1168.39 1806.47 1147.61 1790.93 1147.61 cv
cp
f
1928.4 1093.92 mo
1928.77 1093.5 1929.39 1093.41 1929.87 1093.68 cv
1930.36 1093.96 1930.58 1094.54 1930.42 1095.07 cv
1922.13 1121.97 li
1917.62 1125.49 1876.22 1158.84 1865.54 1154.73 cv
1865.29 1154.63 1859.39 1151.54 1864.85 1094.47 cv
1865.21 1090.68 li
1865.26 1090.15 1864.96 1089.66 1864.47 1089.46 cv
1863.98 1089.26 1863.42 1089.41 1863.09 1089.82 cv
1853.53 1101.72 1824.83 1136.78 1817.13 1133.79 cv
1809.69 1130.93 1796.32 1080.69 1792.09 1064.29 cv
1791.95 1063.77 1791.47 1063.4 1790.93 1063.4 cv
1790.39 1063.4 1789.91 1063.77 1789.78 1064.29 cv
1785.52 1080.77 1772.2 1130.92 1764.74 1133.79 cv
1757.08 1136.79 1728.34 1101.71 1718.78 1089.82 cv
1718.45 1089.4 1717.89 1089.26 1717.4 1089.46 cv
1716.91 1089.66 1716.61 1090.15 1716.66 1090.67 cv
1717.02 1094.47 li
1722.47 1151.54 1716.57 1154.63 1716.33 1154.73 cv
1705.53 1158.9 1662.47 1124.1 1659.84 1122.29 cv
1651.45 1095.07 li
1651.28 1094.54 1651.51 1093.96 1652 1093.69 cv
1652.48 1093.41 1653.09 1093.51 1653.47 1093.92 cv
1663.77 1105.22 1693.14 1135.98 1704.02 1131.79 cv
1713.17 1128.28 1701.17 1061.9 1696.96 1040.28 cv
1696.85 1039.73 1697.15 1039.18 1697.67 1038.95 cv
1698.18 1038.73 1698.79 1038.91 1699.11 1039.37 cv
1710.44 1055.52 1748 1107.48 1759.24 1103.16 cv
1770.08 1099 1785.44 1023.33 1789.76 1000.96 cv
1789.87 1000.4 1790.36 999.991 1790.93 999.992 cv
1791.5 999.992 1791.99 1000.4 1792.1 1000.96 cv
1796.43 1023.33 1811.79 1099 1822.63 1103.16 cv
1833.87 1107.48 1871.44 1055.5 1882.76 1039.36 cv
1883.08 1038.9 1883.69 1038.73 1884.2 1038.95 cv
1884.72 1039.17 1885.02 1039.72 1884.91 1040.27 cv
1883.59 1047.06 1881.31 1059.26 1879.21 1072.58 cv
1875.09 1098.82 1871.7 1129.43 1877.85 1131.79 cv
1888.73 1135.98 1918.1 1105.21 1928.4 1093.92 cv
cp
f
1422.18 1924.33 mo
1422.18 1924.33 1422.18 1924.33 1422.18 1924.33 cv
1423.7 1924.16 1425.14 1924 1426.54 1923.85 cv
1422.18 1924.33 li
cp
1383.05 1767.83 mo
1382.64 1767.84 1382.23 1767.84 1381.81 1767.82 cv
1382.23 1767.84 1382.64 1767.84 1383.05 1767.83 cv
cp
1398.28 1767.83 mo
1398.66 1767.83 1399.05 1767.84 1399.45 1767.82 cv
1399.06 1767.83 1398.67 1767.83 1398.28 1767.83 cv
cp
1530.25 1776.8 mo
1529.98 1775.39 1529.62 1773.99 1529.19 1772.59 cv
1527.03 1765.58 1522.87 1758.82 1516.19 1753.39 cv
1485.74 1728.68 1434.37 1760.67 1406.54 1766.84 cv
1406.23 1766.91 1406.01 1766.96 1405.85 1767 cv
1403.86 1767.42 1401.62 1767.75 1399.47 1767.82 cv
1399.03 1767.84 1398.61 1767.83 1398.19 1767.82 cv
1398.02 1767.82 1397.85 1767.82 1397.69 1767.81 cv
1397.18 1767.78 1396.69 1767.75 1396.21 1767.68 cv
1396.67 1767.74 1397.14 1767.78 1397.63 1767.81 cv
1397.14 1767.78 1396.67 1767.74 1396.21 1767.68 cv
1399.85 1786.76 1409.13 1829.88 1420.49 1847.57 cv
1421.25 1848.75 1422.81 1849.11 1424 1848.37 cv
1451.78 1831.34 1478.07 1819.74 1510.63 1813.65 cv
1501.5 1822.59 1493.66 1831.24 1487.05 1839.75 cv
1483.17 1844.76 1478.2 1848.69 1472.43 1851.3 cv
1463.6 1855.3 1453.53 1860.74 1444.52 1867.78 cv
1444.12 1868.09 1443.91 1868.58 1443.96 1869.08 cv
1444.02 1869.59 1444.33 1870.02 1444.79 1870.24 cv
1451.8 1873.6 1457.92 1880.34 1462.5 1886.71 cv
1460.96 1892.44 1459.92 1898.23 1459.35 1904.13 cv
1423.07 1907.64 li
1416.29 1908.3 1409.88 1910.68 1404.34 1914.63 cv
1399.35 1918.18 1394.88 1922.45 1391.52 1928.26 cv
1391.35 1928.56 1391.03 1928.75 1390.68 1928.75 cv
1390.33 1928.75 1390.01 1928.56 1389.83 1928.26 cv
1386.48 1922.45 1382 1918.18 1377.02 1914.63 cv
1371.5 1910.7 1365.02 1908.29 1358.28 1907.64 cv
1321.99 1904.13 li
1321.43 1898.23 1320.39 1892.45 1318.84 1886.72 cv
1323.43 1880.35 1329.55 1873.6 1336.57 1870.24 cv
1337.02 1870.02 1337.33 1869.59 1337.39 1869.08 cv
1337.44 1868.58 1337.23 1868.09 1336.83 1867.78 cv
1327.82 1860.74 1317.75 1855.3 1308.93 1851.3 cv
1303.19 1848.71 1298.16 1844.72 1294.3 1839.75 cv
1287.69 1831.24 1279.85 1822.59 1270.71 1813.65 cv
1303.28 1819.73 1329.56 1831.34 1357.35 1848.37 cv
1358.54 1849.11 1360.1 1848.75 1360.86 1847.57 cv
1372.24 1829.85 1381.52 1786.64 1385.14 1767.68 cv
1384.65 1767.75 1384.13 1767.79 1383.61 1767.81 cv
1384.14 1767.79 1384.65 1767.75 1385.14 1767.68 cv
1384.61 1767.75 1384.05 1767.79 1383.48 1767.82 cv
1383.4 1767.82 1383.32 1767.82 1383.24 1767.83 cv
1382.76 1767.84 1382.26 1767.84 1381.76 1767.82 cv
1379.57 1767.74 1377.31 1767.39 1375.33 1766.96 cv
1375.18 1766.93 1375.02 1766.89 1374.81 1766.84 cv
1346.97 1760.67 1295.62 1728.68 1265.16 1753.39 cv
1242.42 1771.86 1249.03 1805.8 1263.15 1812.36 cv
1295.63 1843.01 1319.88 1875.58 1318.09 1919.73 cv
1322.41 1920.22 li
1359.43 1924.37 li
1365.42 1925.09 1371.05 1927.37 1375.83 1931.07 cv
1381.6 1935.54 1386.11 1940.41 1389.81 1947.68 cv
1389.97 1948 1390.31 1948.21 1390.68 1948.21 cv
1391.04 1948.21 1391.38 1948 1391.54 1947.68 cv
1395.21 1940.45 1399.66 1935.61 1405.55 1931.05 cv
1410.3 1927.39 1415.97 1925.09 1421.92 1924.37 cv
1458.97 1920.22 li
1455.7 1920.58 li
1461.03 1919.98 1460.37 1920.06 1463.26 1919.73 cv
1461.46 1875.41 1485.93 1842.81 1518.21 1812.36 cv
1521.15 1810.99 1523.76 1808.44 1525.85 1805.08 cv
1527.59 1802.3 1528.96 1798.97 1529.86 1795.31 cv
1531.26 1789.66 1531.53 1783.22 1530.25 1776.8 cv
cp
f
1390.68 1817.5 mo
1390.06 1817.5 1389.51 1817.89 1389.3 1818.47 cv
1384.09 1833.22 1376.04 1852.35 1366.85 1864.19 cv
1366.37 1864.8 1366.46 1865.69 1367.05 1866.19 cv
1374.87 1872.87 1383.81 1884.09 1389.42 1894.64 cv
1389.67 1895.11 1390.15 1895.4 1390.68 1895.4 cv
1391.2 1895.4 1391.69 1895.11 1391.93 1894.64 cv
1397.61 1883.94 1406.58 1872.79 1414.3 1866.19 cv
1414.89 1865.69 1414.98 1864.8 1414.5 1864.19 cv
1405.05 1852.01 1396.94 1832.31 1392.05 1818.47 cv
1391.84 1817.89 1391.29 1817.5 1390.68 1817.5 cv
cp
f
1348.81 1727.68 mo
1355.02 1732.54 1360 1737.64 1364.21 1743.92 cv
1367.64 1749.05 1370.55 1754.96 1373.2 1762.18 cv
1377.11 1762.77 1381.41 1763.17 1385.96 1763.33 cv
1387.39 1755.6 1388.66 1748 1389.73 1740.81 cv
1389.8 1740.34 1390.2 1739.99 1390.68 1739.99 cv
1391.15 1739.99 1391.55 1740.34 1391.62 1740.81 cv
1392.69 1748 1393.96 1755.6 1395.39 1763.33 cv
1399.94 1763.17 1404.25 1762.77 1408.15 1762.18 cv
1410.8 1754.96 1413.71 1749.05 1417.15 1743.92 cv
1421.35 1737.64 1426.33 1732.54 1432.55 1727.68 cv
1433.04 1727.29 1433.34 1726.71 1433.38 1726.08 cv
1433.41 1725.45 1433.18 1724.84 1432.73 1724.4 cv
1412.22 1704.14 1401.8 1688.82 1392.71 1665.54 cv
1392.38 1664.7 1391.58 1664.15 1390.68 1664.15 cv
1389.78 1664.15 1388.97 1664.7 1388.64 1665.54 cv
1379.55 1688.82 1369.13 1704.14 1348.62 1724.4 cv
1348.17 1724.84 1347.94 1725.45 1347.97 1726.08 cv
1348.01 1726.71 1348.31 1727.29 1348.81 1727.68 cv
cp
f
471.119 160.5 mo
471.119 140.111 476.466 122.744 487.164 108.4 cv
499.985 91.6118 517.351 83.186 539.258 83.1211 cv
550.47 82.9932 560.231 86.6113 568.544 93.9756 cv
576.856 101.341 581.013 110.298 581.013 120.846 cv
581.013 131.396 577.461 140.08 570.357 146.896 cv
562.931 154.552 553.857 157.381 543.139 155.387 cv
541.977 155.387 li
532.741 153.265 525.927 147.991 521.537 139.564 cv
518.501 133.646 517.821 127.344 519.496 120.653 cv
521.622 113.513 525.711 108.433 531.766 105.409 cv
533.89 104.381 536.079 104.188 538.334 104.83 cv
540.588 105.474 542.229 106.856 543.261 108.979 cv
544.292 111.166 544.453 113.354 543.745 115.54 cv
543.036 117.727 541.683 119.302 539.686 120.267 cv
537.69 121.232 536.435 122.872 535.919 125.188 cv
535.403 127.503 535.661 129.723 536.692 131.845 cv
538.816 136.09 542.198 138.471 546.835 138.985 cv
551.472 139.5 555.498 138.02 558.911 134.547 cv
562.324 131.073 564.032 126.7 564.032 121.425 cv
564.032 116.152 562.131 111.584 558.332 107.725 cv
552.921 102.324 546.578 99.7827 539.3 100.102 cv
539.107 100.102 li
525.131 100.102 513.119 105.313 503.073 115.732 cv
493.026 126.153 488.035 141.076 488.1 160.5 cv
488.1 173.815 490.904 186.23 496.513 197.743 cv
502.121 209.258 509.537 217.941 518.757 223.793 cv
534.746 233.7 552.896 233.828 573.205 224.18 cv
575.352 223.151 577.55 223.021 579.802 223.793 cv
582.053 224.565 583.662 226.013 584.626 228.135 cv
585.591 230.258 585.688 232.414 584.916 234.6 cv
584.144 236.787 582.697 238.362 580.574 239.327 cv
554.62 251.74 531.017 251.291 509.763 237.977 cv
497.911 230.581 488.508 219.934 481.552 206.041 cv
474.597 192.147 471.119 176.968 471.119 160.5 cv
cp
.368627 .345098 .247059 rgb
f
711.913 137.2 mo
715.019 141.189 716.571 146.009 716.571 151.659 cv
716.571 157.311 714.572 162.304 710.574 166.636 cv
706.576 170.971 701.644 172.849 695.776 172.271 cv
693.647 172.012 691.939 171.042 690.651 169.359 cv
689.36 167.612 688.812 165.702 689.004 163.63 cv
689.197 161.559 690.096 159.876 691.7 158.582 cv
693.369 157.288 694.973 156.706 696.514 156.834 cv
699.4 157.027 700.941 155.041 701.134 150.874 cv
701.134 148.311 700.267 146.387 698.535 145.105 cv
696.801 143.824 694.908 143.312 692.854 143.568 cv
686.053 144.599 681.367 148.076 678.8 153.997 cv
676.232 159.919 675.624 167 676.974 175.24 cv
678.387 183.48 681.792 190.367 687.191 195.902 cv
692.653 201.375 699.335 204.304 707.241 204.69 cv
715.788 204.562 723.081 200.761 729.123 193.29 cv
735.163 185.755 738.184 176.321 738.184 164.989 cv
738.184 153.656 734.292 144.136 726.511 136.428 cv
718.663 128.709 709.851 126.234 700.076 128.999 cv
704.862 130.479 708.808 133.212 711.913 137.2 cv
cp
707.54 112.625 mo
720.137 112.562 730.965 117.799 740.027 128.337 cv
749.089 138.875 753.621 151.542 753.621 166.335 cv
753.621 181.13 749.091 193.777 740.03 204.278 cv
730.97 214.845 719.981 220.127 707.066 220.127 cv
706.68 220.127 li
695.113 219.613 685.249 215.399 677.089 207.485 cv
668.928 199.572 663.788 189.278 661.668 176.603 cv
660.382 168.562 660.702 160.808 662.628 153.346 cv
664.617 145.883 668.371 139.932 673.891 135.492 cv
672.607 132.341 673.058 129.51 675.244 127.001 cv
684.177 117.418 694.943 112.625 707.54 112.625 cv
cp
638.903 149.239 mo
641.797 147.637 643.244 145.169 643.244 141.836 cv
643.244 138.504 641.925 135.62 639.289 133.184 cv
636.65 130.813 633.403 129.691 629.544 129.819 cv
610.633 129.819 li
610.633 157.317 li
613.977 156.099 618.801 154.849 625.105 153.566 cv
631.409 152.285 636.008 150.842 638.903 149.239 cv
cp
610.633 203.243 mo
612.819 203.179 614.686 203.989 616.229 205.671 cv
617.773 207.354 618.48 209.295 618.352 211.497 cv
618.222 213.697 617.387 215.445 615.843 216.738 cv
614.299 218.033 612.498 218.68 610.44 218.68 cv
595.582 218.68 li
593.522 218.68 591.722 218.033 590.179 216.738 cv
588.635 215.445 587.798 213.697 587.67 211.497 cv
587.541 209.295 588.216 207.354 589.696 205.671 cv
591.175 203.989 593.008 203.179 595.196 203.243 cv
595.196 129.819 li
593.008 129.819 591.144 128.984 589.6 127.311 cv
588.056 125.574 587.348 123.677 587.477 121.618 cv
587.605 119.56 588.474 117.824 590.082 116.408 cv
591.689 114.994 593.459 114.318 595.389 114.382 cv
629.402 114.382 li
637.583 114.253 644.509 116.887 650.178 122.281 cv
655.846 127.675 658.682 134.387 658.682 142.413 cv
658.682 152.704 653.31 160.068 642.569 164.505 cv
643.733 166.629 646.807 173.257 651.788 184.391 cv
661.005 204.999 670.977 218.004 681.707 223.408 cv
689.093 227.267 697.285 229.261 706.279 229.39 cv
719.722 229.39 730.786 226.753 739.47 221.478 cv
742.75 219.613 745.58 219.774 747.96 221.96 cv
750.339 224.148 751.4 226.463 751.144 228.907 cv
750.886 231.353 749.697 233.217 747.574 234.503 cv
736.382 241.322 722.617 244.762 706.279 244.827 cv
686.523 244.827 670.243 237.683 657.438 223.393 cv
650.422 215.604 643.118 203.02 635.526 185.641 cv
631.859 176.728 629.028 171.204 627.035 169.068 cv
625.974 169.261 li
616.646 171.518 611.533 173.259 610.633 174.483 cv
610.633 203.243 li
cp
f
884.38 114.189 mo
886.496 114.125 888.323 114.864 889.863 116.408 cv
891.4 117.952 892.171 119.785 892.171 121.907 cv
892.171 124.03 891.408 125.863 889.884 127.407 cv
888.358 128.951 886.547 129.691 884.452 129.626 cv
883.027 165.262 871.231 191.182 849.064 207.392 cv
844.295 210.737 840.365 212.987 837.272 214.145 cv
834.248 215.24 832.125 216.043 830.904 216.557 cv
829.682 217.073 828.555 217.426 827.527 217.619 cv
826.498 217.812 825.661 218.004 825.019 218.197 cv
824.31 218.391 823.668 218.552 823.089 218.68 cv
822.51 218.68 li
820.065 218.81 818.007 218.101 816.335 216.557 cv
814.662 215.014 813.827 213.149 813.827 210.961 cv
813.827 193.594 li
802.763 207.681 789.448 216.043 773.882 218.68 cv
771.695 218.938 769.701 218.294 767.9 216.75 cv
766.099 215.207 765.199 213.277 765.199 210.961 cv
765.199 129.626 li
763.14 129.626 761.34 128.854 759.796 127.311 cv
758.252 125.704 757.48 123.87 757.48 121.811 cv
757.48 119.753 758.219 117.952 759.7 116.408 cv
761.178 114.864 763.012 114.125 765.199 114.189 cv
780.636 114.189 li
782.694 114.125 784.496 114.864 786.04 116.408 cv
787.583 117.952 788.355 119.785 788.355 121.907 cv
788.355 124.03 787.615 125.8 786.136 127.214 cv
784.655 128.629 782.822 129.433 780.636 129.626 cv
780.636 200.734 li
796.716 193.594 807.908 179.701 814.212 159.053 cv
814.727 157.188 815.788 155.741 817.396 154.711 cv
819.003 153.619 820.773 153.201 822.703 153.458 cv
824.633 153.715 826.176 154.615 827.334 156.159 cv
828.555 157.703 829.199 159.376 829.264 161.176 cv
829.264 200.927 li
833.316 199.32 837.207 197.101 840.938 194.27 cv
858.176 180.955 867.534 159.408 869.015 129.626 cv
866.918 129.498 865.107 128.694 863.584 127.214 cv
862.122 125.67 861.393 123.87 861.393 121.811 cv
861.393 119.753 862.13 117.952 863.604 116.408 cv
865.144 114.864 866.971 114.125 869.087 114.189 cv
884.38 114.189 li
cp
f
990.583 113.996 mo
992.706 113.933 994.539 114.671 996.083 116.215 cv
997.626 117.759 998.398 119.625 998.398 121.811 cv
998.398 123.999 997.636 125.8 996.112 127.214 cv
994.712 128.629 992.902 129.37 990.68 129.433 cv
990.68 210.961 li
990.68 214.692 988.972 217.136 985.559 218.294 cv
982.146 219.452 979.312 218.615 977.058 215.784 cv
919.089 143.791 li
919.089 203.05 li
921.147 202.986 922.949 203.731 924.493 205.284 cv
926.036 206.836 926.808 208.649 926.808 210.72 cv
926.808 212.792 926.036 214.637 924.493 216.254 cv
922.949 217.807 921.147 218.552 919.089 218.487 cv
903.652 218.487 li
901.336 218.487 899.47 217.71 898.056 216.158 cv
896.641 214.605 895.934 212.792 895.934 210.72 cv
895.934 208.649 896.706 206.836 898.249 205.284 cv
899.793 203.731 901.593 202.986 903.652 203.05 cv
903.652 121.898 li
903.652 118.365 905.389 115.954 908.862 114.67 cv
912.335 113.385 915.166 114.221 917.353 117.175 cv
975.243 188.981 li
975.243 129.433 li
973.12 129.433 971.287 128.661 969.743 127.118 cv
968.263 125.51 967.524 123.677 967.524 121.618 cv
967.524 119.56 968.263 117.759 969.743 116.215 cv
971.287 114.671 973.12 113.933 975.243 113.996 cv
990.583 113.996 li
cp
f
1062.17 160.5 mo
1062.17 140.111 1067.52 122.744 1078.22 108.4 cv
1091.04 91.6118 1108.41 83.186 1130.31 83.1211 cv
1141.53 82.9932 1151.29 86.6113 1159.6 93.9756 cv
1167.91 101.341 1172.07 110.298 1172.07 120.846 cv
1172.07 131.396 1168.52 140.08 1161.41 146.896 cv
1153.99 154.552 1144.91 157.381 1134.19 155.387 cv
1133.03 155.387 li
1123.8 153.265 1116.98 147.991 1112.59 139.564 cv
1109.56 133.646 1108.88 127.344 1110.55 120.653 cv
1112.68 113.513 1116.77 108.433 1122.82 105.409 cv
1124.95 104.381 1127.13 104.188 1129.39 104.83 cv
1131.64 105.474 1133.29 106.856 1134.32 108.979 cv
1135.35 111.166 1135.51 113.354 1134.8 115.54 cv
1134.09 117.727 1132.74 119.302 1130.74 120.267 cv
1128.75 121.232 1127.49 122.872 1126.97 125.188 cv
1126.46 127.503 1126.72 129.723 1127.75 131.845 cv
1129.87 136.09 1133.25 138.471 1137.89 138.985 cv
1142.53 139.5 1146.55 138.02 1149.97 134.547 cv
1153.38 131.073 1155.09 126.7 1155.09 121.425 cv
1155.09 116.152 1153.19 111.584 1149.39 107.725 cv
1143.98 102.324 1137.63 99.7827 1130.36 100.102 cv
1130.16 100.102 li
1116.19 100.102 1104.17 105.313 1094.13 115.732 cv
1084.08 126.153 1079.09 141.076 1079.16 160.5 cv
1079.16 173.815 1081.96 186.23 1087.57 197.743 cv
1093.18 209.258 1100.59 217.941 1109.81 223.793 cv
1125.8 233.7 1143.95 233.828 1164.26 224.18 cv
1166.41 223.151 1168.61 223.021 1170.86 223.793 cv
1173.11 224.565 1174.72 226.013 1175.68 228.135 cv
1176.65 230.258 1176.74 232.414 1175.97 234.6 cv
1175.2 236.787 1173.75 238.362 1171.63 239.327 cv
1145.68 251.74 1122.07 251.291 1100.82 237.977 cv
1088.97 230.581 1079.56 219.934 1072.61 206.041 cv
1065.65 192.147 1062.17 176.968 1062.17 160.5 cv
cp
f
1250.12 164.998 mo
1250.12 153.652 1246.2 144.12 1238.35 136.401 cv
1230.5 128.682 1221.72 126.207 1212.01 128.972 cv
1216.77 130.452 1220.7 133.186 1223.78 137.173 cv
1226.87 141.162 1228.41 145.986 1228.41 151.646 cv
1228.41 157.306 1226.42 162.304 1222.43 166.638 cv
1218.44 170.974 1213.52 172.851 1207.67 172.271 cv
1205.55 172.012 1203.81 171.042 1202.46 169.359 cv
1201.17 167.612 1200.63 165.702 1200.82 163.63 cv
1201.01 161.559 1201.94 159.876 1203.62 158.583 cv
1205.29 157.29 1206.9 156.706 1208.44 156.834 cv
1211.46 157.027 1212.98 154.776 1212.98 150.081 cv
1212.98 148.022 1212.11 146.351 1210.37 145.063 cv
1208.63 143.777 1206.74 143.263 1204.68 143.52 cv
1197.86 144.549 1193.17 148.024 1190.59 153.946 cv
1188.02 159.868 1187.41 166.955 1188.76 175.204 cv
1190.17 183.453 1193.58 190.35 1198.99 195.892 cv
1204.45 201.37 1211.14 204.304 1219.06 204.69 cv
1227.61 204.562 1234.94 200.767 1241.05 193.305 cv
1247.1 185.779 1250.12 176.343 1250.12 164.998 cv
cp
1219.44 112.645 mo
1232.05 112.582 1242.89 117.824 1251.96 128.372 cv
1261.03 138.921 1265.56 151.593 1265.56 166.386 cv
1265.56 181.181 1261.06 193.82 1252.05 204.304 cv
1242.92 214.854 1231.89 220.127 1218.96 220.127 cv
1218.57 220.127 li
1207 219.613 1197.12 215.399 1188.95 207.488 cv
1180.78 199.576 1175.64 189.286 1173.52 176.613 cv
1172.23 168.574 1172.55 160.823 1174.48 153.361 cv
1176.47 145.9 1180.24 139.95 1185.77 135.512 cv
1184.48 132.361 1184.96 129.53 1187.22 127.021 cv
1196.09 117.438 1206.83 112.645 1219.44 112.645 cv
cp
f
1318.82 203.05 mo
1318.88 200.544 1319.69 198.586 1321.23 197.172 cv
1322.77 195.759 1324.57 195.021 1326.63 194.956 cv
1328.69 194.892 1330.49 195.634 1332.04 197.184 cv
1333.58 198.733 1334.32 200.541 1334.25 202.606 cv
1334.25 210.74 li
1334.25 212.872 1333.48 214.71 1331.94 216.26 cv
1330.4 217.81 1328.59 218.552 1326.54 218.487 cv
1275.11 218.487 li
1272.8 218.487 1270.93 217.71 1269.52 216.158 cv
1268.1 214.605 1267.39 212.792 1267.39 210.72 cv
1267.39 208.649 1268.16 206.836 1269.71 205.284 cv
1271.25 203.731 1273.05 202.986 1275.11 203.05 cv
1275.11 129.626 li
1272.8 129.626 1270.93 128.854 1269.52 127.311 cv
1268.1 125.704 1267.39 123.87 1267.39 121.811 cv
1267.39 119.753 1268.16 117.952 1269.71 116.408 cv
1271.25 114.864 1273.05 114.125 1275.11 114.189 cv
1290.55 114.189 li
1292.61 114.125 1294.41 114.864 1295.95 116.408 cv
1297.5 117.952 1298.27 119.785 1298.27 121.907 cv
1298.27 124.03 1297.5 125.863 1295.95 127.407 cv
1294.41 128.951 1292.61 129.691 1290.55 129.626 cv
1290.55 203.05 li
1318.82 203.05 li
cp
f
1389.54 203.05 mo
1389.6 200.544 1390.41 198.586 1391.95 197.172 cv
1393.5 195.759 1395.3 195.021 1397.36 194.956 cv
1399.41 194.892 1401.21 195.634 1402.76 197.184 cv
1404.3 198.733 1405.04 200.541 1404.98 202.606 cv
1404.98 210.74 li
1404.98 212.872 1404.21 214.71 1402.66 216.26 cv
1401.12 217.81 1399.32 218.552 1397.26 218.487 cv
1345.83 218.487 li
1343.52 218.487 1341.65 217.71 1340.24 216.158 cv
1338.82 214.605 1338.12 212.792 1338.12 210.72 cv
1338.12 208.649 1338.89 206.836 1340.43 205.284 cv
1341.97 203.731 1343.77 202.986 1345.83 203.05 cv
1345.83 129.626 li
1343.52 129.626 1341.65 128.854 1340.24 127.311 cv
1338.82 125.704 1338.12 123.87 1338.12 121.811 cv
1338.12 119.753 1338.89 117.952 1340.43 116.408 cv
1341.97 114.864 1343.77 114.125 1345.83 114.189 cv
1361.27 114.189 li
1363.33 114.125 1365.13 114.864 1366.67 116.408 cv
1368.22 117.952 1368.99 119.785 1368.99 121.907 cv
1368.99 124.03 1368.22 125.863 1366.67 127.407 cv
1365.13 128.951 1363.33 129.691 1361.27 129.626 cv
1361.27 203.05 li
1389.54 203.05 li
cp
f
1471.25 114.189 mo
1473.57 114.125 1475.44 114.864 1476.85 116.408 cv
1478.27 117.952 1478.95 119.785 1478.88 121.907 cv
1478.88 130.205 li
1478.95 132.328 1478.2 134.161 1476.65 135.705 cv
1475.1 137.248 1473.28 137.988 1471.21 137.924 cv
1469.14 137.924 1467.3 137.152 1465.68 135.608 cv
1464.13 134.064 1463.38 132.071 1463.45 129.626 cv
1431.99 129.626 li
1431.99 150.756 li
1459.51 150.756 li
1461.63 150.756 1463.47 151.528 1465.01 153.071 cv
1466.56 154.615 1467.3 156.417 1467.23 158.475 cv
1467.23 160.534 1466.46 162.334 1464.92 163.877 cv
1463.37 165.421 1461.57 166.193 1459.51 166.193 cv
1431.99 166.193 li
1431.99 203.243 li
1463.45 203.243 li
1463.45 200.636 1464.19 198.601 1465.68 197.139 cv
1467.23 195.676 1469.08 194.945 1471.21 194.945 cv
1473.28 194.945 1475.1 195.717 1476.65 197.261 cv
1478.2 198.804 1478.95 200.606 1478.88 202.664 cv
1478.88 210.961 li
1478.95 213.084 1478.21 214.917 1476.66 216.461 cv
1475.11 218.004 1473.31 218.745 1471.25 218.68 cv
1416.57 218.68 li
1414.5 218.68 1412.7 217.903 1411.16 216.351 cv
1409.61 214.798 1408.84 212.953 1408.84 210.815 cv
1408.84 208.551 1409.58 206.706 1411.06 205.282 cv
1412.54 203.859 1414.37 203.179 1416.56 203.243 cv
1416.56 129.626 li
1414.5 129.626 1412.7 128.854 1411.15 127.311 cv
1409.61 125.704 1408.84 123.87 1408.84 121.811 cv
1408.84 119.753 1409.61 117.952 1411.16 116.408 cv
1412.7 114.864 1414.5 114.125 1416.57 114.189 cv
1471.25 114.189 li
cp
f
1492.87 198.654 mo
1486.05 188.363 1482.65 176.696 1482.65 163.656 cv
1482.65 150.616 1486.76 138.934 1495 128.611 cv
1503.23 118.29 1514.61 113.161 1529.15 113.224 cv
1529.54 113.224 li
1537.32 113.224 1543.98 115.814 1549.51 120.991 cv
1555.04 126.104 1557.81 132.39 1557.81 139.846 cv
1557.81 147.302 1554.91 153.429 1549.12 158.226 cv
1543.33 163.023 1537.06 164.683 1530.31 163.202 cv
1528.19 162.676 1526.58 161.491 1525.49 159.649 cv
1524.39 157.74 1524.07 155.734 1524.52 153.628 cv
1524.97 151.521 1526.06 149.875 1527.8 148.69 cv
1529.6 147.572 1531.63 147.264 1533.88 147.765 cv
1536.13 148.216 1538.09 147.56 1539.76 145.797 cv
1541.44 144.035 1542.3 141.867 1542.37 139.295 cv
1542.37 136.724 1541.15 134.309 1538.7 132.05 cv
1536.26 129.792 1533.07 128.661 1529.15 128.661 cv
1519.5 128.661 1511.91 132.125 1506.38 139.054 cv
1500.85 145.983 1498.08 154.079 1498.08 163.341 cv
1498.08 172.603 1500.3 180.966 1504.74 188.426 cv
1509.18 195.889 1515.19 201.066 1522.78 203.96 cv
1530.37 206.854 1539.22 205.986 1549.32 201.355 cv
1551.31 200.455 1553.27 200.359 1555.2 201.066 cv
1557.13 201.774 1558.58 203.092 1559.54 205.021 cv
1560.44 206.951 1560.57 208.914 1559.93 210.907 cv
1559.29 212.901 1557.97 214.349 1555.97 215.249 cv
1542.4 221.167 1530.18 222.453 1519.31 219.108 cv
1508.5 215.764 1499.69 208.946 1492.87 198.654 cv
cp
f
1635.38 114.189 mo
1637.44 114.125 1639.24 114.864 1640.78 116.408 cv
1642.33 117.952 1643.1 119.785 1643.1 121.907 cv
1643.1 124.03 1642.33 125.863 1640.78 127.407 cv
1639.24 128.951 1637.44 129.691 1635.38 129.626 cv
1611.45 129.626 li
1611.45 203.243 li
1613.51 203.179 1615.31 203.924 1616.85 205.477 cv
1618.4 207.03 1619.17 208.842 1619.17 210.913 cv
1619.17 212.984 1618.4 214.83 1616.85 216.447 cv
1615.31 218 1613.51 218.745 1611.45 218.68 cv
1596.01 218.68 li
1593.95 218.68 1592.15 217.903 1590.61 216.349 cv
1589.07 214.796 1588.29 212.951 1588.29 210.815 cv
1588.29 208.551 1589.07 206.706 1590.61 205.282 cv
1592.15 203.859 1593.95 203.179 1596.01 203.243 cv
1596.01 129.626 li
1572.09 129.626 li
1570.03 129.626 1568.23 128.854 1566.68 127.311 cv
1565.14 125.704 1564.37 123.87 1564.37 121.811 cv
1564.37 119.753 1565.11 117.952 1566.59 116.408 cv
1568.07 114.864 1569.9 114.125 1572.09 114.189 cv
1635.38 114.189 li
cp
f
1670.11 203.243 mo
1672.17 203.179 1673.97 203.924 1675.52 205.477 cv
1677.06 207.03 1677.83 208.842 1677.83 210.913 cv
1677.83 212.984 1677.06 214.83 1675.52 216.447 cv
1673.97 218 1672.17 218.745 1670.11 218.68 cv
1654.68 218.68 li
1652.62 218.68 1650.82 217.903 1649.27 216.349 cv
1647.73 214.796 1646.96 212.951 1646.96 210.815 cv
1646.96 208.551 1647.7 206.706 1649.18 205.282 cv
1650.66 203.859 1652.49 203.179 1654.68 203.243 cv
1654.68 129.626 li
1652.62 129.626 1650.82 128.854 1649.27 127.311 cv
1647.73 125.704 1646.96 123.87 1646.96 121.811 cv
1646.96 119.753 1647.7 117.952 1649.18 116.408 cv
1650.66 114.864 1652.49 114.125 1654.68 114.189 cv
1670.11 114.189 li
1672.17 114.125 1673.97 114.864 1675.52 116.408 cv
1677.06 117.952 1677.83 119.785 1677.83 121.907 cv
1677.83 124.03 1677.06 125.863 1675.52 127.407 cv
1673.97 128.951 1672.17 129.691 1670.11 129.626 cv
1670.11 203.243 li
cp
f
1757.43 164.998 mo
1757.43 153.652 1753.51 144.12 1745.66 136.401 cv
1737.81 128.682 1729.03 126.207 1719.32 128.972 cv
1724.08 130.452 1728 133.186 1731.09 137.173 cv
1734.18 141.162 1735.72 145.986 1735.72 151.646 cv
1735.72 157.306 1733.73 162.304 1729.74 166.638 cv
1725.75 170.974 1720.83 172.851 1714.98 172.271 cv
1712.86 172.012 1711.12 171.042 1709.77 169.359 cv
1708.48 167.612 1707.93 165.702 1708.13 163.63 cv
1708.32 161.559 1709.25 159.876 1710.93 158.583 cv
1712.6 157.29 1714.21 156.706 1715.75 156.834 cv
1718.77 157.027 1720.28 154.776 1720.28 150.081 cv
1720.28 148.022 1719.42 146.351 1717.68 145.063 cv
1715.94 143.777 1714.04 143.263 1711.99 143.52 cv
1705.17 144.549 1700.47 148.024 1697.9 153.946 cv
1695.33 159.868 1694.72 166.955 1696.07 175.204 cv
1697.48 183.453 1700.89 190.35 1706.29 195.892 cv
1711.76 201.37 1718.45 204.304 1726.36 204.69 cv
1734.92 204.562 1742.25 200.767 1748.36 193.305 cv
1754.41 185.779 1757.43 176.343 1757.43 164.998 cv
cp
1726.75 112.645 mo
1739.36 112.582 1750.19 117.824 1759.26 128.372 cv
1768.33 138.921 1772.87 151.593 1772.87 166.386 cv
1772.87 181.181 1768.37 193.82 1759.36 204.304 cv
1750.23 214.854 1739.2 220.127 1726.27 220.127 cv
1725.88 220.127 li
1714.3 219.613 1704.43 215.399 1696.26 207.488 cv
1688.09 199.576 1682.95 189.286 1680.82 176.613 cv
1679.54 168.574 1679.86 160.823 1681.79 153.361 cv
1683.78 145.9 1687.54 139.95 1693.08 135.512 cv
1691.79 132.361 1692.27 129.53 1694.52 127.021 cv
1703.4 117.438 1714.14 112.645 1726.75 112.645 cv
cp
f
1869.35 113.996 mo
1871.47 113.933 1873.31 114.671 1874.85 116.215 cv
1876.39 117.759 1877.17 119.625 1877.17 121.811 cv
1877.17 123.999 1876.4 125.8 1874.88 127.214 cv
1873.48 128.629 1871.67 129.37 1869.45 129.433 cv
1869.45 210.961 li
1869.45 214.692 1867.74 217.136 1864.33 218.294 cv
1860.91 219.452 1858.08 218.615 1855.83 215.784 cv
1797.86 143.791 li
1797.86 203.05 li
1799.92 202.986 1801.72 203.731 1803.26 205.284 cv
1804.8 206.836 1805.58 208.649 1805.58 210.72 cv
1805.58 212.792 1804.8 214.637 1803.26 216.254 cv
1801.72 217.807 1799.92 218.552 1797.86 218.487 cv
1782.42 218.487 li
1780.1 218.487 1778.24 217.71 1776.82 216.158 cv
1775.41 214.605 1774.7 212.792 1774.7 210.72 cv
1774.7 208.649 1775.47 206.836 1777.02 205.284 cv
1778.56 203.731 1780.36 202.986 1782.42 203.05 cv
1782.42 121.898 li
1782.42 118.365 1784.16 115.954 1787.63 114.67 cv
1791.1 113.385 1793.93 114.221 1796.12 117.175 cv
1854.01 188.981 li
1854.01 129.433 li
1851.89 129.433 1850.05 128.661 1848.51 127.118 cv
1847.03 125.51 1846.29 123.677 1846.29 121.618 cv
1846.29 119.56 1847.03 117.759 1848.51 116.215 cv
1850.05 114.671 1851.89 113.933 1854.01 113.996 cv
1869.35 113.996 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%Title: (1 crowns.eps)
%%CreationDate: 9/1/2015 10:14 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CKhHFej')FT'Mj6&C2a9];iI.J>e-bU*p@nhMNHZLkGnpYkRM]`W*8/laNn+e"(S'"J"l9j$!,r@<ESlX^fn]<OZit[SL+S
%NRkpTq`f.u=]#Mu1'meBs8LWP>>H3-okpp+0N_kr>rt3P[sG5=m973X?"u=QSaK`sl-F+FoV-Xs?`Kq5ok(Q/7qo52XW:90b$)0Y
%g1]&=gR[A>YGB>B"4[l_Iab,se,XqRh!D*_'54H'ld7,ZD=2W>a^V\O5I-q=okCa]d-10aeR#$,qKs)J.r3it]i@:rq@D*.>Y3:l
%VW_N(\\;E6D>&@LV1'lift1HT'@We;'0s-692e?4rtE?NnUCk7!g<Qp:1poPL4A0k/?)P2qg%jL)1>%_5R4,>U<bTt+GMoWA;UTu
%$uX[X:R]g?S_$K\&s]5TF,p7ErfInl2;j'5OC]/m,3-g3=;'&MZIU<6b+S*C>e%Pop"p_]5NYR6ld`[p-XP(jVmk4O5?bKHD;`=o
%BsZZAdq\L\F-9tWYJlFn?G/p?lo20&XRbXg-HcA.-+9kFK6iUBZ/%O];TtDBg<7[gj7V]0ohMBJNK\[(]D\%N3ZEg)-p&BIOtq]F
%_!&!:P_IP=f>nP)A=+p>YpCQVhKat<50tF@90+g4$hfH+F/.2DBXHobTphN"S]5!.>`C:;rsq%m[[I0,jM15`#m\.M]p7MEaIT.D
%)8Zp,0=K6n8o&@EI>m:Oim1%;q%ds;Z[EC7mJk#[W/8ueGTI:GH.f&%N><H3pV1&2Dg(;Do9;F&l*O5^elqt<J,a;aZIds8Qep;/
%]lo/HGd"KZqi1Tb>FK#u/8]U22/7dC:<Sm&NK_!;1e@6)e4]cke`B#ZruJ"$E@_EWIKLY&de^Z6CnG5Vp>s;.nPupLWch#4+`223
%nN2/u&t\qoU0t\/I]PGa:eh9Jg^9AcB`F"mR8;jb[GGR+28QM3VtW]nF+a_OX&o1-GFV.3Np==3iF&uHoJ-ljWqHoo*Rn;?h%U\)
%cT[qOHOh'n`MI=Uff81p:C\>OdUMCHHW]!>\!q*t"lIe#ZJYEjC5t<6?G4hAB_hH4pDOhbm#ZmkYO`G%QI[PNM*Cp0H:\[SZI^32
%21cRh/@5">Q"YW[Yr`^UDZ+jngMSp\a(ajBa=H8?7]fhNqQnqWO!U:(C-9!M*9BD]G`'<R_U=M5"j=@3BT^\=g,a*Cl@%N*+.p?g
%/8ZD.:[3n4UuYRka_6J%>#oRdcAnUG]P?N4Gg2LKf?`O^8c8`0d7/n;]6iDTd[@u755fh#P&^9grO\nH4<Q'8gi._Xe4'a3.PPUj
%pr;HG#YU<[bGN!4a0'mdc@:K&f_`!X-Ssoao2baL(B7C'_c0fVU9XSKX2jn]%"6uIOD.op^B^SEqPUD>(IU+&Eb(/h@+@[m'G4'9
%XK2kqTc_\d_WcXon#L+LZ)QX\M8,Y0YAXR@K5aY5;>ToF..-u&5&U4kn+UKDhBI46msgVjPC\9,K7dP1ZW0.8gqK^g];I?"7a=Ac
%\E,*57RD`eBJAD\=AX+`Z$_GbS'U8,1Zuu,jBuq<'*[kqb1\gl(&nQ8"P*m?0W"`H.i6("(l_7e&#-$3Fdu6>YGt;PPj<c:YBIr.
%pRo^N(jQ(1^tbS9q5Qpa?0mV!mIOf:^.s[M(8cUkL9]ZP9uq5sn/o=f6<!nk!iO$BTqcpikE5OkbLIXGafV-2#lpcS58uIfXP3J+
%#/#Gjrf[2m&YC/0VZ(YlCf,addO1U*mV/k"G2WiGY&l_Ts(X>ke4ZZDmBG!nldT-Y.9X6s7]8pDj.G2#:ji1dl?95?o6[moI6d_A
%76S!fnn!<S2G_f=ps:$YO9d<b(QYG_s7:/i.T-lOENmr/f8f-CA"b>#3qH9DE4<YfDdo5.'$ZN1s,q"N`^I/PYEC:dNtcRl;T;'m
%UUo3]O2W!sXRojp#T"9aF2*bh(/X_f+F),:G1u>kO+.6$pHqMoY$6Sd"s$<`3'O2<2u&.%]mm3Tr3KM9]DooI5i7%n8`";BCB#8.
%cDMo]2s]#V),i`#2\$><ikMka:Ed?jRbT!E^#%^MF,N]j'N7)C?@RtmVa(2>oD-^W6K]_a&':6YG5JB:m'_7O;lnUFHiCBiXQ^0q
%qJ".YQA\u7dn[$jkOUonrBP,bV\mHo]iX#7_s.R5j"<K^)gh,CaB19c.6UV2_Zg-?6!:]g#oNpA^J$;Oe<-R_7YWsCb!c%\#G$0%
%=":&2E]+me[G.;aND[B:q6FJd<F0OUQLC0sD8%irdAon>H_o8-pNY/gqfYUZWu;j]G$u46Z3S#>fTn^9oQH&*BZ`E%s"q="p%0E,
%A>Ca]b)(*f]h^-bRRgu>H'PgaeP<;T9aasu\ot`$aUf\d9%2"P/OBG\2PH[CrmU2:jr&jrAo_I87&XO\Y-dXB"6uFTqm=tna_n<]
%T;&&@;mb9D2+lD2URI":.:LDoSD?q"WiW=o2OheuhHLm5ia[;*On>!,E*N"tdqXrDYIA;t-FOT!>bG1?VPT-IlCG?E>hSK<D4(:c
%H;MJ>5Xr67Bcj0L30KuB1#l<c*6tR.gXXSUWQ#N6ZBV3^Esq`q84Sf"7Mcf9%%j'ECo49N=`-M)Tg5e[D08XS,bf%'dR5"#V/G>n
%l33Cp8r5)J27dXX"]:n7hG>,u\0gHRn"`g@$\^<k`fgg$l%FpiWdB)F>p!.[7t]"94_YE=.hQC5A#ZPp.]9t'BsZM>dPuG?8$-t%
%LfU-%^dkbaAR4PrH9qb_D&f0+=Vd"/L)3t[//\br+E?DX#sU"A>JF7O>Q*fBgiQkFlJ6dLpNgPCR$l9lX1O@'UR/3<lC69?^rC*W
%KVk94a9S^;6_[IMS#c1UhE=!)b1*=*otAB0ETYI-N0)u&VORK'9iP:jH&sE$.qQ.%K+nj6p"$1GK2[F5]kX18$TEsVCX'j*@2g.3
%s.P-,J4b[!R/Y7hWcWK_ZbLQ@;JEVoXL;k4aNrEt8X?(KHbFKP1QO_.&ghD]c<bq&J7V@I?ab=Wmg1MJdkE7+]rWe%nQS<@WD@<S
%jsco^dF^8<G0*)+mi.ekM$TSnDD$S;V#+soXMV%"eX_BG14=]4W8XT<M5RsTI0dLg/WG['VVI;$H-mu44m]P:lc\Z[>(.i8R#[(D
%OD)FN!ji5gT'eP+F^X0.S*]-!Z[=HI#TSPCn_QbGs*:BI2pA]*g1,3n)1=^mKo(Tl>"iVpf;I/X][4XrqO/B#qo#D52!g*\h-+@h
%-;cL[4qCj'(u<>+k4:!s^fD=-\+>m]=l^-X^fmd.UeOt5d6TMaS3ojS<oaNM.&%jpM6-',&=I2l[bE/Gi8RA2e)%5#HoUDAW]lna
%1XqU3g9YE!W]O^bB+:5jF@?nURG%$IB3CST/P*BpCQ87n?=U`Imu1%sB.0CY78"\)6em)BT+s$+3BFaM[9,rJGH[dJMBWrfUW,#*
%c<]p+_&/c#2GiTT1rbY3B+W70VfDX/g,XI\T9Mmd&2_T'/h'I`aou<LVH.:8cE7i$T)>"UE%t[M6TN/F@Z"t"mQJ>?XNk!$%LoC]
%JFW$^c=0Y11S)t#pgHGBASC=%*Jofthq:1U4l1$U)pRdf'8i2h46'Y<?&R,)VH[\,ODaF^<G1Vqb\9>-MDMB2Xj^Q,D7e?Q":^?)
%,SZ^pBCbH[$+6CH5gC9K_JnNX(\]0d#<K?q>uZ!P=g.;eQ/VOMF*>c1UEH/N%esi`k)#+cC$]hM[F<Y!+\CH%XuZ+al_V;iMGZ=H
%bYe5sYhgjPX1s;eX0!"No"0>]27EKmLm4oFI#K;7QWI,[[p1,g6c8P7f@S2'r+Go6F@,,7M.Chdg\<l>hrmA6d4."W^0W8K%a:09
%j0X@Q9rUN%3Ajd:QPr#e;Q?%O<F>2j38`8M'+u*f7s#>G8crC8Ogo0H[/,dXT&]eUK;UQkp3qKVNGe!fFbH^4nn<`C#gunSEKUpb
%B6#inY]obGgtEWU`H_dA)m,kib&/JRiY\Fu!P;J$SAQ]%ZP6iTIZB3l)&)BU%sVpM*)dkoor>,Wnlbi/1BdC%_c#c=Np4h)%]X\m
%dO?90YG8_CB)1Lun$p&4Dmj[j$R=BL*Z,[;&.QWq8F<#'[uWl?Q],0K<jJZJFP_PU;XS(-<AXiCN/)B'FSZI?;CQj6pY!+3:mBeW
%Ou^aYdsJDs1.=ThJf[RAbZh4`S($Zkr`NFm1k(4b?&2k;bcL'^,PGX#*K]fdLnN")d(/6J#KmS$mTY%)ed@#1HB,Mo#'j9n@(1<`
%3L1MonT!BQ*HOgG7E6iZmHulYa46B[`n9XB_+J@'4W8,Gn)=eb;e'=BLFq>gk(08kIbHFBrgm-"ZWD&9)9]SCVNUi;R2r^ts-N5p
%Lghb!DBn%B!B"i:#N`jC$70,$U3M:q`O`HlZ_"UKDSb5VR;'-Rdd1mcN@\%EFjHq19Rt]g=ZsmP['6rEeri2*[Bh3!Ec?D*Y.&A7
%ZZf`\/je@>UeWO3,hd&+`[U-u;jN,,plA[KUb]BKZ>t'J:huWq=ffVSG4W;U\BkNg[RSOj/hYbt>XM%@"")\A*^(h%.(_JYAH\`P
%@O+&@Pf%dCHY;b`AQ?'\/&uQgX)eXhA1i<>Z[ZB8A!HBlH]5i)C&`Ueg\7-S.9s5"^<fGa^YLqL\tWGrr5(87NGa$N!UK(\kE!bB
%lbD&@B2M4/>jK#[B,>C7&#qV;5-HupDQRse2+<KFd^(m_WF5H3R0`(j@1/ps4mYJABGQ#\'t-%tXS=($5:>PfB5gqRnBch\%\,j#
%mXe<@K:rK>'T=p=3P4Q)8;cu.'!X4TXnK)JD4f>'&lhm4><BL(P>`UCD0=1lD=@**H\tF;:J[?+s#=iel7&K7@%3D7360h=lufmL
%BJ;'IJ(gon79R?$]FC0)=7OAAC_^A8B;tmjo1_8`-uYo*2kMXeelJ*DE*CT1>VsMeo-^*1%9g+I<!`'kCepF&nu!7?Er+,9K$P.5
%*WLD,k1nTVo]kG+AV=LX:#mK.4&<cT>`UW35d#L.>g>3Vg8uaJHnHCj_ZORqV+OXlPR3.+chAJti?qJ2jKKVomgm3'ad+KH:Yuau
%2U<i'4_gLK0@2c'(I5N+*W+7W2W)/2]-o5$C2_nt-*o6oos=?EFt$)'O[lS(CA1'uYT3oW"Xg'/T('QC9<#4??L1',Q4$PEfIsGh
%V.qoMJQlBr=k-Dt<je>[Wu<P$&Ke2ojc3Dp;8p!@=sb20_.ENnd=%YaV6i3!Clp6[0c4+L:=.,*X/ub;$`20:QZ$q=I/1YB,:m2>
%"NGh_0i8^q3/FnWVbo[ck#LG+p#`<$B><<$gM@Rc?\'Sql5j3s;RNnKTCNGK_d(!>YJk3dOGa4K3)8`)Lnf4Y([fLK)l'kN%^rCP
%f3aWkd%GN_$uko>J(rc-%@kJI:ZF=RPJm2eL9E.N)3^unCpB_%Y/-LNX]E"^F+:HWaQgq!db:.LQ:YEOnSS2.iT#pPT;Lf/4hUBZ
%qL7Rp]"Ki1\BoMAHoQ>s](Tt5g<A';V+.lJ]rBmO?-tUn(>_0!oHJZF\,P-Q(CQe_RTWpY0C18&L,X^W]DQOA?m`ConDHt8hST37
%8U$m*>i)Ar(*9PalQi<uobJ(0^0Y06&*mFmNJER0bN8;cK;$$1pHDE/ApO(#SGDrU\,>Xb@eaqdVK1Humh5VHLXV=VNRQG>nE.@%
%Dp:B4W12oIi7W!VCH%7-2fE&QqQ7':<.6p?f5/".cO9>7X.L3j]&hu:jdB>NX&Dgfp8K"NfBUtYNRR"fcgT(eF.rDYDL_2\[rc:I
%MB#+"hHm@Ap$W:[O70aQ%FLi\94&1C[-?30n&oKnCY'>7mC/RMXk=XF5D]'a]i449I@H\.Xjj)s;bMo)c@br8/TlDdn`A!Hl%Prq
%DcW4iVtV7GI<OZ?6*40N_QUuOb5V72mofkgX/=@Uq/rk1jk8L"o@Dq`Z^p@<:+PX7\%cDSG8D;_4&j^hIdm(&6D[\oF$0Ej`In'M
%ppZ"fA+"R8<M`Vu'@THm,&OWor2fd]0PBh'brZ[,br(gT=)!f9Mhb6;1\J_aH$/K:n6u:H_U@09NHZm//j^J1jg@n\`Zqh>r\?Y:
%G43nMgqE6GgO7S_78nN.n(kdbI+%KUlP<=iB^t;hSrF'KmG<.352UUiI(q^lHhH+b`t#].q!`uAi?HcGY^:dMj?KL`Xj4u%k23:'
%pZ7`R<keF]j9N4b'`:.^Ie7;b7P6nhGSiC3mc"(r]l,R=n7ngFVY2n`USJhY[J29n_WUn0`72\!PcBKIMlnWamkD>>leTUTri!T^
%.bi/(VO.&G5QAGqXkpV!W-@.3G->esIoG$&>(!`j^X`+nnGVquP,Kse+1?AU69jbKO"3;$qX%be^9Y#Tr9`=c;WF7\s'Ym%f"pY"
%r]NP,I.YsVc+S;86bE$ipj$F\rSI.rjh#lc4a%HCHPQSfoM3Q4V]W[UIeQceUht85_059nAc#X!FEhg.aN\*:=cE*GCIqH/`'G>8
%80G2.EUVJ0r&Xk&3EZ5s5qsD(J"9qP-5sER1VMFa?O#+4O50*]-B$j)kOE!TPjsF[A5W#9rCLS`R:*UoT0@PiF`hI!H+=R3Dh"!q
%Dgn,K,KXF`T5M7:lI>3b]1[p*o4V]]]tE's=5niCD&,$6.siDg"lc]FgGHG[GF&dL=1[N[mEK7^I$F((fAY9/k1a/$f:T.gcKr-:
%AT:65k=a<!Ac'I'1^TXADL$7#_bng+\S.kqP7M8tQtJhlnk&UcR!a4`<q!b;5$2*N50E+[:VJ$l7Xo/0YM0!@b&V#.p$B\&Q9AgL
%o^*(]\pXPDah>Z3]tNIFB'X<GZ@2NI-FNAk3c3ecAZ#E(Y25a-T.6?-LNf]NkM(o@HMoN5STgFpml],WhY*WZM(<N%5><Cap$hnN
%[TZrrGk`?Nrp0,mGkeH4k#SUR06b%6\c&LA^GTZe=h=;!!kRV4BKlme(QYFg)QWI*`)K4UJ)%\<c(]o691F#]@/"bSlJ_J]IEaS;
%'a-\M1C#bPqUSIDqfVbO>'HV"GO7l,-r-8(.U-8P/]D(&jm0e]e"nf7q>-E<_><OfnaU_!Z?<`!p:kWVa>AJg06CrM\,DJ$)>3ua
%q8XFI/RtARDZnC4T,*%A;o^E\ce`.#>jPJgY@epu3r8OK&](IT=dV0Nj;R5/>I5=#Hp2\WPgoV#^[A[7^/A3!l+o=>><>uaEfW0D
%f=,<u,VFHWGEWLJV6UPM2oj*oD.JBnep)AF[i>q!NsVTA<bN'"NLqXYM.,4Gh"%\Z24bV.KBe(k8d@N3lhZ!f*GWpHk0r?aok1st
%Gq/LL1&^^CP/SdB5P8S260.t0$kbZp5Mg[R[.:'A7kVBpY?(2i??@n+<heK2]_3Ve(C`5Ss63C4WZ4KU\c/4mBUF1op$a(nc"<JW
%iAp[?8X&\rgn15K?CMPfE<^9-]XFE&=.`fRn\lT[Rj*7UkqY",N+?O[_M*5G!m/YI`aKs'K+k.TEJJ6Iq;GkoePGthUKk!9chI;8
%Olr55P3&%]UCU)qnq;rGQAIU8e\DDm;WYX,`G:)-(Ie)/7)N,VmjFHqZul!<Prq8P/58Nk]I`T+4jo^qdJI4_Oo42f@3U0'GCI`i
%K_HtNDkFL>([fe^aUd$j=oI;//^g3ql`4B"I$e-OG-;=^(=[QkCgmFhhB[G[q.SaCNAh)8NA!@$/%)/@\%Q\&fGIKSeS'.SCPtm$
%@s817>2J;uTe7G2hL4a-_H1MsJ*SVuS3IeE=Eo1*at4X*DLPi>rquY&G"RZSou^l^H"1:K94o'\D0+Z<jL^glf4+/Zd+k%]rOU](
%r-JD>h,!+1^-,Vuc"u9Ee2),'j'%>Zh1Ohc]p5LDPD]mKB;_nnS(Ke!c#.()]<#R0r[Ssrf3E1]Ha@RfJbL<fRr.&4Z2%T-"+pVC
%[X@`;1="&[SdQK6QZQQRn6?TI0I>4O9[5`N3=kr/;;[#2c#Vu]]FJjt*Q;X>qe(h'iV$.!DsAG-Gd+rRG[+$o>CO;bmnaO=G8FU>
%I(Hf^qUXgNS'&RR-c-Rj.dO)gofpmNbKF\Y9XTpA3$(=k]EFMN;tIH.^0TE:o:3mnf[SA`IjCe:%Zf%.>2N!Ki5oG,++.PTJ@b!W
%#K&p2D_++5\lC+AHTdGWNuItckrh&;^?aSHKCEHdh=V@Dbl"#6fK?-L2&E-hqS@AQgO-XW(Z&D<YrfRGY>4jR$I@BFO<9O$/04_5
%D2q)uZ]gKdk;#cA$n8E*oO=7/Pumikas_?#)nmjEabSLE+&\O<k4Xh)!LE"RcBHh;X7IjVQ.&dXlBfikDQL"J:;NOmQ92OH^1M9>
%s("i@rRp2r<su4mh%.OZj.W&n\5dhQEpG;^o&R^#D^n4tqfZA-:3U%KlR1fVPO:oR1XL9]SccZ5Fk>,;8su^fS^-2`E:1]Wa5"Rb
%i:2H'Duc5VICHSLBmerOn`aM-\ep6k2r/8[FnkU*iZ:4S9g<HLhoh":pXWAW(-:'>4^GaFG:"T_oo:#bRCsB8X3K2FS\*J`0itb:
%^\ak8nF#uAmCC.!XTiK,pPm9X,HHU.3hFVL5O7,%)H5?Dh-=00jGTn*S82t(2O:ppRoL[$fpp+)WkV>T2B-9u!]DBDZ+[p%kVb89
%5KnR#ULN?^dQj"+liq"SI=7*>H,@Qn4B[!ej<AZ^?@)u-E;.8N?KLtfZ00a0iU`C_bBq9I-6^4)lf?>U%[NHQhXJ[%[XIO?fl%`&
%h6qM<UUg6Qg[uC`:LDpbCmI!`27h=I>D0TXID1)=5HjF$\b1f6IrK8`qr3sA<.u?ie428rhn2D!E,3fd#:mF\5;r(u%En39m,H&8
%I/O$LP^3#_A1Ok0I8Mf(<pD2B2Kj;c@X.t,Z[[1q2BD]r$)cQo&r#eU[h%KteW#:Ya)>iKY8oPc/Oj[9QRf9.]fN*.DGRHfDf.`6
%C_i)M?70O(GQm^.rpnd@om<o.2Rs+8lM7QViS3bS2n)h3DVY5q]MBq[Ctb@7bKm'R:9hpiQNCu0*8ES!b&GrSm,-SZ/Eer:[CY$s
%RD,TnZhb0tFgA@KA`<%$?8(\lSX0*0RdR;]_C8`K[`c"fDg/>fCS.3Ba).V%QhPW0I,!PNCYX46Jo&,gb3JPQVtZ&qQR`kH;`>4N
%[m0h7<iNS&bfe^mNI`8al<is#n\3c5bC^%ZQ'q>96"2S^Q*"`mo984k]fRY:/JU02Zui'9]&go)2fBc'pJ7)]0"lZq5ToUM8*ASR
%19&$,dRl0?c^9]3;aHg*r!nR%q>@$r*Ql=!caA53qYf[VEcXD/)p%P9I^sH8H%5-qH`;#`Ajl83DH'f#f%NQG`+oJ/gM#26gl)..
%U9ZM_npKE4i^q]PO2j.C[Et=aVi]75(%Z_>jmp._H@P$d]m"f'V=%RNc8O>W?TqHCLE#u<ZolI+<YYT0>CZE)XN,)o;L.n2X!0$5
%8!TA,MK,,%:[Te&^[=E[H`7U<pZ[[fV97tReYRtPc)3KBMRA>RIoIjL;RuO=iU->BF`i/DQPg:TjVuefk2+W!(@4V*LUT#H\lk/>
%n*t]9/\O1bGHTg%bI98,V"s"pqN6'o'`-th`s3^7eP[YM=1[&DIn_cjmInEOrU&'-j,`i=e)g/_hX&,7bATlgbFSXcf%3u-9C^D(
%b.$7Y&k<Ola.s5e95peSs02LaCP(u#R)R.qNRR!e?b5(TRGHDYq7AS(]ci:2n9shOj&%X,1p=*H3]m2Z#1N`077&Z?75irprT4"F
%%f(anrc*Z-f=ITh5.S(ImJ0*3`g>QQI_/N2TNap4o\_>3LYf3em6=X"2G3ld=:>Dg\)-a\^%qY3,EU=#iUW1&\*@LJ3:1p-CMuF\
%drlh7:9EosK*1rhUrE5mqYV-h&uX3,+#,o*;YR'Vg8OW$*>qLG^/[)0U*=ORn^55OUQZX"VG+'9qR(N3K?0]Io2._u'<Y</g#oO^
%1.4De>`+=5AQ<Ua.]Ma7l`HFUe=s*YbBF?`Ff/]W?EDR9I!AY*=8&O]F@4]1DF_)h77L9r0_]$[O`'!hI;LO$bu&u'2PV*3h7!o@
%`6R,>8g#4Z^*_;))Q_FPFJ@lNV^LAc_D?$GHJ2<HP7J$q5(61!Np2>F5!I.4Lt'f7`MQeJadttL+KBE:@IB[QFDT7Ima$+*\RtRc
%?9Gn?/2itF?O-N,%&IN7q<lCC0RkHchoAH+s.RlBeo@R,",B$*A[B),>FsOC^6][58#PUUF8CX'\\1nQY!8,JF02d[@Q0nh=s2^p
%DQ^<-rF#[#p20Bg^ZiIh<+$HR+Si]Kjon76B,DNthQ9IigmKK/I[N@"gnP\(O3_`Bf;n#-Y,RntpNI#:c.0F/"+@D]XjIO_?N.\2
%ElEH<"Z-+UqpG'?,t'+mol03hh%0!_?J]VUR%'.Rh5&Qc:@l1HJZ5+Hk5E+g`BNP[E0*8q3q[=_m?2^8gjN"k]7!AZhRo?FqU,%I
%2D83"5H`Q.U@Ya$G>A]()M5rsa4Jk>A-B>n#Q(FlcCc:thcmgeWKEc,1Z`#2j1B87A;kH/XtC\*Z#?1Nn"!7oRQY0#"MBC(6ppDg
%)(G/1.U+\:Zo/0`>.JO<7TX?&f68]f[X9*mU)kF4dSI"A@X,8hVr,5ar77=W92Cla5ODa3$[-r,rjDU.r;?Bgp%7$bYSul8e`uOe
%Ka47-O@<nj:Btq&H]<^Xa!4L"q^7ZRB(R]'P,n$f\p*%=?[huJ&bY$`4=QGr8J&\<O(Nb%["WA/XW'nDQOb9gI=C>N[t]A(rS@ml
%8b]s&cEGf.U.f,u.]*jK'[*k$luThN4oK?9>[QW$"<,DF-*t#2Sqj:oEq@IjIn+TuDm-T4-`cuJ/N.7\p654mhm[99HAhb#5@<L5
%Qeg-@YFeT$&]&IBSYt/lb]_'cO^7I,?RkOqZ@@At*Nf=1WCgt#TUX*7>a&OU0l+a%gd\I&[q+*>3@,Yo\4%V0okFGA9PNrFgMb;Z
%++<QjiS-CfrqKc:RhM1gqMo[K8^ORBo.Nlp)l\e"`B3\GbP)qLC\'>(ShF.2bSo3Ih8!ioCK!</'_[^oMG:i#ZEY0\Q&Xs&EUJ/B
%!LStZ0tk:r\t]2g61nO\)dM1q/)P6HY./XbjidP=2^E`^589@^Wo%W?qA'I.p!qqh2SOLHpRo2tds%S+(O,=+9Pa%g1ct&VgXr^O
%(3m*1LT((3a-G<gp0]V&Ve._1d.fA;:t]1ChUCAS=!'XP%sj,GYBc9!0Q#q.6h&@ggsO%$c]&Go1?=`Z`9okST]8mdW7O[t$[]5'
%CX&]""(je@?iP:ZFmAds`S/!$37H0G+Ld!+;]3u5NuG.eDQcHV0q%A(,E.JWHb@guCo2T%]`#^=ZjQNtq_N:DeZ[kB.]pbC?EJ[I
%qCKGs^F_[^[NG,HQo)PKjh]ZjdnN""rlm(?VS3u'N^RikgisTBK,F=>?0^CXlor1U]CC0JW27T&9Wu*rG/SgX1W2r@h3H]hVps4c
%gF"r9S!?c.h8)0tdPSD1f[DL'WGE[-H5PcDHdiSSc,\]nF+2FpL3GWV3V/3R^iLfH+*$L16r'N;+/KR;a!Zis$#*$fMWg*,d.Q4E
%s(dKbQc._.HAc;1.\0mCWp)HXbGDb40>0`LrA4R<G53K0$&4$!i7/`p53Mkd(e!I2IGdYP.&>/3J^saJUVOu:8H4jK#pO-mIU)AN
%,L5'aP`G^s3U?G^#-Gq<Ee!S^rK5Pm5@*MWlh>/#OaW4ag6eA)ea$4>#L3,#getc5WcsP(A8X$A*h#eU4])&^rm"hY);jLeFg#f=
%m5K?rTr8@l&Y))TVqJ-'(E88L]@LTlH>ajq(Tj%rQeW]&.(n,Gi8W)Kdjf5M$q8GP:'>L:r6a^<?0NFZ=2FoA#jH(JA-N\kA^Yl@
%,:&BY3A-)"1&7BQ\[bel:A$T+G0Vs#0U,8-Vq'@)Zeig=qiWIn1e=?Q0VS!q@\lQ"FL.OMV4C/]ZAaa/<R+"T^U*((@8US[ksE&%
%AVDfVKo?_.FtBY\7t_JcCo&sp%e]ia7ipb!rfToab9`'Wa%$#j9tt5f5@6=NB--GMF"I?%?D7$>f^'gjOT'a^plcLLroD_Oh^SSJ
%ns;IXl,%I3Xd;FhA_FR!P$$YUFHY,Ve;gV-$Sa0-/1Y39(?ok42#X__Cn8g9IOFq2R;s-(Ob$-bb/WG+q4tP3<6dsEV/4ZM(rG*j
%J-l?7Be2,/<d5HZ0nZ0eT^4AZ[+?-kUTpeSAmrSNWBce-*e-si)Ofk&X,_P)TRl3Ss%A'G/<ukH>&#2/!>U,7X[<WL;M?DL(]ld&
%)PY@#&P/3nW2p41k:e:aFXWab.]3E9UD_$N<>ZVUM)&d=&[uA;Y=lqHNC$p>819<5<$7#+8<&dN71BoV92]P?QO6/,fPO0#U8e2c
%LZMsCUcoV@V"Pp/b7"tP.1ag'W0404B#qb9d_5s,r1jRO@H;fG]LDn#a9\q`6E#/DUc#TC<[DJM8:a7H-mI/M2>\MbFs*_leEoVW
%/P@"[e:MYaOMDIY8`pCG)OUW"WZpaq>*gfh^b,][(Tn`k,*`QbgMJ%4M.RdUV3KJd#T.c=G!Y+1,ccXM#R`p$j?eo;K%_UW&lD1P
%B1"76aN?dFW_u8,7-(%iYNWh(WWZb[Kk/oaC`RJmM0\;0/W1i&+LnR!dWX^/J]nE=8`>5$J/JY;H2cNKgCgA?$%V4>'a]]XliR83
%D@=q%"G;@:9\LlCKHU!)','QfcolfS^X=RXa;(E&0_8i;.[6deen1$'6"(jX_Um=h9i:9C'$Z(V%/W[`_kO[sbpMbA!G*$)"&11o
%R(hpo()]1'1;gUa5m]Z>J7g/(:e/$:<q`N!&'/kH#:@AAJ-gk-`[jFN(W9B5<-d=$<0PPM0H#Ke+Z$4@+<b!]A[t6nASj[<k>BD%
%Q9i[alna71(_R1K[90#V&hgK;M9mE%1*e?/9n\_gV'04\M(fNN1.3i`L.ij59jWs1*m$)JLn5"](e$_?36?PLk_GRWV(8Z'b31O6
%88C*DZr<W7kT3Ca#=NN-8;(>R+Gb92<C!\jXXT*=83E(3KR>@__@KKJ`!hTB!gS=/6hGngT71jE.*k:NAbo[^<#"0s$(sa-PQNR"
%iAZ\s!A-XR=KDKn>R,e6$3>[C-=VcEEBOs79T9/`"cGYt<^_kb&HB5D6p@Q(!AZo$V?t\P`(s'N+TY/H)UKR.SBqd?7MuIT>cF)7
%qS7osPVb9a,0toFM+F]ba9ZKh!&tni/5Z`&06di1-O;/u(nr7<'a0Ym1VUalP#XlJ"MmZAE?ZifV0.NL5VS9FO/9f@#g$!)+XCS4
%+PLlPA<tTd7M0WX?pYAL?DWNY4:J?IB]>lp68.nZ/!=kMVJV_4aUCQ=.0s>YPt;lMUZ)#^@Yiu3Xmq:thh2^f;pc>cq#hAPYa/o>
%-[>_!j@!#]@M47=WQ=^tN$4&C=RhT^Z'H]I+Bi>*W[+BlAYLN.M1/%#!@+k2-VHmR+Li4!"5=+^&kO_7#*XX:]gB/;QpNY\(;Wnm
%2hkZ>=m_AIV,o5Y^L>o+FB1]t#IJH=,rWkP1->gfU#HL81E_gI$h;T)(G>n#'H(iiOVna@<'_CpY#0"*"c=S*oI:^Fk^Xs)&M'IH
%m^%58aa=_pc%:c<BEkFslke.ieea0o5^>@^$t4ad<3Wn&WqSph/WI\@A(ADi:1g2OoG"8H(p=FmC9jLg)ARgq9Elt;j90-XD(["]
%iu#]4@4*0e"PJJpXrsF./<;4'1m\5SqX$Z!!VW#K:LeX`*YGVSX].$YP.XV-16X^3KeU2=<aYStLmbtF!$hieN7:Z)X<+?=l/K*?
%!#p\R`X<rQeYI%&bjAA+AKZDHed$p>h>eF<j9:XQNOH2DF%$^)5m3I2\#KQ;=`9Idr\A<a)H\)9Fb/0"">JIr!Q5jVaL#!!MgV/J
%`%DJA$CK9BWOO\Bq'_%97-bHnDPOkSa%TdsD'&OBdS^APT!DZ`3Dc_"G#3!r6&HPN3"3_NTo!?Odr7omFeiOOmh[Zg:_]`]P&.JC
%fcYo5HRKJsi.B6#;OGZq>:NbAfRnL6j!XrY*\erHGZoj(Qino.+IHZ,9N*1`BX49^9;Kq]!RE#mqTXRpaihitG7%fI7(l0'1Jj1@
%%0Dr3Xq/[[6m%j-0Q!sWNT'\ZQ69GBda[+$qfhDXVqr`q)<>bQ1*N%hUOos;!Thi8cp`Um5XK'(#WqSu1kV$tZ2BO>EACLtKgeh5
%SZaOHS&Gr'j;4)+T/:Yp>or3k3D)AHEQ+*#aM<rZUg[2VRUnB3)4kZnA@3?,"WCo=Q93\EBGc$t%K7q6'gQ:hfbaj];F@KGedCnW
%_asR6QH3EZTVT$,>bp$8+9En/j?1Lsm6TH@7]e#P5'.iG%N:Mq_UXto"!gHSgmhp`P6<gq9]WfCYQpn)`=pp'6"2#XZ8&7+Gk5HC
%'?bb!VN7B+e0P,_QDa4pBsr[2_=QeaW&`(f:hFPUHg;r/4JjA73Q;b)1Fae)PSUJsN[p539p]-W7LH[qQ99Ao$dXFL=$X$u?35r4
%07.!OWan,7OL#uB-E@M&00'%B=I35J]Oh:ej=g:G]u(Up,h=U[@@WG!/m_(T4toEOehN?01*I8VX3/9AQJP?c`qol=C1C_O-.<Bd
%:kEOoVpdDW"L$*4V_"BTemi94:$F'?b^'gTZUoLTWZY/.WrkF>*aMa&aQO!X;f+:D#fpH1St.C)?9G)U!D!K&7uo\IK>J>?2Q8//
%:Y%1QiGrILl-+a!\"V@JPpO`_HGjDdJ@#iD*"uoi"dXK`<M#lAp1j&c`e6j08rJn3#H#d;6CG,(OWe5EY&%Die/gpI>IFbLSq+Hu
%aeSFN_eu[n;9EH,hLNWs;I21bfC83%Q>%4OPYATV&.]>/J5ca"3c_ueG8Ruocq.O%8J+:C(.WmP>[Qt["qa8c,npKpk0:\@Peh5L
%?HdYF-VGWT5La3f)1>eBOp2Js#W5j@#_Y_P/O1S`PrJ28,&:PP1^DcuWT`Jr^)Y=?c)h<6"Z#CpFN>fi"k%@01_tm0Fj%3)&M6j<
%+W3>t_D)@ROW;aYqbZ@$45OnpktVN098Ft6C6R`k1EMi0"bGE,Z'@Xu.%sXGVDU]:hfR"aWjN%(M9P0?DcEr3:$,9FoP/$/f=c[t
%:Ea[KH,g28J$CWTL4n>:^ee=dD]$qE/2D'nADVa-#oV(uoRQKP0<q1'jX%&=/J><+0&Xt#"<]Z*2Rl'1+mf/:/OHiuTgu'TjI1`O
%P:e#7o9A[9jIo4[qQVXrX^YDXRn1P>T"5L'[,GY#B%TY*7P0O@mA6tJn=)k$80E]t3EX!RKIi*UAr@9r8D]_i)halkfG.;:I7)kF
%IWmF_-KL_@-Cp&F(3``%Ee-`G-Pgu,2h2pM_iuR6(OCO_f96\GG$]mbLlC+;U'[Du6B<:Zo.!,7O:9QQ7o/"pW=6f+SJ/brkllVL
%0rm<-.pab4B\3uV!hth!K`O/#P8Ii!pL@`J@"H+()T2Ks2-Cd/7kERnBkhqXjjL3(>aKhaS'$ifP]Hfb,ks'<310\Pp.=>@aiqB(
%g##A=\_J?J2Z;_+#J@04gdCL4BXDkL%fQB]C?F6:UH[bmLY^8Qs*h+,0`nS=8F2K?Nc"nc`.=9)7QKe!Fot+%!_nOPrb,sZ).$d^
%5QJhdKO#W2Ml=GnK"%LC(m$m56Z)0TJHs)Krt3=QUMq-2Kl$N;$<mKjAA])kdeBQ`8+oLM99H?YOgKj/KYrX4<1sIaC5dObngP_0
%LQUs4r)%0a'1*q<$R0reO-.LIHR=%Q:.KcSQV*KX(>5\Z*JNk<@`T>JYJqkmpb*fFN5Fi#%s_\5[R^n]M44?rm!La8'M_/Ia<Ndo
%TQuqG)`7R3A7(JCFsBG^(f+h/Tb.KS.e]_e2EJ!9BH+(=;WPf1Z;brI[`K4=j8o[og6<JFjV0Vdaa?KA[ub#0%^tk6_R::uG(aA!
%45RP'H$$ZsN:Z/3_mY9869:3u@5:OaYq='6daY<B_djV=AD37-6>eY@CF&-C,&E=K4%@B[4LVL>L%Fg9ikAT<#;Q?U"%29'1B3R_
%gHO,EN".e(\>><b,fqPY1g0fNEa+Kec_J89c,A7-qI^3(X2=RDaZ]2f*nuOhrlZ]-@iTNr-TU`j*o4pZa$8>:^*:rV7p7!TUmIJc
%h',,.Rj`5&a*6=b7AeP0j<?lR3s%!kYcWR(Zc!#(7jWn[c.J?sQ7*u889Fl#fH+aSaH>=iXp8d@CBPP]C7jR7F;s8)<R)dRXCrh)
%#cps8[KM?O&li>+k_PH0H"&fKfHgJokWVM&N3kc<Ii/gRn]#&Sh<@tu'qtNqZ34%1Tf1OR;;)037B-0a7/'7<A+Z*M\s'h]*4h@$
%g&F4_I1EhYRNJ<>%.';Tc0`7HECV2?2-?j"Qn$,LK@3^Ng%\=giA*LXn,'S2r3J4a[8(5@^:Y/trF&rNfSYG[(q:2[ShP9*T)_V)
%]]/[3-OjGQS!OcmYf)<X'8EahjbJn\#-qX3B(Ab6?[KXt((>T=E#(*R-Oa[^b*.Ufq"*'.K3J3(_1Z5K^@J(N/cM\m_U+U`poJ\f
%!#P*09cE$NCJP`,i_PFZ%<M&oo;$piW',.!M]__i_(L6-)>BpM014pXX02^\K8S+S]mp&T-aBE`=5Z%h);GFYFmPe]OH#q@Te6>5
%aES99(IP9Zi5&22'ps[ZjSbA'ei5#26<(IXmoIJj^^"8"mYno2JX@*<apG-^nQgYnT_/T+XpDGsq[=Y-K5krUNXKqQ<$"XAX6.qU
%;;qGT)TOVL03FHj6kU>M[$!.COEP$"RC!\tr3sGokW>''%h#2LX*AS,!\[Z+7XQRQ;H"?Iar!P4R&c2*W^)U;GdiLIYT2>*@AGTu
%@Tt_p71"iG>aM/<6R0NHqrVu/E`"$iI8Dt!RbU1N'aUqf<MKPOJj]WWj%.!0iWAji,gY%V&W8=Dj!@/.q:;gi+E@&ep^@ko4!B]K
%;51(L8jR1DVR.>\m\(4/</q9BRu:b#(\PE5&\/1uG>.ok5/jd+\0C8m;1u;uKY:7a*S8`<EG\8+KV0OE_G\=69]QD`)lmlOdS(LI
%8M9X_.rjASAs,uaoQLoVh^7oQ)_r.BLjsu6#8n"!N!;mB)+,c.g0[\HkYWZ/ieU6`(*-roZM`ZVP3+No.d7ahH)-%F;>h*0a2+"e
%&cIQ:6mLX'5@&f8%Whn,*/M_g'@<>*OshKZ`gGQ[lc^oS^-.'u,pN4;<)^\dXe*&-Ju.u&`&<jpM$SE-Q36Y:"q"G5#c_l7MRk/5
%XdJ?DkE@<YYsdMHH<NRlq[A<Ln1oa^L.htNRutH*L?hW4R#n@C+g*I0Zq@!_s$PS,NuN_n_'1$Z^=Pc-7@)FPha."S_lY].c4m*R
%OKk%32P$mAGgi-XbekT#*uW9MQG\i=Ol\ki&ID<>Q_?="*FW(@c&!8OL+k6i?Y'mJUuL<E*[!h,J@tZ@5$!V\[^+bLV^oHbMh8Gk
%j2KoT+GE4dOiJK;Ka<NIOjH4+'+^8JqF&uO9VA5,`C/-Vi0Q?@]OKZ3bV#IkP0q[OGrdZ@SHD_-'3((9?%;;PU-l.n*b30o1l9hM
%ERtGL.?\gOQ_6BF%9;uDWA%U6<@T-P_CHSqeILBN'aS>ldbjJeg<=so'L0[[_"CkKP-YHf?6X#LaHq%+e,;^IM%*mTO!''5@XLi(
%b!JcITatUdIRuH(;)9En.H&B,Uc39^gA7hC^D:TUH,DHbeNpOml!5!i!@:gZKZuh0Y.to(1<moH\emAd1>UBI5\A3`n0I=t-o2*b
%]9Kh&R[GW3/]@LB$q;Md"2e&3nMZ?a>+1>BT8`mF2GK4EluM/%K*%&QXCXh$Vo9BU#s)TE<f%B3&d\\2R<:;@-E,R'Q3-[[O,!i]
%.:O"0[52K"+j$gB!brRKU6$&(8R1,4N5$!9@/jVsT\s5I8I/f0@Znh'TE(,^MB,+#)[^S:JrgW[THH7?#+7#5p!Tjl'6-7]''fVX
%@3g(5R^9_J<?NAY19"69aRiWp2P1!$!Bi8KQU,3j!mSQG2jdd`+<`Dt9EAjK+@@oYCqa+OE^V3-16UVdSUKP(F!._RCC^<*SLga%
%gd'C-X:W)(HC`.8:4Pr=^grQ9_GY1NV5o0!R]jW*CIWu2Yh:_F\@<<u&g\h*O>Sgr8guTPJ?So!"9f3t,fZrOJ`IFE4Bf]f'd*iA
%055946/HeK6hk['XqPD?Bq3cWB-Ame"VG*!AlF[iR`'lGXVUI>ouL8[:<(LGI*!2#7l!Zt,Q[ErmW/ko!_ZXHPg,!cEWB*(q1Hk@
%#"1`cc&.+_\Z@4CpPX,GNiuuj"-a:JLHnM1Tcj)o?hjV:6"l8p1<#-6XSai@;n+'pk$Ah>\78>6EipOH%W<o)>(]/9f"[!DanCgf
%)^D:2^5#K>/oo1W\6[1?8u?!(3"#m0"6L:cZEma\&`F`5BeBeQg<`2%#JWWU@4+;_PmHm`.$-iNoRJ?ID_c?V"M_re>&+Z_Z5b9)
%!Q!p4@Z]Zh*Ki>b]]2NmQ1oHa/dE>YfHjr^L.k)5!onN=U?CF=-q"Q*GDHE*NUc+?qB9P#$>u&*1dfPa&0_DmbSR',0lWW74[q=6
%UNs,$*>P(I)QO6K7abBrdM*CUog1t&BuM/4"F`cE5\D+aNtkLTZ'@J5(mt@'cKPjaJi!so$;96T*K$I1H#>k'Ys"J=bj#&a%lf[k
%c)Zd(2q#M$+fU%QihCL@9Bludi9YJ4,2_s25tF1i+j!HKH2cbuSr,.>p+olC9I`D\k"2DJ?_U-R.-/ifP4[a<GHd'c(Rb@DdQTes
%/kQ:dh%X\G_#$N>$8dHb!QXW2M[]dDr$S?.'*K3$RLYg#$;).J<Lbipi06/L#^=342j^L:ee5-uWD"[;dY+l4P`>mT/$5,\%%6M>
%+?fth$saHE^*>-[?uq.f+Q.;FR,Ams!<tfL^K5`AP<3Gr2aeRa*4nbe`O67Z!NGCZ;NOtfS:priefG0b!?#KOQ#LNko`dsl3PaIj
%qN;UQZu!NfI)n6sI8'DkIL\P/g#2^sY;(qO(%B>3(#bgL0C5g39.VZHoh='0.4(4l:OV5aqLCkB@EGTl!IolG?$KY9bSSj09L47.
%=d<j*&Bbm<okDDF!F;=l/$".(&F^3,p/_u]HA50:$e[6rk)c/'eh:PE`78,f.V$1l,/&FKH]2s'ZrT\G(dN6qmJkjKA29cc-k:3,
%o]^V:Vl>!dq$[l`C=*dm%*82_l+h"i>abg"KQ%hG0JjZ`OW:sP+cr"L>1UbpAB?MEN*e/U)@"^="h]S>S=t$B.i;mLjE@c*YR)mi
%<1_STT"sOZTb>qK,6TdI,>CuJTP&i#3tqD2/#9I_OO"s5'0>F^jA4S3%BW;3>/.[@C_26+L,XnSA/9sN^0g2s%i`s^8)0j15olIj
%cX:Be+BO-Q]OQ?eL#rdb.u<1aI#\bsK2=g]c<-'Y*pfca'M/$F(KljI5.2blEf74SGjjEH(O8iAoZAUhq4'O&Zg@8P0Of:W4CUM]
%e>-H/K*_Bk;9E<Ohh;B6#VF1dX[`b\LLYbboDrD+@P$7:jIJ,6$m!5Fr6?s`9H(6daW-q&qHg;meO<"7/!Jp81Ghu7E`V1E&ifl1
%88TmJZN\kKW@/u;8^U5mlVc63"CtFNa8(q*:^)$$RoAR7.Gq?"4nR>a*ak3F!Ebbf+_"@.^rp.i*lC5/n%;/t^rEBVlk'p-UHsGu
%h@Nm5#(9t`?gpo-P7uA^RZs=IS3/)re<%>kS9Z`(&:%SfIb,\+@&#!V#/jKV68L2C&[$g-`r-+H9bMKN@_V;)d<(cS#1L[&c[2WV
%J=P``V-*^7np1^^1Ci]mdC6A5?nr/G%KZ\g0R\)uN&%\:$3Z2U[d_kR$&,ZE.LV4CMlm9s;j)ek=pIG7(VSIH7EE2R?4UXrAGOIn
%gWPb\]Gr1A"L2ZPXjod[nAl(r9ed&F+G[$O7^f"qW[LgZJU)_SZ:EW]UMna":j1]np7bNI^8j"$AOf.M<Zu6kd0;X/2VFL\5fc\s
%E"a`hfe+uYV:1;fA7%7l!V@=*?P\dt<G"H\c>f$IaJkiV&2HC_PBiq1-+(6lf-<f>HK\gCOlqj?hhuh&Kf5lb:MPT0\t7C]7IA2K
%;,4>LYq>6V:M,SQFA?_7HCR]AOo!Use0[WOafSIe<Kl.5\2la_AW"2L[nSODY:1IX)]uiD5MT0C=V[Ag7ZG"[1gD4-/"Q:pB%Gp@
%KM[pY`CFX4+ZY!5#-T4QQQ3sf8<JOT9Fr;uKcgnV"Q(qqagD>U95E`9P&LP;q:ubt`rklu+k#'HUkEr?EA'f"ceT.8E\ocd+#*cn
%0BqNhKMpN%_0"!^l&0Na3!'CHIOg7j^tTG%ha'ec+!e^o&S4*:-\814p^OZ\8-K4Aq9RO"MrO:+$BuCTEJgo+OV4qdiH1_%)ukI1
%]HDOB8-uM>LjcA@8.!$117m_rR#j?78XeUE4>g0(i;h!uPsU')EbUGPdhi8Nk4D>V-oGEs;Bd$jZsR3e%$8j?9TRSq@WI#,9M[9=
%;1!>W$8FEC=M;4&b!oe!?:[?pr?O"_a8pjWI/?ig>D=6$dsO+%`S_:nQ@KkQKSdRP#DfYi9I$S__k`9%:B:s-J'j/'.UTLc/.21J
%%tq+'`:2<po^T(4N2p1LdUW0CY?GnX4*<k\o%+=F*%N#eIU9fkCQPl)cnC&q#*A\oc?RKb'?1ZD0/2tW%<t@ZnV@_[bEnS/QleFK
%E&^V,?SoVm)'V]@:?#-K+N!4\IR+FhqS36ol4Kcfq/Ig8I<5VD!bUtYQf+oD+WBNaQ=$"%Qko5`@,*6hU;@:&aHXl@0]Hg+nM$>3
%%(#pg'8*$dZ=X#+_&ap*1COZa@!)qW4&FGrbHMg1OYF=!H!&.=`'2Bj!tMEII8,ZR)\+du(E6>Lo<;Km5.KL6,k\A>j"]eS^n=kD
%@D(kK0#[<j+1\+(Zsehdj'g6T52Q7hD3.6.qB`u[!YuW6-7kubRT)m,X"IkE<Ht4ZV?DKF]`;j]%+(Li\J=#3c-dT7U'CUZ_6bVN
%.,q];&XET<%"qA^6c&XG@A*SS"TkBCSp64saeH$t6;5=Y&-^Q2,;rB@mu.igKg$$R+2#Jh52j>tZ`E*4n&Sjk%<.BN_a;)//aur*
%:$*K@JD#7Qot@+lhV-I9AB>E7gcOCP!0!I6^[<6t\&?/#&?D'9ZB@;`n>uf]juIZ>P2A1'\1HrQ96+uZr;Bqa!!eMa8Fa<P!#``d
%bQU1D4U.n\KfPYSZ4H/mVW?Z%"k"aB.D[,>4!NpUf?7=2%[2h^:IpU(K!R5%b_#a_(ICr<Jc\/D`\rqp%E>32Tb6mEWB_g*UP3)P
%EYgacrh^J6rF8c.'$()kbjc/(AED1=oTu]Y)Dd\9-?/'BUsqYPEM&WO,UOF]:`IhIJD$hQVtkpfPbCIOQ9I.FeEWdT^Z(HPCPV)V
%7(sef*PQil8lCEpJ6)CJW?3jH(B#gV01Q`ne9iu)(8Dp]AKpZ#S&;&)96ck:NBZhVbR+f0F<n0/P,f'YRm8(P%h3'X3`78<^13^i
%WsgC$fJ:fA"?P<MGC7:XOd$_[[Vd1UG!]u:)i&Os+P&K>B`KUeM[<sM5fO5a<3.lSD$(>0mk2SWA<>-'+6-WRFe(B>UZWI>q_FDc
%+ZF%6PZOAMigiU>%T>\23/GS^`!lJ"o\FOKO"?h&Md_jF1L.-prB#,+&R\21(k1*f@kCfWIHu[T37KS?EX>YJrb@LH0di^B)_+/%
%/^.'0`$UI14<K2B:;!<_UQ!\)fB#@I8-XVaDHn!M_o.uf]`gs*@ke6ZK->fsYn^lQ-Z4jcgHMe@JuirJdUF;UDmSX5\[Q:PaJ4JQ
%MrsNMR.>Hj!=^5J/&7Kb'pW8p(IK/dLro@IGmYZ7-<3&pMt0\u`0iMM$ns&EYR!+0MX1+oDugU.TQ@a^_cf^k!C-SaZ9q(cjmTk2
%bRMhBna.1=;8DHrZKQI*B.:pf980-bRfS^MK3q=EBFd%6aX#ht5i[4RgP+"@j=:e*HY%e+>4=L=8M[o&3[*sRiUR[icLJ7'rAoN6
%6)YFo`"BS4[iKjk^a,X,ph"!:N.C@6'_::QIUR?r:+Ghi3>VG#l4gIrKSMt':B6"06=Bj&RHs$S]YlIRG^J$hj:m0'r.ZijD.C5a
%`[F0^X[E+(/+Wqt(?$Zg)\$&pioZqCmj?*>e58cl+2lJQo=f*mC[`[.?[d(KHB&4Ai@PJ+Lj*)*N\+t/2[Bd#?QR!o9OC9*AW0uV
%Vk;W>N>mCZWcO&J/_DHc3OBpIQsV`m`1_3r9[@>@9bs5f\I6]f?r?r%2Je<Qc0#'L3POL22J)f6-*j%CDhL0K!OduL!@+S(#CCSE
%;+!I+i=M7@;o^#u$@F7?$aL(tj8q)qA$?t<mMk8FnqB?jZ42OBd%Y3XEu7;+d$\mZFX<mL:SudUU:QQC=&bTDLb/BRdTspU<j'2t
%%bEDp/,\'HLRI5lG,438QBTTK8?n_=3DXN+@FgWH79"V3]83Jm0r%]cL:I7mAI]4PpM?TJPX0WU??[L%'"<g?gBGPc$:[1`R<!(u
%%2IjZX,dFi$`Ik@pidpk\SELcN/[M=n`[Fhfmpo0>dAC3Ij\dgbrLcV]Lfb>iN33Ggg8%*Mps\)0sLdmEH)j2NoO9N`4Z-48%\3J
%GS/g'$WP6d8<X+pR#7eKU^\sqBp7i?T-;Ve]1tO6Q.DAiKu([eb=:4$nd)'0bb:'OB^SK6W07C>GQLI$XUA(Y,FNsJ*]@.676/k[
%a:YBYNE*f6$id'aR?rjon!dMVUu&@Aph>n(ncJpFRl(tL]nW8\s%?5g,6Q7^IMfkD@[H5^*R![H[0*W(,g",@Z1/lFLj,g'?=Vn&
%""Qk`04%nHOB-PW40qI64`m@9$BtAq-P=Wq,mOfKZ3a(3o8skm=Q*WqIudZQqC^):[b:<Ka3aMp@=)N-fm"s,qefdOgPP=o$ekbR
%k9GtLd9d*8-!p0rI#ipKdF"%b<20Qj:3I`Yg!\p_RSk&:*'%XY(k+_a1fhS_Bf':HgB(Z[`kN1"_FX9V=].mjGD56KrX2Ba&l0\d
%'Q=t7XJhY1;@VSh+q:;F<.\r%E+BUS+&:^g+5\!g&kmJXIT_9_i-Y+8JWX:Dj`e?TR)aE`5P>cd3DMOh=m>r$D?O:q(*#Ec9L_cj
%)7iXH*=hV-(k%NibZb7%5=c];RgTP+Z.FJZn*/b(8WqSC0!KuVJ>:?j.3rpDLI/TSI&ffk8-^EJZmPYEMsrn+$&nEB(&6VI!QPh(
%"Q:4/Na*RYTsat.FrQV%VMDTJW!*=,OXDM5Q'=WfW,`^t1=.I*R\V!&&H=%mbL)^i`d:YsS)J8KiAj]h=8IXtq32KZ`(6WY,&O?e
%0Hpi*)23dJ.M?aMEbWrNOqqZJ/WLqP^<9%Z4o.h.,t\Y(IX9[AJd,Gm#h]fbEd[iTZl^N(pZO8UF=0RD^J'hG2Q=uHRqqY-YoL?=
%A$6ug9;M_*$=k2"^)5#)<:k`K?k&?a6\4!r]J]Dn"&#BueR)j4X-*DXkV'bSkl,3TQ</e.d?b?_9A,ON^])qG)$etB/X+Rho&rio
%X+-gi*-@6*4WEkb/3Wn1B+'nR;O)!mFfiYVguJQ/#Frr;=-Z&OIhHt@aiJQm:*j&=jQ_h>$+jlL^e]!DUIJE6UVGlh3sdS9AI+<K
%mZBRUUVGmh8E+Xg<[[EL`;R=jmDGue`cX9'NX9$.__VaS@4"$u=.2*0d`)Df8^[mABZ"&s0S&m=.On;GmTc.$W#Tb@)Vs@Co-55n
%bCmdJc/A3I(:W_]Pu0J)G=)FhaANosb+^^;@;$iTCdog)\=T_DOU_[,6E2`TKuq)!Q@pJA7RhkFYQNo^\stHGU?[1G@=iGhV8teB
%+s9YVX6dW@V"lbA9-2n\n6u;&i],`_Q_k`fpIOmcoTt-XS0V-VOM!Sio;<dNTq"t\859?b(CBPmp.$r[cQn"/_cKSW<@#8qX#sb)
%UB/pp*?k3`+He2ss45j7fmH>@&%04$>6U<LGSESWHl(g)QaS<Qk]64#7>3\S)1Iu8m;W5lheKp6F3/dr\$"e`c"6=OhqGX%mIiLZ
%D:8=KC$acR2r&?MbqJq3<,eh+mbGThm^i!=nmu^Nhn#i"65/7$k:'Zuc9!t(R9T,BKures_mGj0k.<R2-G959X&>/=I`EW!V"`bp
%h+;P#qb(*+hLWH6/Zm.`_>A"OPMUue[3rTpT/i1Yh1kr6hu0#1<kPUtl+M=KHd\DRW'0t4poCoJ2W=UZ^K!;Y%=-HpoSu$d]M3iJ
%*nqkPhigRlM/UQ:]U/#CDTp/jam[G$0$L-#k#)-kpZ=-#=c:@Zk`A6?$h7[b^YTDJm\BkUHj)\6.,]j\!2<i=2PaAFij6`NEQM8W
%C^s-,ejDHa2*d=3jef&@04nC`maQ5l2Y7M7i!-(kbT7o:#0olj6R+MW!&]#M*?`NC>DYoLX0@mP";N7+Xdj=VnEUo4kb(R#r#:,Y
%1k_ME*<m)FH45t^V`5n5JPZO>#O)ZJ_\NXF9e7%+Je6gC2Gq8-GgP)f]ac/VKucVK4?mZP-7Zcc:20iKP_WM/S1j7qJju(P_bc5-
%5!d8AcU/`hl#alTj5S.832Bs8c;0qFX"&hn)IMLO$$IT9Q)DB!B(,np7-NqXNm$S_+>;\"`1)5:!9%O(/D+'5@V,tVc?Z\sq-)ed
%\e3e1NUQEfRNE1OS$Ns=P(\gH+^O`cC5RP6iQc1eLEmdaT5ipMaEVo0JO&H(G?Y@S,Y5'l@C]6'>9l4oP]2>2$O@>5&U"XN8L4aB
%.hYp=QDcc.ro^!BnK5%W22plpAqpWe]7K_t8>$6[q:.XbA&rg@q&[@.*f_1o=/,iXl??4`']^blhBED#7WBQ,ObELfO?IXaHG#eL
%M\OHGi!>]=-(_l^_G`3ank):9j7K54P`2[kP49ksfHDe,p`YYOU_cQ,Og0E8`a:3q0>-gVXIE][5,!-hm>:KlGbR_rHh`7T3n?)#
%C2'\2\Xj#Y9s1J/8Ns,V^::.sh%2/9ItgqkYm6"\&FZ\M)b/[reg^k-3-kcWjNU1*nHlh35GFuJToSk;aLnoPCQ[L0OduG/ma`c$
%,&L$fAGQj^NLigdMmp+HPp'MYTG<7SkPccR_N,'lT)t%Gddjh(Fu/&MGu2-]JeZmXeM,i6dH']jDUA]%_N5lJ76Z>G8`Z519RW69
%)0N3t&r&$,Y2V=W5)t2l`<bDX+?W7,?L`gY;b3'POk@]$5\!D-lQWJ\[$.>2Fja$MceA]\bWE@aFM'=G"EC#<57-3"$lmOHUsi=`
%<\OT=QY7&NnGYJd<4kF0$?cW`3bRbe7&r9V-MN0f'u)"f*#MMXCk4&F;q:\uUrQAtm*/uqNs-3MI^i#^Gpf,JOSXTCiS>mD#O7BA
%h"+GHf\SqQU,ZFU=qGt4"h!$%:*](gdE25=QH9/-8gYE]^nD+6a:uUm#B+6%%5OM+mm%D*hCfh/12X3ZPMo)?fMkRAr:?>ViK.Vj
%8Q.J^3J50H86C:omhf2:>-^I^dSRHA;IHK`71-*:KQ=*NhA3XZ+:l,B8C"je8qm7S%Shdu4jm4KmujS)''F<<+\#/ad8`[0PMRRk
%?K3JY',BATPIO=[,%$F#>-JoU4Q/^XTepccd(QU^'!a0Ym3<tEJKnomq4q&pcj'YaP<4fg+WKZtGV2fNIFF?qXC1f1*)SWI\>3Pt
%J2=*P:k6r=a;u320Q-`D^u@Jo'p,l:b&As[D0!O96rnD,5QI!+XT[>VOXp,5@a\:C+NAZH-rIVnFpeZE5S'I5&qotLg_N<FafRj"
%YDMX4F?R0'kbgS+9c-B09kY99p1<SWk)7DbL>9Rt[c%@-^BS4TOgriRC!p&-^WGDs'V5:prm9K[(n;+q0FH!Yd"iod/g`4dME&;`
%,@Ar5Fp-H;P_MP+5S6f/+Hjg`OR&&M?BIEei*b3BMb0kof(Z<YUqp.ZPo@IY%If)eNsO$<L_Cl5D@mPW4I!Lmd$HTe&29VGU+;7Y
%EHo_UhAt,jGu)<);Fs&>a70calNj"qq'2.9+q(;YJeh&dB0H3T%3slf\d3>!0hmh$O*jfF;Bl]NN#6(8PSoAN0E3epR)&JtaWbrC
%BOX8k0/%-Hh$EJ:CDpFTLi'tK2U?mQe1ZFngjE_D;]If[ljE@<"TE3effNg4L/(0iqoj^P$/[hglq,[I-2)XqB'U@r-KFkMZcg$=
%@USL<[HeJ_r![asrc66PPBrS&l^8\,hNc4O5td_V?"Jg5aYXeH;RN@S'H!;b4ekhgn2#pp+cW#JK@WmVl=IdRNU9ABp+/E40+)rd
%';"`7eHAGn,uHn0Q"s)`:4`?g1eBcG+t\`mg1+_O&>p+i$AZ]i+-bXA4D\@_OWVcncj]@<CM`';+`3FO%7q3E'9T+nGZOtJ0O\?U
%Z3&*n3.&uDG[R%S1K1895lbYnrf03:Y/+W$41Pja"tl[iRDCMLa*@ZOdH!%,9s2ZXm9EPY(GB]J&j%cD.Mok=75uR!RmYC*,Dj_/
%+;fRYPJhN&5eu;=Sgat+$:BIb)gE>[%)ufR!DJ=q^)96a;gBg@WC[=7ecgg@H*5cpq'[F+&eg'6+f$@B%"Xk-ItcO7#BaU19O^iC
%5;6TDa[.""I:Nq)_Th%ZoR\MEYq8rE9Ng<2-Zb(LF=!ooO-UuS)!,&*'W1@TWt"md2iY=H4<;41"D^U+!'il.irS.9L.#JW1oaqJ
%EL=5s(Z1&HQij$ZrIG?,8c^@ASqBu><ZD^aG9INVL%jK'"e:<d)<*bcd3A2s.mrFo\QFQA*p,-;K;8Wj[0I[k*?o[WDa`Up3N76p
%&bfnI(mG2UG2U(/M@i@''1BgClN4$\fm<ciCtYLa./>_'KMjgbE3q#9:@!/'oK2\`gYl6>%#B$#BI`)5bUc^)_8ENl#k*TlD^#TL
%1i'A5BNC5NWUO:Cc!!/MNGq7<?)A/S.\bsf#HE;A,OkmmHotM)*);Eb;N@FsMSkuSY)&nO&KEN/5(7jG!88R;2fsQ-A%%3#!ail4
%'lcC";DMr[=TA#3+Sf;F]EX1'"Lm=a$]j5gq!C7_c1k^]c*%-j2AP:Ci\L/X!GLO0Y6jd.Q:Ip?E8'h#TgA#dMarr+KQ%Q-7!L86
%KT?9=KHK,[bTMp%"Ebrj*XG.r'r"2sH6;:,o1pM:3Jg`67(dVWB0pLI[50O%U$@:NKj.mtns$==&Q`DV'Cln,3)%=pI)F3!R!RW[
%INb9r28"[,hfD7FG?u8)TLe(oF9*0@K:0h:[2U2E9cOm4k`,<k/AIE`r0s"d.abK<9c25okb,j+8ZUo4A:"p?0s117n-EriXGe/_
%0`Q2tpcD_d]HUUQFgl`,>UL^Jlc1:!mMDnph2G+W2]c*L=s8gi6p^afopFJWA%j.LW6kWNZUXnIl[dg#QeZmZm#E'g@h[o>Y/f=B
%)Dc/J@]8C-*SYDFE'7g/l$+Wk;Tj4`f5;][q(H"Ql\p8@EUtQrY!>13QM1`8iHi^EM)!mV8URG;H(DHBrto"%*L<F9LeG;$kl>?/
%"5Sp]Qo\PO-TI6N*B41CX>$jIkqHn\$6l=2[8@JNh$o/a9DUVG3^U.=_#gVf9k[M)$mC5,nUlq*aINi/D/l:Y!tbusc\TsrMdr3(
%rZYUm'TpMTQ/c:W+i-Dd,6U\3_IZ#rCPRQcP#,`2+YAQt%&>%V;lP;O*>G@9;`HY=g',bjcAjjd)`X)(]#5CHPPMW^ofobX2;uQ\
%QVs#`/YhH]S'/P2"P_+IX?G5@1N520(@rAu>T<;G%M9#0,pH]3E(3A_9IM)N58:9')#>BrOfU21n\49!b6%[hq`jW&1]$d(@"6P5
%8hWf/4pRptJ()H_Jo`e@W$fuW@s&DN#aH&@:+$[=_F/fQ=-A2$<K>ZG1/_d\C_="b`.CH$ie5opAFU;6c1*iFr^H+*dj;/4o1e>"
%dfCV`;`RU>8<@>GmIN>K\):38R*?q_1,tA=L<T`-%J+/TjH=$75gKb#"!V_\4j2md$>WA.`OT*HA=piOEIL25_r=Vu(LC+6_55.Q
%5-'V[>T,`k/]&K[9B81mUYga<,n[.$/^e9D#r.'mZKs.XiPnLEB5Z-mAJ7A<,g7i[Em0<+)<M,V)*YBc=W7@W8532j$L/0X1rJ!s
%"X[qVE9l!q1NCXiP4M[_[l_LYg_PoO';jnXM7?nH[1mj4g>mJs0H5kQcd>.R#j7A!N[DAlA/("bbL&S51\'$Xo.u1nia,VWmmC?"
%reXJa,9`]VKWKj^j:a9^Stqa8SPXGaL8(-#ZBVOR&Q<,N'=&>o4d_>9nG!@OI:2r-7SIQO.6B^M!j*tZS(s\L^`%WsLIRqdMkh?W
%Tb1tmOX2u+BI">,a-qepNFW.r;snJE]s:!MKj5lk:BbXThso&A_:>_FUE=qsPfgLCLION+cmVm$^CH6Ppn:Qb7=Q<rrU<1LeF**S
%B_91QND`.2f:gS&5;YtagL#_*5Q&kVFTm47)ZB.mUXXMaF_EUZBJeAdAIjd)<AJfXnUh@3L,+r'*#crX]?YoNU!_6Oetin:Y`T\1
%QlU\HToi.T(T2;/7X>3GZ\M"qQ[#SfUNBQ[ZPg!W=K0hGO#Ph,.WuVKVb=c_b5R_casPqsp(D4o?"d3-C`hB_]_G5Yl:nc)m1D1s
%DY2iGE(Lll4MhE*7HSQ!phDu*b"-%G[5<WbptJara_-2RM59Q,5ZAhCn1AS&TAk5ej#3DZiR4<>/63SlS2t17&&?@,O/Xp#i4(DV
%WN5-qQ&tN=<.r2H%.ics&b-G*e)+#q6O%4o<W\qAc3C7eo*b@ALsD.LLXt3'>D6]W`JdCZ6\.j_^qJLtV@B^'BugPdmE#U:aQsuj
%G"Y#tG%_4"_dRb:%?19&WJRTEK,_0=N;u#RSS1@LA<4_Mcj!6l+Clp=9d4d>ZHK?HK-,ZO4u-Zm7gW#O%R#=XWM+UTR`L:2F,6X8
%J4SIf#DCF8CVF.!KOM\6=Q(o436Qf8R.f^[rY@m'!CeX1]s67"L(GD[_Dc$'_/eb0M7\ZZ(Z=_8dSW+VTG2r6OV[K.3SCM(Bu^)S
%Kh^tdd>H=n'QR0'\d2/*KcW5aM)?-e=$_Bij*4(cnS+@AqhWJt9hNMq!usUW`KJg$4J&-Q$Lu=)&tf_/]_W8O"UH;4#6uY&`6gH%
%+lj>jSrhsr4!_-5Fn'GQk>jmk&?eGXk?p]l6QZCRE&H5(&OU.t89^f6&G?L;7m"X&+GDhRLmISu:_5`G+^]i=iZaMR7c"d5?f=t@
%&[Mr@$31B"jt3<,?VC3M2fM=)mkb#0Q6LCKAJ0ce_YXb[R8KJQ!k2VbViXE[Kuc1^ogFL)daELWb;EM`5Q^e4eKM&,25sDcFH%Oo
%#'ha+D8a17%:l+/&jS&2$c6lbJi4q*U<s<SQ6saoIQ9/h5p@^Gl2`=drUiu?Neg[i%pU_n0+_"H/A0h)EX$g2Gu`:^>QUWS`-lTZ
%9?#6S!9fO@?Lf'YirXj`&]_jAWCVb_c;[%Q&Ml88>[Yak_U:_5$R6>i!M3CI^*S^#'EF9@.k=0)+@;;^,Z2dL^S@qU1_PqI-#%Ns
%&(DcHL^8sV_@MbZ68RV\MgY#L_.!LupB8/LjkQ6G=&^_en4&OPJDcbA;JD=[=PD]H,q6.=PYXi2jrH\!@*rNKLS.#,1nOpPCl=C7
%&^Q_om4'.mmX?%f:[EiZ_jF4/_IPuo$=l/#pUj/15@UFN=2]qk!@4_e1=5MM!(#TVi*Z=#Ul\C'6celi!n9JC"<Qbdd)s/l_'H;D
%&E1LA23`Q8SP+]lbN!DX+9E/>9V?!O2aqD&^$-i\pmN*g@bf-tpL,cLOQBGf!K=X5K4Hs]JNBNrO=pWeeqaetp>?!UK!1*1V-H\@
%-:kruqN1]Aa[/6D+YbQX[*GNVW_/MLOG#hs;#5lRb.s!V>&o'/#(XcC&RXrV=CNAaKJ`Qg*RZM\8;[H:([r@7>;heTm5Z$XLM%6<
%!bIIr+L4*AZ*,sB_5.4Nn]\o/GdW!TgbV>r87Wa(&abCIh;IG4a>;`DEmK8(/Zi.S1`2on=.'HA&kA/c&;H(D%p>.qS1H749UmE.
%8s[V-!Qk(4,83A@^m4^m\PUSCa^n8m&g#?X3aq3DAnR257%AkU.]n2*rm%k7HK=&;R+HgY>?\?3o!l[qL%7jBc9rg'c6:;%3j8UL
%fT@s8UOZ!=Yh;G\)VOJ;b^2>J(WH'nEKZN#Oo\gop@r@cqS0K!I5YAl4Ko^p8d\fZR=CXALI9aqbipd_+rA$#;Y*1OmOE8(*B?]O
%$s?/V=92\HUp_IGO=VY?PhblF7+WYZ(WO[`)B1Mci`_lB=N1:i=c8Dca;LlcH">qM_L/pV2FPi:Km<_eKW*:]+srM<8@QAG+ce2F
%3UZ7<4=3FK*$Q1&aOs%TK0_?l\&-Q_)B@dDs%1H#JKR39WW-kCSNFqb>cnHAs!c_ZnDHl]%8_,_I=j>h]qN+A&"[J/^cRF;llUI:
%EM=HVYJV^?6Q#3"(@38jn3f>E?5QDDQ[l*"m3_V9Qs`/;DfI$(T3Nj^58_$D@/W(h!L:N\YoTKVO9CBTGpKh^OTQ()JS4r^M/_LW
%jspX`AVkr#&#KEh(Bbgg\'o;P3d*t(<K>+9Cn-BA+0*6sV84;`Y&E:h5X*(pLh;O+Gk$OS\TfV?pr5+sgq;`rck`Dk&&J)I*m9ZQ
%j,le`h.0T3?C<1:Up$^RO#/?`[s)d.CHZ8r)'9&j0-`"s]RC1b2a,A6k6QmA,Jc8R9bF'!JjWH^A43`@pht$UYD*[edNTqI8/u0o
%E6&FQqH_X/<i\73^(juVP^J?r9q9OmjA*Xk+j<i/$63t?at,e^^BpL_o\2t9fn>$+,6.>qIb"mOi2kb*A55AJm`pnWETu:"l^peo
%Wd1%_&7&jN@>f@6,B[Cj.C,pD,rqc$%?3gacQXqo'd!BQ&Y9^8@BZf(NTs/#D$RV&&>:7H)fp^/=Q%l&&1RFkWk.-5KKrWg6a?ne
%1Qe=`^btYQPCcbT5_d)cHS=Gr>`[ZA)!M1dELho?$sk*lO=g:.XOhtuaCU0(-,Pis_KCO)'bc`VJuli,^4O9"*MghpkQ8&O`j&i[
%_)m5@>+f7dGTmkA+%/esAGn.Z,\ko&(/1N;IFSX'/Z<Acfm;k9eZF%s0!9/Of!"m.1$o0#nt,D>%X=3LYCI"$R%aKSD$l!WCLp/Y
%0eLP26eZ.*'7#DPRt@X[>!+G$C\!)\G[<MJ_pk!n9j'o]k^Q1_&-1*#8/Y*"`c8CTY_eJTeXVN<&gr8c35?.di[8B6N9'^AMO`ZW
%eq=?^oF..f"@_5^*rh7I+@q=cn526&Jls`%1rZA4Y%BeC-kX=-&Jc*MMGlCmnH;S;N^7oJjV/13O#bXOB0\jhjT!>NeYW%l%'UIs
%e:s$S#k6%cSm>j),u+Kj8'4\+Ku5Ud05a/Gj#M1d$,?^2+HJD%0Ra7i`0`d>'V$56#)K2(7Dqtd+;[:r2_d>V-F+[\]g`ENa:jZb
%-&GF`@.;effG>[uec=_M]g:H]/-8'pFR]GO85!BAE>CL'Z<JJ[5S=!Sk+-UE!mFO4X3!,G[0/KXSZs4Q$@YS%+W+%p&>WDnp&^""
%X'ATgjM;L^W%>b\CPJPMUGUoooJsja2];MRAqE95IK;Pq#"8PWGL)sCIc27u4@>cOI5dHs40YYNS<W*1fd%.sK_<`c847M!-+mHp
%N_\A72TZ7ino-\8FU;su;]^MZp4`hJFRTh\OMm.],3)`n&;rn:R":r!`!AU@DsSUi[WWW/$4u&]^dp"O@sqY(AWRYJgh6B.,]=F[
%#0JVnV]k4e_-2G1?2P0@K)Y99[=r*D3@L(l`"5'S;n:nXm/[J[d7@u.r<'i?'bl>ZD9$WQ8-0<`Msuf>EeUh%bok:H:.-[.S5#EF
%Q=3>i)GeS@o75aC%hZG_P57(Vi)L=4Gris"D"BIqE2:Kc,djJQ5D$m7@$/Gor5A'+E_V8'8Ig9elo:EE6D/0D)<A#U^`\qdb5(fe
%XpTOZ6nqr3K<tWQp%>GLfmqV9Lu61A^rA\2=:F%AP-jKkh>bgX]C\XWjER9j!pVlB-%O^h+<^-nE@)WO8miGCoPE,.1!%>*3\b^.
%lHd6COeQTfVQ/Teio]2@;2O_@nt;uGK0l:08`@RHE\I21PTc<2-B6*AlP(qJ(=MZHJ#2M?iVGlV>EhMrM^Hge1%H_rA0f^P*,_2@
%Tdmcie<caU(#1B_7J$WB:7qg$bDZ`VZg&ZuY'5Oe2_95GRS42DBEom3bYSJtNj5kQ=IJP_1t%a^5/)^>Ua6Sk+m9]k-r>K!\?;qI
%A2X'QBJ"(uBPbIpaC8qYNo$NFdt(N_GU=5aFi;]F]X[U1>R4d*m95?I*lP(<XW/@-a.9TLVJL4#H(GbakOM+3QbJ_=ULP'!MVm0X
%'0JaJh@c/.[*Gb,SK`g)$(`B+T`)3U>rFC`f#lW+3i!*;)S][0:3r>a8Z)iG.#u4K1R5e,S%^#Jc?7]f*W9EA&r1T$MRuU6djd\T
%rI^[7>1@k,$P:6t\L\EeiS0GuV$%ck6b^5c.pf1h?BTFr?OA2f5=cRu1R&ofBZaFV[YJu&NjR<A[7>II,)!T$AV%uG8O6Qd(36X1
%EJ4>UEi6NP<52eMk_(SP72V:J\c\\)oBK.,]HMV?S\J,3EBTQA2l]Jam%-S@g$M.'-&:>MhB(>F"9%H(-OM4@r`mpI`$*9ofYUA3
%arM`*)/_::aHcgaj;6'HFm!G4Akfl^H2&.*GLTokRKu7@h0$%@qi+tVPAE=G[Nr7ta$M;e]&K9gm>4VXg3b-*4cHpoaI8*h_-EXm
%:eWo?gQj6sd>2:1B'?ss7c3F.J*?mcC`p-d!*WkODVBQ6[q2U@66h69G'&B9[.=cf/adBFDo1HSHFi$fs"IpAFU_,s(IS6B69R#X
%;'NO8$CZbr#jBX).=qk`a(44f$d=/G]EMmV32B3W1&3]f!LlJ`U%m8AB[r@,BVBh`_&<p=9^mRI2GaP9$IA7\d+jNUFO`7c]=$I<
%VL0+3R*feW?THKjY5s0$1Aof.',W^D"hDC^l7:Ae*HVWQ^rKf2HNQV6o%P<Wf%P!H.%)nJej7<?+<*`B>=49>Z*S,JKER,!&\X$t
%$1gNf9-ns0Mga2;a4b1$'@Zen;4&f9XR:SRBV@EoJg$3GCQl+-m.nWs;cO"KQoWR5Q(H&S.Cp@j0nC#R3n*Br-&N`tVl^?=Sj(,Y
%/`9"6V2g:J%$nr^l:AlZfMYN'*2CXUnG3Hu"OIASF=K?/K*mNs<nD.f<Td"[]>5)7SlNHbPBd=6O[L9JDC-;hD^Yg9eW$I![."n@
%P]V,/C>e^G6,(0@6^qSmoB!Hji18uAK8(ulinTlA35lq<ZP.\O*]Q!&e0HSjH^k^Zo,*93o]sN!'#W.^45i/V<u9"$4XlIqDC2m/
%],3/][@p+foB=ddZU;o4.dCCX>j]pJbB?=TKA14MKiG,?]Z;1Fe8UgAJ^Bcmr\D`7ScLof.hM'iN<Fr8FOgt/jm-k)PG(6<<N(i"
%G0L^g*A2rg*`G*qh(/S-NS8-j>/@<`X#jV<'DmU'mTN\`N]c)EKFB>e.9tH3OV=]VoqDFi"FQJR;%ejDNE&4;>+LHj+rA7gii+s%
%a&b.2X_;3,f"jkVoYFIgFkgUh'm\sD81V$L>fAYZs(5@2;rTJ=p.Z:3l>RR;O;3j0qt),WriD5/mk*11m@1A2T,V)e%f/#pAt-gL
%FECFtj6+hJ^s<V:I6j+,bQ_=$+t\t1(`pt\9gbB-UKZ_RAs:=abQ,BmQNV0^)pNeW&pVko1uZa:(5p#GWM,j&X%e8\\h)F'=S]8)
%mg^oUH`^QbL9&#k0qNT'$F910rY?c1URTj.+2dHSL)?u-ZL,AYrCU/_-h=j5-8oNQkU2JdYf]<G`#<<O)r&(E0h5FoHGRcaVrR4?
%ofHlM[tYa'7c6/1(RY#4<&X_QOU05?8d[;c;i&G/K)LZOj1E]pT]YMtd4a,QXk.2T`)Q[0ac$)JR!(Uq1igAFKNY5o&Iq->KZQDZ
%Ys:\e6@#IWNE=e]*b9AmcYj_k=0eR0i(ncP,sSXs:DHeWbG.C;<00(IG:gec*&6R@rW51e.6FV:<78\4r@Fam*b]Y.cI;'mfkBe^
%5CXkgo'Hh!QZSieO#s+u*-DGUG,*")&OUkRmUVY)Nm?cNFt.2HV(<nD;kR6J'Bl`7GP9O`#]^m[c[1At]uocl%5HYk*sMtDI)qW0
%G[#0*5EFVQFSUk@g,\QZZ5PAJ6mjJ'7flX"[Rur>&7?;4[/*)2,b1?epY(dg7s-'4_bKpT.$J;Kqp]:As5f!kM[TBMh2@p"Vd]=`
%PY!jR+5otI;Ujs_R('42]^;NdhPj2c=!)3o@ObD5;+`sT(I9BW^SKooarQ8!Q;C^]A5_h'#C=&FQp<B\*85bM8qL[4,aY$bD5?55
%]2($$E*g>"@gq$naB"XHC_=CDDKbo;U2jIrZ,Zu>4";5k&V=,K4sf1N&Ip'+Y]_`<Mh(DoS[-g7REEldCceWn:;S#IXdjWCeA#*+
%?W5c]SN#4scSXPnd?;2i!3#A!dl:!PCnMX?Jj%o'P8^_IMF]l2G+lE9NLVA1mWe.)]MEUPVfG#0idMZP:DNX"03`<I#FRe6.X@=,
%3OKgdWCGc['!a1FQEpe+j"maRcqRCP"b,([NcrNN*O/eBEEp^XhC1*BB/3po0'/k<I;1[;F2-7[gP!P2&e=9MB,3;#M@NYH"IA\#
%TXS2>V+eBYG,IR3-Uha-W>T^iDLYIiHoeYRc[XV_OsS!':M7cik;T<[,MhMi,j7RFE85dA[g)e8%r`_c5)F7U>'ID8QioW\m@nR@
%JN33'Ah%ocQ?l=KjXWp#H99qaObX3tT!rSLF)sS=\1A3ojlA5YO/$$m0!nU=5Fli540-6Rgo\a/$NF=J%tVID&PbCC$dX=UEdNWR
%qXeD[eMhO5`0cMOUmLM]bP(`aH/FaPL0`nXZh\T'q+THWbMA;A>QfH@%W])^hESh&:)GJ=jb&R@?fQ;n73;7g>E[pPONYm$W<_nd
%QMeM\"@m_hpC%3qpX':B-[n0<8+E.@-K3mr&2RN=1)P25ju[:?I%E]ST.RTCpYEcPBV=61MCD,+cPK+"59TG`DdOkMhh9cJOP'Ik
%K#B%#.5c-W3h:;MSkH$3_6YSU,7%g4WUa8em73"u,NO8*[8I6*-Wc<QlFHOZ*B]m#WM?@i/CfA9Rq/KgQd]Z7A+\f<Q9&t?eP_J.
%As4f(M-rC#;FaM1>Ws;7i?7A_l-j@5A+X<kjd4l%;_L-:QqP0S\6prfP*(q7R!9Pt;_W(P9G6LbUj5Y2@c@EY9ZFFrO/[4pL/'(+
%imsMja^jIC;PnGJ+t]"+QFXq-S0p+lRHB<n8^7Hq9r;PYF=KTJS#J?Y,Y]N0UhQ"!1RY1uKf#3tajA.?9g3\P?1ZoPTm`c*gEoFr
%4aoi47!.AIW:<d=6&euu+X`ESaf0kkI2jP7]!JHsBO_.L2^Qn-78jU\E@Dc^(apVcWY(8'ZHdb;@l_@@@1uWb-qAX!BX/nN4ZQ`j
%)Z/35;4Ye)A-o1i<3j"^:XcDpMib.Q=T3aup!To'Elf;f1l@&F+=1D)`$4-j0!p>*jeuk#jg:]_nfafrQbjus^ne2."0cm)'=g_p
%,_Q:PX^,A*C`0XE-mn4K<pfZeTmF9Z5n2DQ9fB;Uc\7Ss*%6s?QV,AJ4B9mokglKHcJGOre,n5.=1n6IJjcrT`o09hMHpo7^6']X
%q:XK1Fb2#n1-+Ki4a.6r9ZA!C*Cm49Q.D7dg9n_oP#PaBI?\qtV4s.UZP][nBg^:0==f;W8J*Zi,2cTqW@2XBGq2M0Fa[hYpXkoV
%.B9[C4V`_jkM\uANE\FBrRLgW'gnB]#([cuXSf?O6bnYU5V!eY$=Y;W[aB%BR9[r'=1UskTg%6blY%A>?$NYb)6Gbi<<0&,]@,BS
%FS]ZmZsu`KUP6uJR7`^lFaht`;Qq@KTFO.M/"8l:Ua#,JQ&NhqWS!s=JEh*RHSl%O?iA0!k4hu?iPOU#OCYkDSV>lcf;[s"c?e'1
%RsjNFnm<07*GHtq][OMe9-sM#14?bO$GmOAW!aVN#\r%bG[S"*qFo#.i-&`[n)C8#1]+;n(\%Ou^2<UpqTa>$Sp5AB`MO6t,J.PO
%EXH<tLgg]73TlGQ?+(G/[A-[l'Is)!B"tbM,&4N926WDge4')L,RT\#W6#QZ#5P#0"!ZFnE<P7=i:hY/OmH0h"Z'`a'n#m5b^O>_
%A)5jb]#e!mWS"p^luGS&UBi3OLggB)j_P.KhRj)!GkT*/!P/?`Z_3!f-m\f':O(]@+8-!_@a@?36D(8DVX^RESjoBj*Bf0D^\md@
%'KUE:8K=b!?kS;+bV=rCFn@L/eMT4B7s4;X+s"gI$BmYkU>ZW@]jZ%^GbSqC",JfZ7\-NsGE&MkDPF6@jGQ!6Q>kYGM+c[3@.&4b
%RZC719cgd<TEhSKU\a`XM,km[@N'\0pF'/\JeRB$=fluT*Yf7'!=6YXB\s\2?4.&D8rc/ZXq/QgVI$>Vhl7gP86OPY'q&=I$8j6^
%`B)!CqN8(0PA':D\K4d!\i#GpEkJ!\@7knoo5@+$_UrMo>eW$CdP(<jaq/i(Y9e\8bCsZ%5,DF27X;TWb#2D<gW'e5I2T@*Q9,u'
%-;u!gQdToBDPZ=#g.THk@;B7ro7H;Ep$mU.DAb?cqG3=fg9!3i86NH&<m"fb?H7b](Zm*W.\gb!$tXc.XanGcg)'%$Tph;c+7EMO
%WUMQfEIHXU>Dqk+2JUI.SITi9D7qdUEmS^ce1Pq0BG5_Dphj)bKJRImiPjik?CJ6`H$NP27m3?%5B)%P]%hAAeFk>9?InFEg0U&e
%Ei[%hUCT9o]j/([hKlBe'DA'pW:dR&p%)<nHctN1f%4<\2FrMO8U'@\JYo#s,I=`_hKMK`J4gRlP%>6d_HgE!)!k@W[%*GYj*(C[
%hC2"VQIg%5^:\9bi.R)dX5a(GArH>N1gqMHA:9\A:$,'2PtRg/?-BLfi>Uj&Eq@5"gP$5h-YC-@pc?Qn_%@rSieb2d#dtOJ<Hot)
%f9%pUW4!gsCg#`\.tYHml2FGjI]MkTnR.7E5d9i9HTHsj$_tX`MPV:>M/`OY&Ghjo0&#GWYg^nbE+"!o>OB>*f-."JneA+2,N1(V
%aj=1$3T;D5Z/lfcLFrhKR),,:nJoEQoCEiYC$4YX.$FfkLGNf.'[efh22*n0\$5Kq<6kd1%E`@+TZ!_'=uh&tg*Kr04Tm!/Do#q3
%oR);B'^pkn.gs(*:BP6q@Q3.1nYM_np,n3q]/#CIL%CEul[h\s$Ucj,$`D>k<pM&DMONq*8(uVLB!RH,*tB-C>oT$VMV>::^jZ]f
%k,BGG1(jkD]:(H[PDrN<<R#E>3pAr2/=JdK:]Ss[YE,\1][HqL?9;u%q;6.D0FSkT(d\Ti<b/Wi-j@@O+c(bl9KhPIS4dM0<'8a7
%%RQqr`sW#?r.n61gkJP7:',%:eRbU<MV@U14u=b2Bm*@^;jEB<U_>NcS"dAW'qN'P9N5I+a<Og'S&;'[NeN1]M]Ro_!qEm&c]*YO
%bR$#)!()V+$7`aA0O!\m8T7k)=2'u`QGS_C%n(q9>*@0W71\a=o6#E&`phL&_3P9E"SJjU_]Yhq&SnbF(hpWO8[i>*9KN`Hoam"C
%T$B"T3>Id?FgA/G["tQOMUpnU9,EU-XtDj[du'\BhB&M-`t0_ZY(pm''c^O4-Zf/\IJ>X7Yk9g);m8#Rj[5,J&oDW(N4dQ0Jm$oJ
%"75^X+,EQbg'u0IP4,'O"!CRC!)EbSg$Nh92<I*\BoTD+aFZWi\3pBXakIi^>(<G&nMdC&4kZ><V2W,:H[gNomST9`<FKF'72ui>
%.9\r[E^`AZ\UA;sNj?;'J"j2.@eW(!-<uc_1bq9a#]CgV<bk;cKiGNh*_3O:P@qH5KT/8S:!^PlG'LG^TjRm]^scSs09tkYMC4CZ
%#bZGj2o0:BI]G?F`_!`%Rj6Y6bIori6`)&cgX/hLP^RmjiO.SY@:ZD?rqu0u$=8YGe!l;Zid"n>i:`!#NcV:ET:O&?3.R'Br$[*&
%@8d`cp@fF9M7/k+Od=]`"!e=S9L)2#q\5DS7I`@-KX$_kP3JKhPih2"!L8D/VI8NGVUN<XS$n@+So`NUB=5)[,<O"0<-qD:qSaP/
%g<:bEFBRQ"c"-sFZ^nOi\5F(iI9B`$6.PWsgpWf4EjsKa34LY"j0@9.JZK,?(h.2g6>)EcmGVH4\&$C,2oN*;0ctWL_5q4<mpb*3
%`rdMT0:"-Ynf$@&kqCkYK)lupf,iM1qm,;\+Eh\^o"%`d<Yd?l/e*0eB\V"A>d$Yp1eg@Q1la-Z$sbQqB;''l9GhAiZOVoseQ6em
%E*2J$L=ta#>RVkD4qjkZf]nf3=kAXP?RuSgQW9"Seg&\S4E!o^Y4LPQ0i>?s.a9F#$h`%%<&S8]5$5O\6le=$&(YD,8(47T6EH/L
%<jQ.T6b"Bb$qa\M_m?]T0u&\3l/Ph;C(fobUZ3&0Sa=#m!&3$\)BZD>^+u+g("[fl&CK7XpWI:!#_[/s(RZC/*L@#NY??pl73g0[
%r,S5o-iuTXEIoM%O77ns3jK58f%P-lg/^W1D\')'l\bB,I9CJWa3P=GeKZqF@u3]^?Z!@AlKspb*IR((Z)1e)%*%!1dYbM)lcl,Y
%D?Psc%qM7LTI%H-#YN[_^^#?c_&5IM&EK8dFn5ipW(DsE5fjhlbBkQ&^;fNKRVScL[V#__GSHaiCGG4]M+'B"i/`KKEXan"Mi(cH
%Zfa<0&I-=NF+UA`H++jL#_]jfCl4r/GB<aaF0/JZV$"9B2tPq%],Y`ZlhPp-,,G)aS!UqjP`%UY0drqAF(k[F5H72;"<7[]bXLk]
%+5c=QnMRS#o@_aC5pH]:iL,J4a>K4l*Vmm66(T:PM5W?.^R,KA)?nWfk\I:*'bh1r%[W`0,4=q+;\&XDWZ9]VPIQciRREHbn2>tP
%m4`5]>r$L7?aBU-&>fo,_O-'nVGO-EBaSM,eBB%07a>Jf+/7FJ<jm'qS3ZtVgbkmibiOdV+!PR?Tp/6hQ;E/\S4Y2;'h,Q?ELR7X
%`3-pY6DX=Q?Im:"^k'W4:hmK2Mak"dN_>U\W>93:\0ug&9nf_Ta3cOS>]kq-h6<'-(qggL,Y<?n-^hdJ>B<6+UcM1nH/3J+7B'Eq
%K]-]b_9u"-@B4/%40jr2]aDddZL9%'cF'k#U5^Z`V;u]$1j$Z_6#Se3)DjjW,k/JW$X[Bi1)FCqHBf]Y'ghT8=qI.[KF]Ei<Q>\2
%XDr8#$[9:AHEp/9=K%5>Zs;-L*1_5o-V^[X,,M9A@+E,EqahH>X/3Ah0RQ7%fK;E8c!ki`dl5g9FX7;?[8.932,Gr)1Jrpp29D%K
%#)Vt]7r!!"B9[4PQ6%!97W__s7JN.A3Eb.A:F]Es_eoOtdDj@97.1Cko]7V&@3$#0n)N'FCQH0'm[0ZXc5md`7Z_]":"HjVR4o_E
%8"H,Lj^coN@.mmO,q*OskM"9^go-R%RSc&e=GD^s-YMO9.LTF83eT#gcUHl8AVtKl[?/u]HXrSB@fAEs,o(EJ&%J=rpq(Hme<F24
%qDh500l:[!=JG#n?ClQ4L'22XqW9I[K$9gTC*Qh9\rrfS_`PWJVV68,/K/:.0J3SV+[o?u6/YWmn_H6P]uKBI>&p?(HbW-fP1;qi
%\n<3n_7?C=`l]A+F+JQL#<fB8`=U_W+"VH!X(\BmkqVd)Bhbf$qQ6'R6S3,n)CR&Cfi,jn?l;O!6'U!K)5l%sY@=SUb.AXa"m%";
%.jaa2hlDLdCTMuk-)X`_qR5RLki_*G]cj0;'69!RH[eeqm/oOPY%''2B9!Jrc5r6d5tG#6BGAiXn5)rb.eP3ZFc]`f0q1+!N6=un
%GSK0MN&:)>OL1];:sr>@%%(Sd'V&^l,bRPmVBD_;p_cnBNI,;GV'26U?tj1MAtYtP[jc8VQobC'IgFe'ZeASa"PV'Un].S]iAS#V
%Umg!mj5)QN\o1g+Y_:>s6E2f*mD>*7>ij1ml*RnBPsB(Q[h'@\/XH+_Fn$_=kg\T"aXsQkO%0Q)2%G(XV.cTrR+cl!XfG$a2&P69
%WR,ch7u<GXXPBGM:JLI3pktZE]+XdZ+_CR1[b-pE(=bIFR8Sk;=S\IXD&ZIp\QPN$$[;u\</d[o+t,ejeX&S\b8+r+6XApq]k.SB
%-,uYYJmF^8^8OT!i:YnsUbRQ)?m`G+%h;[+HGhn*.MFi'Yn"WA^T2lk-:c[Gf)F.Ol=3Q]@['QM$X8$.YHuq?bYM;S=+QHg`KG$`
%';'+emD$o7&$&*+(G2Z'CAA1b]+78YKHZ+T)8>:$:?8t6Ht,%@Q@*6X6]DnG9LpE3oQ7@mFQs$:pDXLdk[a%_[\/LGN8shB%7Zn'
%T>I_@V5"?]],5.KLaoTl0%QN_`1cWYAtG-[Y8;gfH'N`dZ5O6;qb^")iUJ;&oQJ%ImI`dWm@-SuL5DOjk:^%<dhMg+E96$Q6aiO^
%*+!iM8bd-r]^JAb5+$T8lo1iD($)p7]rbA.D!NAcgf?HG*<`_V-DgcN-oI24rbYlCmEY[E'=6S&0*H+(AaI#g0sm6/"U)ch30\4q
%q*qVf>2:(I_hfO[+RMME_u5C_`9atb$_\,:^T#kfk2%n^SL@'#S\C36@@+o+6;A/0-NAR[+G`ubRW["bk+49MbLSaV04]i#a2U5u
%4dU16;s89rdff["jYVl\LZ4fATE@#EU<ld6@Le/GV+,'YkkO@%/GeJ;2k\P%iQ^?/!OLo"kmq26rnCf[d[.`Kn^kPRb<PWKr6)jt
%244chZM.>*'q+t%+p#S$AU"QpMfE(1BF@RjTQ(js-q*>el.Nq<+mOV?J]!JnK+bRgCES5;5Y2Zp[`YbELfXcnUT;@jO^s@D(.WBY
%Vq*C2g!sF4oR>$pIm>YfnQ,o]FMtc`?E)u<j>,_DWBa0pF:-M)lb@0T>pWUEAo8l,L5#>a.0DsAEkN"/"IUZHaRV0Q'N)iThDjdP
%</]q1;Rb)r]QXhUGp:mA$&HpV`Q:AsUSCl&-+?bn(LXijcc,),N0:/*U\s3JBT/-F6mY_h&-=_&4i+uj00H@iA8,Mk_AH(UAs]t?
%CJ%dn'!8%8lGbC'Q@qS,bKHiGUeH@'[0RsEo"P<SOqao!>tZr*q!No@l`o,&5B=J+/JcLs.A^RUjAA?IE?cQpQ0^258JH&[XL_5%
%KdOSZ*ClP6r>'`3;'JS1RIQG?b8ndu+!<JS[Xo!6.AC["':(r*<"0Us6PMtsERa*9EL"<7GeH8qY?H,hNu,"8OaSNiNhY/%T#F#)
%+DQU?qjNuHZKcQ')IEn!>$M8j0nr`'hA>T;/e[,X$[[.;O%k(k"^=A9h%Z3dng_C?B0iTVMi@"(mH_csA%;ueb`tNV9gsr6D72g<
%!4AsbL#\_;s2#);(1:_jFCeTE@Dn-PMV>,!.4,HT#3+0uPb4fWo6RksE\Gf:lDZ[@enWgR?RYanCs6#/3;p3+$Iuk%0msL78eXS*
%/Eqf.C5<"@aI?9+Pq]R&pg2Mcm8]4DLE7U[o(1tPl=DsYb]+\ti^-4Q'pnG+<ISqs0?]SpItREpco4fPOY'qST9okCpf/(nK+Tcc
%9uL22Ns0[@DK4hYNVJY?ImnS1SWX_7pUM'/#o.$M/Y@XP,r$%+fL/6Y&&+,.Ec;d]qAR>Y6ZkEV'@'.?U%</YeV35E/+AjqVg"/R
%K\nNO.U0R5L*,`1gF]ZXb%]Y#:DVT2A3]U9h6H_b=P78HP"gI-.5Z]=i,td+$RJo-B^CAHnOe2+XFIMJ>i$c)5)n1\a2*&HN]G:4
%XpL`B^b0U[f6<RS6pZ[C(Bc-4?]W0pqBZiH+U@AT2'lU"Ho!@cASIZkFVM7IF+1SHKHM160E@A.?,q28Z2pT]8[7rRaCZLb1UDSY
%+Pk.G.H%u5"0%S<%)EHB=[p0t>]Hd">79V[QpeQ@>i2O<Q9X!DVn['IZ0oQ"ITp;\r_3:!M#=)49da?-SKc3`jn>[j56#3cNto@`
%Ek=H;8Fr%T*Qbt\">mf%'nL;'&V&Y=oi.>tStI2I1q_9_jb`.,[FE]^%1I'K#@:IZ-8%nnN8Y?B-*al9CG*j<c4t"6Dr%](Nkj2f
%Gh<OOkZ*-qkuY*_;k=.KD5M[g5bC(*JrH5i047FIH5M/BF$9dIq7)c"!5f[=K3<+KSd%[0p_ju.l"t[7]f>7r@-FE4JY<``#;]7j
%r!ndcUhB6o=u/<,96o"h7,`Pl@O;dJCJQ,'"`d1O!Ma<q.;WO;Fr@9XP\9WBhC*SH%%_aPkE3'&WX.0^/`Xb"Nbr=h6d.A:lFPI`
%6$pRO/b.KIT<+K&+(EW@>I5-?%Kq\q]1kQ4:%ZD$$=TY#`@ogl^LT`=9XKZMO0`&UVM^0fGiOW-%>>'?+u\i-P%[Dgee9^VbKIXf
%)mN<;KiV'Rd!1Vgho:IQ?D*+fg'4lo9c8Yt,3>b'Bcfal_7khXfr`VA3]Xa1-YbdKk&><GnQLUV3R6)B<peGTW;dXhnqGf?ZH1U%
%L<C3!,YQe3X>+3c[*0M^Pr8%feqK8&5An^!cVoZR2EO*_4/"r_&jmQJ9Z*-r71%"]M+!gm^asp,\4FlPPeQQr6X(pTe[G"NEH@WY
%g=@ft@:-1.#'!@A[:r)$e\+Fj\L,+*\;hPaJGjL/4Kdrs>40?6f3GF:StjJ_<'_4@p9NJsRYMW-H)>c=l@&?hNL.7^\:256YPjeO
%m&h73r>b7*%7o9.e\9F:,tj4;ZEc@R<J<T^eAP=I[9#Xa#N>#/:h2T-c:8rpRCPJR&*,"S&lSm6]p#Gk)Q2K1=[a\<?_;&`j27V(
%>)G?,X`hjXpZ_lOU.E_h#G]QodF+_#c?4=P]C3](2`e!3+N\[Dn%NZapNik[Htr;<9tg"Z]GJ*oNXK6S7jX<mXr@SW:OVEO1:aR5
%;a8seh9,Lf]RHojC'aOaVWX%%P^AgH[pTGl,dE5?T*[FOp]Qd#GQmTRH@4R8?p_E!A,3^\5&=dO_FPnI!(dAi6:oqiVnaRDiZt$N
%R@"&?^ksR3aeGC1Pr<^k<Z79l!g\#L3!CnYLn=^7+K.;F3FPQ@Ntk<-C!@YMC.lMq:SZ@+R!tI#LmbSPg2Up*+aOF`k.)ii(8muC
%#+SG"1t*nf(pf\)TN)>Z$X-2=aYFkr9En94oJd,91gq#':qeL6433sbeW*Acnts00C1pi4Qf`nNW6=HMC.8al,ELT-i%M:On0=f<
%aFgS-]b7I2F/@HV+.e)Pq@t4"c5J8D'],sKOLZ(to0h5:1):Z]H4I\#WLs%(LVgNeEM!8(^UD=U6KrFeE4$3/bhDj#2rFWAI+q%3
%b.9)\#afc]I4$^s$[tjE`I4XBlXIB'ON[1P'/<":-+P@9g='*]JCd*9*Js4pD=?/$\-Za@PMos`a7)je#d8ZuWSqmTRE_`p5.t2+
%U2aFZXma.gNptkJ_*3J>cF!B-k%5S/eFj(JRG6Yk[fO,K"g5a*27PGV)(@b'%*GIF9,+r<b>\hVa8R8RPU[AQ#g&NL6"qD?E[T;f
%'aqV5n3iqTBJlg8bNG4qZ=JS#*/RI#dXFnY+^^9DF+=_+>]*mtM?=.92\7c2-q.6qhjsKUSZ0\\di'uU/$0p/i5roa@\KK/D8P*6
%)Di9W:Tn87rQB]h?a/m(c.A=3Yj8'>mod!8TEZ<-.Q%Pq<S>_K6:0Z[58ZM%1eq:HCG9J&D'^)Olll5eDXsQ3`t[;!==\bEo)"]j
%GbK0#5WSBDqa$c:d_j;:nPg*YQ1BhnKuHk](LdtW$gYjH'(m4T^@e'g6$Qu+Ils#!1Fd.m!X.dHI8'R-1'^;>b$q+>='jS(Nlmd5
%k+rBe)L!_1jl!BSih=Q9IKi'u.4j&^'=8U.las*I\,$jVG$Sqt_LOlqi6uiZJqd_JBdtr/.S#1)`U`SVQ2htil6,Djd\PFm^\[G5
%9BK0Opg&+.@qH6K53''JhRiDqG<"<Q(Idlh/q'ZnNBXC>a%edq;GBI%.94hnPA9d\*SY``[U`/;3>+Znem`q@WiHNXe)3/bc>+lX
%)fd=U+Y1[>LFS/K`4t'@T2\0Fe69VdMW2TBUnm>[,=.3O]iPi#=Y)$EP`iS]dd<(1C*Kl2TM>h3AM,r`0:I.jW=fTA.E>$KO4,Ao
%!@)pQr`WQ&&(l)5HN//Q1i3Md#S_c1FX3=D`[0j7OiIV<8\*4qgKlk:dhh/DCc[/?oXtnYDA"WUfmD1%\bDGC7mFR2XWMr',uIU,
%(tju&P$39SF>ch;D7fZN!sjhrpDT'Vi_O#"7ee0^iK;e0MhkFc,$IF<3`)"d3e8Z`ZLVAUP/LCNoG$G/Ce:[<Dj\3Dq2`09XkMcc
%4_\1o="ELLrO;h'qsXR[j8\tJs53ia9l>-XA)1qm8aSU(b,#"oI5\-Wp";,^G]rPUeC9Ig[pJY:.S[4O\-IjUcR\Elp1[4U2>84O
%0nulV=)jXDA`&bsOK^Q#XK0qA/6jo)ZZ3WtBeYPQ/>%og(WLG^XlOT_SXQn!?*WhUA+/<h(gI@c]@joSc70Os\85Nb[7jN0g:r[*
%R_&p=d&NH2X(p1^G-u`=4Sl&3(S61U;u30SbMD=2]Q*h#V]o%;]5CtG(=g!EC!t26\$*7+_=V5R?`RT7FPGEI/KWTZQDJ]dp3!Hc
%NBX=lLJF79_%sL@X+YcjZl4C@#:n:DUr9_Q3%:%O8>22;#?CJ6H;tOpl`_Ru'PlQg[(nt2;KjeD>X[\6gLVU,4oaX?\TIQO,KLNE
%NSaC$g2(Mu$B$plp)]\KNW]9^>D&ir\@6C3)Dbs,I%d"eE,8V01.-%Y*c%Z6ksB-CmkS[TL-b3=BbOmggs&BTI)"dJ_s]$Qj4IGQ
%qdF,I.5<cJY:,(c\$l6?W):NE@1*e!q%`M0UkR"De1htFG8kUHrR<R4l>G/(KD!`5,[5A<";_\Q:FQ8<>"HakHYnW:m3]/r2TH`d
%YKRADl3(`1/uOuALAk4)U-[$W2J)3fl8#\kH"\-QX!3YW[j*\5"m,:arT-;-?O%n`CJ>-VN4G_*6IADhF@T^GKDA.''8N=OH<Lm.
%nss#SD0t8C/9\BhR1c-p0*O<K>^CP1+r2@s'J@]QOf-C!HlH<nD^RmE[JCH<SfEo4iY&-'^>sV)j\s1d%_haI,d_OcF82&BcoT17
%BdgSC@;elHp11FH$VF]jiY-a`Jm_K"@]>TUI^CiVo?[(@qS&aWq6;2Ik1[3*cF]?Vr\h*T'"XMiIUlHf3VR/ARj^j*B`_"_>t<*k
%ZM.u4o;&JUPM1Z?1N"dj+1kW*moI0ggWY+^U33._8Vl7kZEr+D'=E%KeW+0QEdN.MqZPkR,2(9K?G1Ie-5+G\]qr"&'^aIMeg^Yi
%NNWq2(Qp;Y@e)-N(t!M?Rcn=.Zs@qB;3'_Co0/`jH&+YD5)VXB;kHLO[e7sU:cn387%ne^1Q+U<4c`!.#1H](##Csj_`P2Le3\q'
%&ZIA).87n2GuXW-<(oqeT3g\LCPjK4;<0O3qlZ;F;Z?SqW.I)G;gL$G,Z<nb'"ODe2U\&#k0dioim9H@N'L12.dG`5m9rHEOsf/=
%/gTSdG9rBl-%_'gXD&Q@##2-*B+6*2K@H%maI5Jr[jU7ICU(O2.?C,.;1t)YP^9)4Q6Q<'gd$6I@)2):\&V_uOR%^@cq,@B*C)W_
%bu%miec"Uq[AC=5iukYS=\W5?MX$"X'"B>kqJP2aU#:;'XnqBGkiR'd)%Ya*1%7!WrHAaS?.lVS72lHDH(TPt1QG^/cJaV!nL6R?
%9Cf/F*T+XrG==9J<O'C;b6%Jrb`93HF78bfCFPjOoK4"CmRfm<)Q`,`4#Y=6/Gjb2Cc(KQ-1JD+:SgYt<6i@eUY<e@;$8$K3YdpG
%G.g:(2G!JgTe-i_<[Y/rRo@c&RXG0e5-D&d2``9nHE4Bg;k'?F0sfWj%fo]0ALZ_U3)@B&$@C8)7Oj9`:OM7rbnPEl(^.^+Odeh)
%<?Yho7sTHk8'EUd/h32N_7MI8i#VC+L]mE,p!c5]Cn.jOX/De=Y"Mn3I@Gr_]/eJIcqSk\&kD;OcL,_b;R@fF]m;:3YD$eoCp-sR
%i9t$0&uKnnnQ4TlP:b7uq;=DKbWYe5%XptZ%N=%Gn=>`%Ii(%Yj^_MKJjWelY[s8^.]"JgaSU^lk9PlaF?@8"HA`CQbs+5)TJE.%
%,#DOjBUcRjj_eOIko1@graI2CN0l&=Q\?0k0`'?+dO'':XK+\:CIa%]^mdoE+P`[-#i6dD>6Xo"TRgl8@hkkOMG#<i&(G/(Xc[L,
%:(Ish;2(GBppVroinY`"H<q",qN\G=?V"^(/QB&WRa.M\DO>8dW[uI:If*A[mV5j1:b=LTOOi$eGfe')WHnBG=o1(V>ln(?+^,T6
%_8%&',AKP>_<;[^>=K`7QSd\pB>Z))JSuk;baAZd'gs`.F6fnm0'tX0)I`sQAu<Pr]1#W%c1EJh3t7=0(6mDp[U:q]M)*d/^5?"p
%eZ&^;N>;/<J867hH:%C`]m&`npDo%_W0n5H7bF/,PNX($Y_Ou)NesQR\_68H5NeaMN?ZP\KQlgqQh<\MnoSQPg^+GcpI5^H\ZTO7
%;LhNelq6b+D7"DuEEXbUqupb/#@CW59T%pfA1&k=:g;\4rb4.TkRrqjY29fT/F8.HTmmkVi5qN4aosX<U8m_p0s3I9H6MN-RMKbD
%=&^d'j&Oti[mQJbqqC/BMh[AI),s:T</`rnlcW+_ST<eD(lN\VQ>_F[BPgbQGu9GD1H;NGPLlM8G\C=$6Bt9pYPbj;?#AtDQ66>L
%>:n=gQa%`mH'rjO)Fu`d42llJ$)u=afl*^c'M`g]\.Z:!6qblmllq[j(G__gK_Lg#ebL<]Q6GB!<u["<=BU]0/Bn"AkbYBdbt(Fc
%fbEZXH7=!MW[u;&'o;UB*WYJ`TgjB[gLT+C4_ZD<)(=*@'+"k+oYmQ#K0ZKh=-c)Xr-EM#6[])(#pa,\X-ZMNro))DqC0@@dCer5
%X"A#N82ggb;a`2$_jo9GB<ekCc5amXG9\[d;3Jnf9_>V1V0QoJ4jNC"]%=cdiYVaTE/(ZSNg;/nl!Uc:c_KT:'s_EfX<lKD/m0'?
%\7eI44'8p\hCi,O;s5ruY'@k4V*NuS#8O?$>]4l3i)JG'XK[NE4*ic.LPtA8.K'%@O()7AT>=$;A'+-9n8F?4$F'-aj<b+iE-kpO
%Pu)-q)BBRddSW"F&Niq9oXk_T[6%#(0hj1_d"#.rdLVe3\gZ8AZPUm\Bm^UibB7>R>ZmE<]j"k)DbKf'/)n90U-h._isl+6.J>-4
%lP8Hm43kSjVsQuSbnDt/3.hij,O[6m&(.uQ<H^i/naFE_f=n&PnauI/XnQ]!j$/'%b8\QplVe1(m@2s:Yg:YF:R1`M6:dr*:cQhT
%&%"f$/c^ZJ-;SuT7]GRcTo6u!n-T5/O4qD"kX?qYKp9_GoceK92\4X3]=sW4o2WQr\RYG!cghDj2s_TQitKPCJ@.p(.[&r;Y3,b.
%P3m2;2S[_K*/R2Cb-i4)q5I@L#UYVC#aV-Pr*^iWiT,tbB4WI%YX)[#(O.AE)og,-anC!2eEJVFV^?#[Cq./$q9L>@.6Cs^fBAi4
%@@$B$m;q3*qTB>WLE3m9\!_oA-90nFS1/2YGTOebg'.1t05dC+O7Q_egg84j>AgLLqh^!\A\k>gV31tgISems5=[#t^MMT:p`h]`
%?<e&67_8%^4aD894q@]WrFKaI/In:H0AQbBqVJj9WhUZRmVqS@\M'7Yoo&4i?+8SO8*b'UWAj0r<\E7jnpN07T9i0^%s'Dl``l]B
%T#XXFmF6H_4lG(hLt;lOq\4+Ds0C[nH?"E?(eCcBfk>DO-[*7:ie16C?aqaHJYT!gHp"]SSlrp8X?c'oGtL5dUW-h!b;J)h@'Xu=
%I23bLS7:gU?aeCr*#*dLq`Ui\992Y\c4g)'Rh@eX$m1L03Y'UmqHTZtA*63:32rDYf!(@\a`%[s[%@f[(o<KE6T2$SdTk-'p<A!;
%##<,4^^WcZLMhM"J9F,("38f2!!e-h6T@Oph,Fs+5O6G\A5ELmkBpBeNLgUGi5MT]3t<"nImALn4uk&;%:.m\.4"2erim`MCJ(fZ
%8C;7>VGb$\#,3nh>r#L.21r9e.*lC,Q!-YS;!dN8ilINRS_A.kj`"95-oqBR?YG$[;m\m!"-%&4R;UPL9=&88mGnR2gG#:T]&X@u
%R]V<+5/&mKW%FgPU^>#MN:jP<ZQp\g7^Cc#H!XKWeXd_GKGdXpQL:n/W,pOga4t%AB6_n8FLAXThOmTq_Bica8'pRd[KV;/_+:Q9
%AY7?*d7@in=P)dSe0R7KPI'Y"roGoIp/KdVML9]jVUVY(&LaA\P$!"q7p)bjR^E^Se^r4^^sRmE@8#0(!PrKe[kc8_PVr?_MWYLb
%\sa)?S#%6e3?+$mR9Y)'<D"SAU1rsEasnq;jZo2?ca1AaDNUbr8"P.[$l9Y'G1*='@bUgjfN[uCc,<;JbT>>2?1u_>dQkFRN;d1&
%8@29mZ.nBn`&&e'Y.@4/eB-fM3'\"?WuJo=0dkE:ZS.ZJYBd\;j^\#ArFkWDb2lD9fCBu*>l?R47DE3_qo$DP=CgkDDC*;C<&62L
%cBjD%&4.J8_sHh+ASoM;g3`Z[(@@.6Db[X+/Zmg8O2&d2'._gq_@a,h$QdQJ"U]nY#F_N6kCWhiU5,c,;BI,$#4LW1I#Zft9sm3+
%Z\K/!7!YqC2h:rs>kW9l5@2^L8!e:5Z($\V_>[2@%;rrAXdSnTjJ(JqJRC\uKLc5M/2s1(E99O>JI$FU.>[&?\go/4'C7fL&[,F-
%>_1lT!aX7)k:l+_Y<I_.Xi'-L%^cdJZUf31a-sr@i/VM.\g4@QiR*dk5)Dfr4S+ri>$"Fm;B%`V9+>^^,1F$oOJ%S"TsDF3F*#G,
%UdgebfI<n,dcGqcoHaj_YBb9_6ji]mQK1+Nd&^AKr[^Vo>7Q7_+5!6p7*,ffm*O=R^RUQgZuDuj#<!OdE#--G>Y_#p\]hAm1sn!<
%1Y97ZULZBAFZbr??(+T%abtb%CD9]Km;:$cPd,Q>]UfCYbV^BP7sr4@8-k?_`=gdB7c]]S5-ioNAc'-t-,Q^Nh_gsCadM<R"E]Ec
%94IkiG<CW"\%0UFFXI%/Xrf/Sqjl_6h`2@!>o#Y(fn!EVWcs&N\&V`lb_.X6QbGI+*SU+aL1V&$#j-$1)<E)*/k/s:23WR3[P*-2
%RIGg[P5pj6lWIK.VA@X(bs#$`l!]!'\^SCol+N+ne%6WQkP)S1+qssQjjQFF.6>m62cMp,?'.@SW[t4G--37T$N4B`4tu/R+qTr=
%S/c89,$`KGd95%?k&93Zkk#-P<Ys4HiHYthYh#_F2$(TJe?pma>ak4!,33$C8ROG?pHWL+RE/3m8$0jTqkf*'rf-Agg[G'\o@R>`
%rYkG@dqKm\c,*GZTXee"W!+V9U.(liHj@\<8<PYS^[Urm(m6tMbL]F!E=1kZPYQdSHau\]9M\!=on!pu\2I7]6R'o5^5s/QTcJ2Q
%C%;<K;4'V.!Lg)q7U^4Gd'[1JTs2a$VZ!"5U7AMSAm2?C%>rCq33P]q[6V+6bV8M/q%j8\oHLnp;V(-,ErW;^N#5]$!5gCIiJ];o
%JL&!aI@?ZI6rhTNQsm9W1C$oSId@-cU0(QJ8!^/T2<oKY$2hgn'@WUQZs@L>+s.PuEkIA-`KGA=(b9cFMC7cQn%YpUE"_OenLQJ]
%a'gusVfHOR2;g'E3KdW8TeCh=]Wc`+r272BU31=f>iY(N(\2U=^K[B;0:(o"34ZM3GBCL1JdeR@7'l.tE_.o`O]s03C(Vju?l@!@
%LO>g#6VtshKIHg/4C2C`1<(SoL;7L/Voht3Fq^;%<Ud-q-"06<AY6UD-gcU$ASTW7bBB?Sm25VHQ=HfC2-(\$J^APr+9o4P6=f3k
%#OAnXjio;%p.E7a<(gCj8<"4@G1Ks[0j;1pO0mO2@]fB8PbZ`_kVOHY8?KF_\V\[W?H&3ZKj#H3H.51aR%6[$MVs]c*7\E#9[-3*
%h+EB#f(J,[p+(p;^>)='N_E7'4>9hDO3">'hl>&\YJp1J<E(._YqI2c3?$I(G@+;:Frm54YneBp`L/tQ%'6I_Pme$7Zbqm>i\,(*
%U6tW+2R8.&Pm51\DsFP=9&Yr+8,g=?5=F<P+?$Zk="#';s'j.tcpg!j:*XJC187%?D@"d"X2:-rB3l$]pD5$Jlsq'@)fZFK-4qqo
%oQe]L0Q2dD&kXSS!S/&eMHkW/J`qB?mfbm#g6_:oZ;-'Q"MJmmdB+78Qdm;^.6<P%%k!DQ1!u1s:[8^B-1\d<cVmh>HPQC'-1mlu
%;c1,f_X_*C?`Z"QeC'V(K93XjEZHEJ4,s'`-DC)YnaR(DQPtEG>pqI&M5#qsat,tOW3Fq8c@N(pTUf4V/r0Jtf%N_YWR'q"U=K+-
%SR*qeXT"jmKg]UcQNoW:*^Q#<ZD[Y1h^s@F"G9_T;'jjl+A$1!_?;FQbT4's=c7rRZut!LJ.onhOlAocQ>#j>Q%04(^k;g,Z\gPI
%,M)iFTfKL!%7)P9V(LDuC>>'[:nYkNIYtjtA-cBG=t,duTuIV>.lGUcRC\"A`G#L30tfPYH6eqmOb-raETDY"8<C&[#0Pei)Rim6
%lb@M/W2$54eAp/W<#t'I<Xol'EURl1MNJ(-;fLq3>XAi3SRn&i\,`qa-:gDQG.^Z$UW!Z"FhM&"Z)k$-0@7%Nib)fRf$^YOF'^7W
%!40<fj1qD?->6DUJ9nflIW??c-Hj'0Ye&_d#:JQOCt5,Eq)(-kb-?L,em41]5rB*Qn1)Bo*gutPQ1Ue7:%[MsJe5jDDj[^\'-Mr^
%f#ue$:\X>8AbVLU=TNt>bZ-R!5;kpB\lok,BZFjB)QJT4qU/;S<W4$'j^Y6Dcnn:Iga9Jk7XUMLFsdX"?U;)bU&c@#Bbg8b\ZA\t
%$fba1Q&'@TdH]9RZ3![r@sKI"r)B?$]_<.PI,5-(0qr<]YA-^=dD*W8"qQr7"R-6$de8Ogf,C(:73TZ!Qs/OpnE'CB"skc4E?I=`
%(WUtpX5km*8T-7drQBo2q?F6XmcWR%+H=:LgQ3ME4Y*<j1OgC,bfueLKM9Xa*U8SdUfK;ue)WAQ&X3qR14F'Y#Yl-<+4AS[5nAIf
%jhe&)))jXIO@NR%laV034?k8JmB)uCKiqK[\=;r:jUV;a8SN*b4PS;tip*hD5)n$ZU[h*2UenCuJepTtg%%76kCHUUQF<k9$LU]`
%^,*:`c5tNZmdL=8FaoY+:D3!B,EpRuDHK'qbs-@DDh#[6/\jo]7M0Dmmn.&[L?@;pMSN34G$bqF$?+:>@ND]`HjrN[;+U8M4XXHP
%8PEX!`8guL:`Dt7]G.DK"cea_#9eMtcjNK_q(1[]R94AhLhue^LH:7hM-1q04@U%5K^E266rV[WO)f]X1QQJ"eGdG4e[43*GibGo
%DnLe*M%o'$CXV(s:.o9/`ZM#h8HpIsa/$[T-PO97#ND"(^69<]Ql4C6'*tT_T1c+.DTO(MDQ@hX1.X.4:ft%;^h.)q(4k0(Mf@r8
%a-W&Nhb6I`95%An8/qY:5otq+V"S>i-:K-#.E[4o\CsJ)e=\DIgYpFFVR?+BmKJ!@^=)5!_]"85$kG^F_r)E_6Y#emeLXLmZo)bA
%.iuVYhd(LRhH2tD7GL/&HG4QShdA]hK]F"B(eG5Rp$@^D77E+mRn5cnp(.fO0uM5gF*X$AL/D`3qp#ci0dg\%O,Fkff@qksOH#]X
%2gNRrm(HTp"c]ARTF67VQ1;06pTsb.0g9?jP+#3q)\ZQB6`LJg4n+u\lXRNhjID_i4c%RR+`R$tK!k%!lkEB$,gc1j%*iJ?Y`>6o
%_1#C5QhP+W;HZo\65@=<0AGU:Nh.N3@(kIf9Z^W8L:Lcke7I:8(rV7s<hJBg`<1iZ)C)]9nn3aj$aankfose0^$+d//bT"B7q:./
%Ln.]b7'Ad1/&!;ZP-c^.:A'AG1dk2cC1n=77ZV;Pjt=ePp64L"b9'a2jD>[n\t#sl]up*tZ>0Sopf8e>5U"Pd.Rj#"'67*&)eLbg
%kgM4i,hmGp>*(GKd*b!E58$.VA]lKrZ@ct3\%umY[c2]Mm7`MhD*X]ZfjZ,&D=sJZk%nQX@lS`HjU@/i2J>H\.L+[:`FDNnH2?g7
%i]^&A:Q<?jXN5O.r=L:o!%^ekWpaGbrPfbf.iA'_FEU3[;ehudH:KmA$>U_Ag5jK![(s>j"!jHrH/=L9kKP'^HJ\,l:sYUpcN)J$
%k0N(%3SGuBCBt,A]Jq0kO^&3C7&PMLZRDitPXbE"5r.:Y_'J>KFb=X8T"@^:'5^,.Jh@['.'ZIq.%ET\!t?ZWj;p1:Mq%("<C3OH
%%-9/7DE]R06un+^Tq4pGAu0WQ@2DSG,Rm<6Na`nq-bO1pfS,QW=<H/"B'IG`G7?(.L\P`f];:2H=6][a[Of+@A\Ci3rN+nrh&=.L
%@DDo1?T2#hX?F-[?l[mP%eN4`G5HrZdYjcs6V(S$#@.g0%&Ti[j\f4kWP)PS7oKtSW*cV`MQ_+d`lb(O_L?oImEBC[]%msb=AbCm
%a"(KPDY]BH:O^eg>T*GWm)0@KM_<oHaJ[[ID4B6dCEVX/RD$Us5jF#?AV%]ge^Lf?=edH$XksXAW'PNSkg@e-EL1n?K@l%(MV9b2
%&b8_M3V$6gr1:6n]B3W3q$s:FJRkCAKD1pdR:P1lj_TB0IA9!up(]BPgddt?+4Sfr_4ceR*@7Q/U;5`p3rrF)Q@2nZGM-^u33$_e
%P$LtM*P8r>,JK@PT:1CVg5/1.It#5Z!]sX$(eDg?4^`SP]+\TK#Sn;FScqS_I%?!]m+h3jaRJ[M4C[KG#"UNE%1qc@H03;$;X>TV
%!PZ$(/<W5V.duMZ.c@tS5k5&T$`SNu.7(g)(mJ(&8fgBR&Lt=5\\,jMcWSC/-n,K#LQjW8K!E0,`TXQq@CFm"Q%MU.o9!d?"S_a^
%8N6d$`H75,YT[3/Pr1rE@e&_d0:X)@0a:5+U_q5J=Ht.@TN@haD%`OgJm"@2Gtl!!CQ8oNo#UH@75G\d=\QQad(D&ibWQHt7,Lk?
%8HXRXfJCD!=<gjB-R(N+iB">fC0^<8b!C"Y>(Wi,*6iH%Lh+^LFI4Z/#h@J<6L:JI"YL`_0?>c%>)?0LRKF>0U;H+\b>Xt@`bB0l
%"_u8h<0V`2cU`Eck*s@;'5buQUhH[9:po+cPC'6r$cQ<YZi8LTg2=0j"sESReJp:6b$YPool?U*JltfCY02(Y0cEJSPU$o3KaNP]
%OsV^iS$EJElVb1,c3!%L)J(W%c@lR?\JYcsMi;`hUc'A:rT)eRe;_ssUk5b2+p$jbO-nu$I[KU]<>JjiYE'"E1i4I)MXoS]7#>er
%b?4RJ>qBI6HMBuGN:F+1_iqQj]Mg.kTf"S_9`%5'#M7L]!0pG-OK;e4Urp&1appX$CJ8fKbLf,`B;J)aGU8bc:cpN:)k4K4W0l33
%&9TOlGpY/7Y^7.1A204G5kce^[uE`,\*kBA5dWt[e=roiNfp>D0+9+D.B-0J1m.jI:c,p\LQWtgQY$-:2BZ0):<>P8A#R+3ZqMLP
%J$GF^b%0<;\g%QS($SR)\uH$Hd'ZCB9L17lW!MYTN?'IYb%*gILbNcd[\07r78^+K@^Vmb'@-Lr8e'U4N^B!l1q,5"7iF',q84/.
%C_'#3;)gu=0&3-0H6b(SW67Fq9D!pYT;p!_eQ(s7]gh[.RK5"1Loqjo6rQ'I"7h-]<`5s_UWfV_I4AC*Ki53KV-TJT7L`^oat[Y"
%FJhTgLgENqXg8-n6"r)TeMQNCj<0R:XbD5O`t>BG5IjPOc>,aJ,nYp"Q:?%P.;n\c6J#jp/Zf,SMh.\mf1=*Sc*d[DRM+bd.+i'W
%:"#86;D23\p46n*`M(G/l>8&-A4$\d,tg]F..]flk24GRTK0!o^n?$=DsD['h'LEJG#e1<97nKCV?a;@^EW9c(t^<J.1#33*df,d
%4,B&58=*"&H\XK4L)Nd<P1:,@*,`TD+:qa6#@TcL9ekn$MO(Te8=f`l`(4no'RCc<M,m,CWn*tsdO?S*7TNdt?,S)L'\&f`I398^
%-Ymd'P1#U@T?tfk;ndPm^TNHr2#XYsjt/[^=6^qG'_87,M@MM);V,S"Lk&9>/jumL;FjttGT="o82cI+*mqAGeSntj#5PbLak`)m
%_"Hfoff0t.@78E-rB*7^as^*mBm^%D.?5,'[!qCu:n^rNH\&F*kFmu0M/?gq;)C1=_doHAFY]!!#^Tp?Rb21M(A4q`FRnhKP&!F:
%b`rV+(&^a$@$M\MBJopGs4=lBjH4AEFTJW8l!Tc+Q>8d0JOJdD-1Nt)>Y>!1?"c+NW,$Z]5jE18)@$.TV*R^'60j^3:V/:`UQ2`T
%U75tMrb@.N]VLh!Y;H>@:,-Wc#)Q0.YiD!XJQ0"Hm](h[C`,?@1mQZu9R"$9U]'#?&]gNTW'8DH1;Gd^,T1d2io=('HAV`k&fqrm
%G%,:SEi#+:>FR0^mn/.0`.@--<R]-6g90eJ)9>a7"u;ESe$+^6:jZ2QA%Tnl73]CNlZ<M,8ogq4``?Xq2,u3/>?]EE1bGdlp:[CM
%IFb\i7N5"gQL[su;Y26EYFt`7^X[H/?IC&&h3b72DG[Z?%atklCRbKAf^Qm=O8'"W.DQP5"2uJVT__!\Yi,ej$oi+Wq_a@1$+=XN
%+dQ47<F.40BEaDb&d`\lW%_%`SLRCGo)X9P)(6QE&Q2sj''Cg!&(\05WMH>-aS#s]koI*Ne?G@mLBt'I<sT;!Cs?f)p#&GD@9>7X
%1-+T?(Z\+^@]^qn+f<<eV-0t+-tA`%Gt"eU!,TMn"`:YHSu#UD(mp?lXk#"ubi)JtZZCiM-j%dqFCi,%hEISU%ET-BNZoU<>:ZJP
%BV#m?=tNt,+@#P;?0H`Q)L.EW>n'jnKW!NidH.Z9)I/PT#[<5*Mj/m&<mNI*3,m&E94bAHGS.-ea04kQ1=i4sV(W#d6`[2O`N6Xs
%^m4l[fiF7X-VS9RH&!&!2:f"o]EkCddcOV#T@_5,FT=EV-'IC]qj];dACJIuq+7\aKZ6ckTE\WoAs6DQCfFc`YZu%He[cVFmQ+C7
%jOd&:67*.)N\?=,*0ao!VKTB7I2'4G5cOH9o`<]#_GJ@6>;U100T^.J,**/.(/*2e`TWZ7V_CZ&@q5"9(6j0h@q1T<ZuM=i=4tO<
%^^_M%Dpj.lK$lZj;3YN(R?]rWfX7><e$;70+XBu*7?jS&^VA^YE4VU%$`ccG*HNG94uba->@eIZIc6)\*BSP>bhA9G&`"!5UDB:r
%,V@PEZi^CEJj,haXTkc:CUO)r:>m.?H&@6q4nLMKH;J/0eU_a`2N"QqM3[1lD*cRaP;4F-RmgZJT']lGPp4bX+=b:fN^MAh8,'U4
%ER7pt)ni\VkF&?32kl=oaqr_dEHn#M(%kYWA_o866U2BtFlimkpM0PaF7Z):kT[>Q7T+TUPS?sY`K&nu>tC1dZ8:8i`YS0S"DqjW
%lM?I<G%T+g@D%Hm9['rWq@7XgQttsO4(84XV$ds2Le\5U4Vgd]e(/uk;Q.=0?V4I^RnF-e(pm\"*4J9\eEkP-*#:BU2F9(?I(-6p
%VV^&O'VX5_YPQ_$B,OmJH(e3WU0cHZq1]2bD#,L+Rgq\kUNqh;>C$[8?t0GJ"85P,iV,=tW/7cb,,/pcq5C3BKgbl:Fl9725Z\ot
%KFV7DGD@3^6Gi)h[bW9LX#cN@ji6UYVn?K"l4Ih:PrT,H#\0[5K)m"">B?QO3o2kmCBg>l<0]<ES2U'Q>eGj;3>jpIT!KQ0=U3ag
%iL+c70mMDDa5CYj*O-W/3pO4shGkquhr(SGFQ#>i\1bei1F5A7Wu&1XjH23'M0:gp\Eh(8CeG%k]Oj%I&WelKo?2ih83(1GQn(lh
%%eXo5Tk2/aPJQ7c[0WF//AQ'ST]4J=7,\G7G-5$!@R]k`&j,-m2K%XoP\jcLTR)icO(/Es+G"$p&u4X'8t:OYqir"HT4a!2kC#uC
%Vp'LSLr6aO^LZLcZQ:GT17IkjEW/GGP7!sdg.A&.6HR,Gb?Z,PNLhrZHk?hBAj!YDPbaHk1Wj_J/DHo9.Vgbin1Lsm?1#TboI5e.
%[9YFe#2RkYp&4B7R_*#*BS'qPr3"m3qIM+Yhf@odiR.8"&BeCJFbXkJGc*XA/tI*?E/HmK&n1E\:(_iuXBUALmqKgu%+\^"UTckn
%[c>t.Xl7Ieea52dhGo^0U+:X=`TBdbiY\UnJ\P'q\/LMdko3eE_`28Y<^W-^(VA,TXjU:+L3>jepBSq2aPLpi7?1)d^3SR[-S8`_
%HtW)B#!<KsdjD^cVOTR([I3Oc):.5d6XJN\9UbN-enLLF^0jNKq&!DM!hA&jBdD[RRq`C:n#oQ(f=]CR"a(atm`H7metK1qA/6qS
%ka\*m<\dam30JJnkfP^W$nYIZZl38e>jUa+_^'21<GD-@<ea`rh%H];?LoYNX?jMr7,[2cJ73Q5*8@'hC"iD'U9V$hD+Vl6VK<MQ
%ctZ\5m*@qX\pb[$R5>G&faXm%BNf>b<0&2&2(uF#Zm%fW7s60?_Q5&?OlK8"f;uoB$dMGa_/JZ]otT;+%&<K[oJ22hFTMiseO1LI
%Fc>]'8pV)>LrO;CbSKG(0[>,-Ld1]IMW/(WIYQ3JcB,&9Dj*mB\m7Ose'QS@RS".mj23e.6FT#mq\/kCLj#"_<B7/o.!C\57%fI*
%kZP,iF_0Io#]Ln93-3q!;S1+mHs17WDfbf8D5D?Fq3uaJonF*Ro=R=q%!?!Va#_m0;smIBP8$tD2OTp_q]NX'P9j9uffjJ(\/r_T
%C9P9-PAB]RCm[BZ`1Nq#b*.)Kk!ZB2o@[_:&+K/=0`+F]^8Ghq:4Kc^p2J",$F\s<:D;rmBj@W:3ZFD03pC-"qm9eckmo_s*j3Zq
%ZPSPXVig<n1#&=5_OUV2b6V*\n!;eII/B,`2s`^]Dg5XOdHVe1Z?qtm57P5s<D;s';r<pgZlUsWC2S0GHm6hk"['3>WDf,%T`$"t
%5"45h^MMT:SB5U#4Zlb0NH@CCh<41!mS!7W&$`Roc#>?82!f[S.I#/Q``(*p2'u8[A9#f[VB%1ZL'$l_k$!-'A-o,^A4oga]qh0G
%lM[ZFC\9Z6)PnP;P'<o5ng_+ETlp-2o'Wn<&M$"^X%P'BIa;i#)aY=+BBNau8*(tP<J6>GWpKVKdGuit'MLTfReJZt^D"5s.JsJ7
%8q"TpV`@g;^kAJ]lCM->.l@sJA36GtgHfGNbEVnj0$rml*_U^5aiec0.WBfpl40^!qYZ\^l<Xt[\#OeFLA`s/qcW8L<SciQggo]1
%aFu54*[d:=%D/6tn:0`l49&l=fb3STQ0rY9r/"g*,qOincXJ<h'A^EiFJ$F2o3ZC2Hc4*DcP4Cps%alqcXQW/1:b^O\-<f+*oUe:
%`h2V3@J?bUn,/NA75,pkDP^P>COR1F5HE)j.Cq_Cj[QgO<81GtO-$88V7VX!"2S'29!0786T(Ipmdje'G17*.\4%_h54'#g>6$UY
%/pn(:>P\m$:rQABht\oan9i/KDN4E'9_cr29O9l15He7;ht_UI<,$(:`e[E"<P)l^nKh#CajEl9jeG.HZ&npSOr0J]WjHsKcDcTF
%'N33E<+tStG+YMpG`#2'ls=.i2XDd5a*kk*I%9"Q$9'3;b@3\Ng>NYV<8OP@6eGDeqAW^(]1>AH_&'a7+2mSGr/n_D`Ti?:SiTpN
%:qE:`1FWng;/An8[c8^_?#._LjO-tKa3c3IVqeQ!5-D6<WJ3V:ji3KAU;-`Xh=n/N]TV&uLH0.[r/ZD&]]f-\>5FmiEp:5VeU8LT
%28A'>^tllt-r;VdcQBlf1-*;qkJ,fVHfSl<gfEOCfR8WNc@<B5[jAH[kq]f)gS\r(o3\r]?F#*1DMR/V<;.iO56'_6\48%!&)cmL
%XpZ#*Jf+Fk`<W8]fR9AZE6UQC\IWbQ`9r$<p,i:cbO-Z\n)lm7I$.?p:JJlWha'@nR'b5]HQU1=0cDK8-:W;FZJgWcGIbYV0cH+3
%8s5<?Y<B=BTZ["<pN`g3;dcnBGG94c:H(0o@4(qe&V:p5;K?pN&\be]58+D\OdTn.MhXu<G6c8]d8Me\;WV3[TJ2RWMEg[2mbY7=
%b+H)t(mPk)oh9NVYu(ggas*L6as<krW0\dBPYL[E\o[G1s.RE]a6;r3WhIagfeRHe3rZZ7"J<[$;r)m$bEgsWReG&Js8""r>u'4)
%kJ(ijA'&Ndr6a>[IRg,r4?i3EP3u9HEW4,j]16^gT0%8U=mS=@-Ki/!Y^9>JpbO_h*d4/7ZbOs4\<NW\\b"+<V7Y&pL$s*h/d4=#
%InjPWG)'+.(I7a]dX@"bc[WK6pSabTF6<oqMqt:[^[kg@ls=GDr7%_8:GOECWTdOR4,:9`1A*!neZ(_o1G^D7koP]^HnT+0c=V0_
%BosJ@H\t8VG7eP(<'&^J*<i7[d/Fl*f2HWocP+a0s3[c7f5IFDMh%)d6uIq5)BBDMacW4%^E@Y;HM/]O/@Sn,26C8L6M!%ckT+<d
%a6]&`'RlSPZMDO=XD'3?>,LHrD3KN3Bp!"(Z:OmT*Pr13I%d<?D*>fUG.^#X*qd5I.ag`-Nn9j8LsM:O(?k58H;</^X[2%pAUdtm
%]u63HS5V.`!7,mm)nQ:Q]`e4;D;TPtZW%(^!q&q_l4]"tb[Q9kQ924!G1D#T<sb'hLYqn\G9F\t9\Ce&2Z\l:aWaNW2ZIHBhm:s`
%MEK16fs<cs-Ad+:G.T<;,MAH;(Zn59;g5O:MMk2fkt'tN00B"^]2(.Q]/*R6\d@2]PP!YPp\$`Z?Y,4T;U)IEFE;ro,nR;W<%&e;
%]3ICMJ2D%t]us,0ei6M*<)cLC(TR,GO&@=&5k"W;bs.NjLHgB02^_G<+`ng5;79DnGQ,dGgKIYKZa9OMW:!RqGlGmPh+K'>cOW])
%4Vq#h=Z"^AS\T^oF15'Q<4hTiQtiM+_un6^%:@6F*GI-"E-P#5*%C%(MK;3CG7qUV%YEnm'l4[B75%m%UN/W/YWG;BZ4l@!6,MGR
%_;=u@2o7^M]mb-GZ<&F99ql@p=](1EQITc#Ob[.A+#c2<qIH(*/+YgVka4r1DKX0LRW!@cUF4e:>>(7'L<"f;<;DAtWm%q;k0<(Y
%+PZ,52TXIqA[2n'K;Vos>P4c5B#oV`PO4IR';'/uCkLnS,$PGE\YdGt2R*"f)V@`k8LE2:[Sa>iSSaX.STEq^-0)S(DjP:#O4f90
%f!B"tAMP-TdnQ$Cn8-iilPDD43;LmL5sJ5]TZL6W(2#k`9UW0Wm?B2r@^`!$Qf$ZJ;VAqCkF*kVG.Oe2J`$'YPq?g"[^EEGCppnF
%QTmPgrOa/>k1_IDHG8@DNLjprr8kEPVTTmh1"CFbhs"\3AUWc9lfBe7br/q[L/`6]QZ_Ls"(mN6QtsP9jo*n@9f?Gb,L*],`nHet
%`r(:&Zt<Mtj4Kf<b%u]CgG8B[Z]1@j45ZKPf>6d&s$%<D.f]1n^UP*[o'cV)?iO#1rq=+?r;6Nmf>"P@(1Y%d(_^W__l0jSN.&8B
%76;)i+/I>hS$JX"NicO0+_scDfgX&hTm&bSOF690pELX=fSuXU0u-(4j$mhgFPQp@@^H/P`-QLY7'GRr!_"B-W]>^qS8*QVC9eV=
%kd6`D6>r;j2.X*Hhdr?[e0q!QGO'_7]`J39jV$GR.B:jk@8_V?(op@3S#Ya1`l`(bhSOo<L^8N.b-5Vi@j=Tr@.hhgK$,ZSFdoG3
%i?G7I>mCK=$/&c,AUcV79e3ugYc;-PH)#!-l4]2E3l]<;&s\\Ul@e5QX,?^,*A+k5F_lGV--i#Bd7R#h.>FW-W*O.r2NeTSK.6k]
%^6rI"Ub_jb!fW;)\m,#M]$"1WTT!XVb_<ks_Qg'TIBHrtSI,u/kf-_@Ket-T/,[824Q%O4:WMmVq=dtfPqttT"dK@(;Af@fd8<*Y
%0037*8*74YGE>>'b-Jgb=[oGjh-WX$;*b4?N=QENjA-!SmK_@WB8&%mAe060He[He/C1(AC+MJDjsM`]:3Xj(REoPu,!6)&r3@MR
%Y>#0>*^IXE5;oQ@?X")BEU)\]+)V(gYkW8r!5(Mb'GYY0piLi-G$b>:eS2#<S1^SabO`k+3KBh%Ao\YXQVodkM'n$L#[*CSPKinO
%=BTeb:Z4$Z%Cs5\?2JOrqi1RS=?@QW^m<[;cYql@9e]ep@Yt;8=V:t;c^q#d1;UiN+I:7QZ\uV$fu+&J#k7X4AtK<'grXBdMVk#d
%j29%<M3SH^OMfA/X6@r:^`(E4i0bc@1.8bAM@9CmDja]L72ABf4hXorctgih&!".Uks73dfaVl:n2ZC$7V;DTb\gneMB_P`*O&/d
%Lk*Jnqb:htCcISo_3P.;KF;66h\MY?36>NOhM4ntNrc3,B-HJ8fTRGB755<?^\md@+?KF,P>KbNk9LmUn2q[J9em)ID8PEXWO\7+
%6)fj8Kr#!_AqB4,ef)PUl)e.8q]tKp`M+].l%=j(?dGI:Sm".#fb_Dn7Fd*VQ17]2HC:A=aB'&pah=!]W5sOK4k-"U+`aNTa'F!<
%brJ\oJoIJ+"aRt&?Y&UF@+7r;/DLE/<t#Hob:pK2!c+.O.OG1Z[Omj?Z;0LB'L)R1"Z8*d3`H8';GYse)slA)lh"_7A,eEeT,JNV
%-q6B0kAqS4J6d=8rS!FY\)-YWgN,BH.s=t7q3g#,&+QY@)F`)q@U%QMVj0*YFsO;p<1P(WA%c#^G0JT2=e;(!UkVr%0?8X</FW#l
%nF@r0VF&_Fir8(EPDVb5R8W[oXG>iU\nI>frQ=-6%$`helVpis0S\\ZPnP;h:>LYoM8ec-KA[mQ>Sr2&(h-BM%YXV"/+(d\*Dpt9
%2;9Gh6WmQ8qqO1q`r3&Hm-Xrh=B.aofCN&=:`gMR&sq%V#^XrJmhZ^SAP(g9+kE]co-2m*@7p_(^,'-!Y7s\Me6@C4SJ[LSiOO4f
%0(!$s@!TfR^T)anqN0M\5AHsq%/tW4g:h"h)f;sUi3m5"#L/hRmH9$NcK1QS%KddnJ1DFmOjGZ#]Ls%8)onAS;umr.DT,nYfXi9Z
%4gX$ZUBT%CUoW?Oi5u+'SlucL@5F-;g1W-0"j^_QM!=#WVlkBY6>a(TZP>1A>!50Wn'12Xg1WjZ\#BL9p:-E[g/SYIEE'gF_nI<T
%ba,pl'djjLQ(p6U!_@ZYY)-Q<ZE)XXSXB@V)_HSYD\<@MZGTTe]B,2C&_6;B46h8;,%!d=Sa>QX?]O"h>Js]=C/=!glSdJ.mlkQ_
%*Q(XI:BF=Ul8e'B]Da)N7!DAC:Bo,I:]h]D&CaJLAjN@ief5)UX>:)L)*89rD=Aef23]s+7j#4b,*ENqQ:!6.91apF>?%eYRDAV%
%;UK0F@46IG&[IZ!@T+ZQI&L2/S^$j\H<n]0KnP0*fr:(E7BrgHDp]^_;N*o:6-\U@:>?5%;%JDm#)Yikdm\3F,/e/)`SU#7/FE]O
%QR;>dUt$nK`n%N.0A80\en/4c*0%uCUq0lX6Qc[;lKU?Cb:EH9$;;HkE7E;me-eW1"YoCmM)VV+"Y635A@gIVG]m>W$V:hI9)s8c
%b$IWLXB2elGaq1Wdc+/F8L*5A#[q^8ad5;n)JqCVGAfi[6o?'FgA/CRkHKI/#1T<ncmbG+$cdg"iRA]Yn+5OIi.+p#:*Tst+2Z%o
%jO<D"nB4qK`+Ed_!.dBekJdHeRYd+u]=:HaoS,<Ea1D%FaBT;53Qp_Ba%Le?&EMI11W3,^=hQl>Z@j3c<C(<olI62-ll)h3SrF=o
%i/2H^a(UFW=VG#*"#o'hR.G&QQ=CD7Z.+Bk_^q[EneP<i?;-G"U,PifU=a3G`7oo$0(!su[N)ioWuC=-Dk+ukI.kJ@BFC"gT8cmh
%XnhNW)\(=F0\mhA2E\5QNMsqN`+"Nd-B[]5dt[.N-p1jjofEDgSi4[Rk%^7MY'h+m@F+:!g1[G<E+>Wq0j8qp@07NQ.3p/I4ZmO'
%!2_YM"oG&Nb?SQMfu`gMq_Z[g`9T@NBW*%N55!iapmLi[(g]r1iSlUsas")Q\PL&"er2]$[0'l.&f6Pm71k"XZeoMlOiJ4<aSTJS
%o!DqG4!EaVTSR1>_Em(#O7+`e//GF5ktnaT.RCDHnbHGkNMDHbAab%0,PD[tR`_0)TXLsu6;ZFMB0dr@VdZM5Sctk^ic@rGo(Zh5
%W9KF936L0)5Y<rk4=%>^F.h%>HPVo2DQ!Hf?iSQ@^]-b%E=ds'LJ`-DYYZOQ)lKDU?f7<<oo,lnq(V.]O&AM`nZ1aJ294bB_Sb-q
%"+uZPK&mq/h-&(".uT60--XP+Z<5U]*?rdjN][ptKVWl[_YCbHY00QlEbsuo>ZfNXF*6HXmGthFlD_N<^<?)1]-(L08b/$D?6+G@
%!W8CY@;M,F%]?LTE7sY[#P#mUdE)?kcG"XF>D`-1#_Mup^\fTHrZC]<ZB95VO)pcN-S*?u..Q!*OCY=nU5m-%>VQ%>rr%>fc"-Kq
%Ff[].SmMf(7]:X[p^\No;Q*%t?;"*#-J*2:Uq8%oOU7a[_)[6dh=2eTW+9U+J[ADVP-Jj\$cs1mlcpaVA;`.\:#*9`cD\KdW,rZp
%1>9)f!WBZG:/jllJXX2;7^52fdS*ugDO';kKhNsrl_KC$c(!#8(l1$rHCJ"'`KKB)XqL!^PDDgC;UnI?W8F/(q0Os%a-1*<[;%`+
%,Z]>uP`A$@1oZ]R/bs6o"Sn_?k*D,QlQ\racnL+k/_M'U:s$_?gP*8EGYp12\WNj&_2INs=@PRX0a%;G8a,S%^)#$3ET0fa/iuU\
%5k75aRsG)Y3Ad7hZ6a[.E`!Fi@aq8P(.+bEPEMH4?6t3WRm!I"Ki;MRP1`n\H0%*<CXuBaM9DSD.0MDMKl#";`_a^gMgC..fVR5C
%OgG9_7/mc1M;L`)9sAtH`s0@K8km^!S`jm84qsp:HVhee5fd.>(+%eX%^jt$p1Y!^)$..e2i7orghDp:2;ukL_65teY@,mkdL:7s
%GMT^8bUPt>7@(Z2("Y`[@'-^XVCSCE\596Kn@4bMQ_]%JT3*t55k`aOS(0h4;dS>\Kd7q3?.a"dRDpIk/,5AM_(NrJf7R]D8H@/(
%\Oq!iR=o8*Bb'Hr.NODUR>JC5c/XK[CO_auL<B?%lo6=7.#=<g.'4"O>)"B4VA+d+TedhmD22Na=H^86X;DRd8X2nBr*tP/Z3t4M
%k@HsC=F_Rs@4Pu0.[&U<rtnCfGF#_AKIVt8aB2M<>A[Cle3Z(I=PDfP6k5e;!1b9(@Y&>Q"k653AQb58+DKER:cn#n:9\E^gKj'A
%b.57TiC]6SM?Kfr.s4o<)Y6EM<l31_$LuK7'mL]um1'S0OdUHhLujrdXDlS="]aunFa>M%\_a@c+qH.uOFJUb=0lY`+>+,.k%32\
%j^/_Qi:ZVN24GP`K&*_1Xo8d*Nm4DmDXYDAS@q21hU&T,[G1maFgXT1_NReY6^s3#[6u.bS:8+jU#:cEL/mE@YaZ2F_(+c>6<i[Q
%Pcf11*D2o=5]f>s/4V!Ha(,@4!HNN#^m5cCR[S!7Y&NS*L4L6nb-,K9Cs>RE*5)]9+tYA!5[n1DN8bD,/:3t^EiLAqHA7Yd$$I$j
%+K,SZf/M:JRP/16rtV9PBMeXt;ICN`WoYSE94F)X(SZcj6n6(OWq*+q:dQ_cD2;.7RpOr%O`qYF2<@/%'ap*t3cJ=n<aopt\!"uH
%Z&@o]%@H)6O<+#jh)IO>IJJaULh*(@eop`"9(Y3>#eJf0iE(:"O$P?Cdgj*,[_DZn$8h2:q&O2"-j6$:ACK&MX<uNFjqD#&M#d$"
%l["kq+ZO.%'+[=IC*;W'(]j$f/oW+P41+ana4p\S3EnZIML*!$#8KbUb7%Jm;$Aapn]Pk"JFSOTW31MN`gg.'<4*JN0ilO`XI0&c
%;s%=ph[4N7=Tq@gYeD/%=4A:#?O:T18G]!P9(YbYLPl'W\lj2I5@.-FfP'$<q#s1KU[jq7]!"K_?Wq?&WN^D:,iU=D&b@=5bmpDj
%Qf"[V$tU5%i=&(2"&_Qs]Ukc^90QTFTorT9ODMZHBMn%P;efoE?SejR$4Sp6ArBGb7=.]34$7d)Qg(M*S_<Jo<T`)hZjHdPXj5oU
%,Y.__6RR(]MEFT#[1(Sr9mrG7`!Z0%9I.V5/5;<rDqD$@qOmqUL!?c%2iI]Ldpm(>i^?-onRY/4cpUfA$JiX")(R)=qUVPclp$RB
%Fs,njILd@XgKd?_Df-Y+I8'&sWqZ46Om9=PD?TcC5?c/-J=OX=(ee2U_,T44D;-\GBB3`EGiXNs)>:5rK=ClJ/9UcjHBrb4AR9V(
%ji$&*s!r<gM-@-rp)`*P/%M_<pjsQiGs)kjVl;.<V+"NgZ:tnce93uD^/K*He)TgWRi\_Ol\_sjrpeIYoojWKHL-&ma28Xa?LrJZ
%o7-=Wqj>jTnTVE'>QOd\Y6Q!CBm>&U%jr:[[*SrL$KA`.aZ])AFC4GacKj]&rQ,&a'XiI"?nrae$gjG),<oph*Bg(uU]:`a3XACp
%)k^(u3DuttGDGY*m.7H@;^?D$D&c/fgGfrJV5rKMfoL3dZs(Br8t?=N#E_VtS&?Q)!+YI&!?K&E=L,!u^+SL$(kh@rm;Kp[S1<nF
%Fuq12D'D"p6S!jlT??Q&^"VuW*H=1&(0_SjWO-]mSd]L\+!"31PeI&5V<uT5^>5iu(Z3/#D4AH$Vbu3piq@Z)h478T=%i:VgV\a:
%-b"$(I2[ocrlYb[(D#0E/DJM!gZQrD^-3Zc*1=7s6\aHH@a:fZP2,9A?K,C*=sRjUn_[K6qk;kiTkDu*NqFq7n%H7PcD.<+/45)_
%[GNf8*MDJ]\S8?D&iX+($.B3mA#!dSQ)>_0]?3P:(^Trn'c?aQlop+EiQabX*!0bNVY5iCam@;A+Lb!q/e5`l5p[t'&T3]N0a=^.
%A3l+&k^?FATB.7We^*Engh?,pTDp\dPL&7^WTHDEjbDO5&]gS^P1R6mC/1B#EW]X6;kou<!Ve4bI>U2ISRo6%)\mg>>hafbg<W^Q
%.F[^b<A>rG;0t&7F3Qjkk=?+CW3_3;(.]*#]q>.r`r!+?Xf(+;r0JA]?4J@_4LO-&+=#RC"Y%O\FUOi$\U43K<5Jr[/6a^.LQ-t_
%gtR2EgFk#2b`8!9XnUm\3m-aqo[XD(9$4^3F-32i,R99E'_Eof*2)aHgo&fbr0LXHp:I)hj_X^i&aj:Oq\4CIs)Q$E-2_/W:Kf$\
%:W)QI*<=,YluE$J%C_\&N[r[5_%WGqgLOfieEF&#JXQ"&f))N'5"?os^[/Meo:F^aJ"d$h]q?[W"cA\]]2G`flX9;5=*";`lX&0h
%VWcLMp*\65knI3ks)R-P>XG_[^MMBnZ$F/Bon3)AVc-]GrlZn&8#4o&f@saY-1Z*T_Zd?<V+FD_p\?I$gg1$fD_]?uTm?5Z\'H9k
%mQ?tDj"`hThBoM@MJ/>)[XEA]SVk1sb3`,knbe^UDYkN-gL@?5=&KOsV70g<MUSQDR-lN6:UmX[8%:G4A&$W;^Pc73.6>Ao3n>;c
%gJ;+6o%_<cBVFiH^iZJV9<#<Di-3Zd]FEYEU]C=b#r$;>RF]0XafO_]Fu""4bAV=@SCS7Pl.kM8TJ`-#rT1LIjA0QqdW>]d(d4-O
%c.M83l7X6IH8Lm[XcK$uVB2Mqnu9D%p4eN@#1)I3O&Q&"XQhIR]d9jcO1_AHX2jGGghK!7SB\59nr['^F#hft8i</N4\!cZ=mLF\
%Am,_+pfsup35(^'[arj4q:8pPb]nIkj6[rsHdF/3YQk6$betR+3gGUdd293'ZbL1bN%/FhN;WU::hD7rHAuPLe<ISJ@E4:b[2":2
%Gd;%\[C/BdZ2gS=fP;:(=r]mB$)g=.=Z:DJguh=9KMI.=W7kP.Y&d_p53\4BP/-.Yq6;-`I15e7%@q2bYFWO'()7nob[fuPC*WJY
%-=BoDhcadpNWHo/hFmBpBtD6WXU`iWZOGFqDtp.%<NEEf"fobME9!*KbQet-n'5kVn#on$SU3qp]m9ROQhg;>&AFES3JMs:_Q<3s
%Ge*D1-If/F_d!,rrO9?SA"!YMFYUR:LOiO$AfjcE]/dYC/CE7]i%=7sCGJ(,3e_HWKFGlgqI((NTb3,0E$@0#)O6OTmrPaFML`MR
%F)elJ6Z(?_)s=?&M,,DL'[HsEHa3#"mlNWa2_4S6O3=MgT%r**TUafo`osrBDX7pU>MQo=`9Ug)GtO<Q@6B!mWXU_JRK=%+W6IAO
%$]/bq$F[U@4\oiZ*#U`IMJJtnRSY4o#rli%+!K`.m+d]_(u&43eo6G?(g\W.MXWI:_EB'.NSLH]9I`IO2-?JM6,f@rBp>c:^il_2
%C2K$-4V/>MG,=u:^+%94X;rSn$eKEBSgJYRNES1T`81%lh.q:[S2L]O:1a/87fg=loi21^(u&6\Ph(fch^I4Q5s#tlAE[%L>YT+!
%b?DP3ciFPi$;MPA4*[G5=1"]9TdJ!&Bk^)OALJ.:Aci9\L_Qn`XQ%U=erJ'5`u*BG>jC8+jYET)ek4B]]#<Q+h,II+[TRG3,OpTK
%V(SoK$_;X;#,coD+U(Q#gt#M\;-q%^]5!H7Ta?A=Ibq-p#YAhR,K6U1-R"=+,pegR-WR*EJB:gm7Z9b1'QbG^l@t-i].`U5q"6sC
%18l`mE]!E<W"Yu2.Lqg&eQpTOo</?h^en$)P&0s5E*\ofp*+'5po5;Hh;mo?@Q.t7*gXJS"KK-"1/qk_)q:YeW'2F]k><TR/POXT
%Lo8Dm90j[b*!R,!dCBd0Q](")Wp9JprRP<s`0:X:56Ij3%Hs<ka#haMR`AUhk"<EJ;HBD-L>-KYSmoU3YDtB(Z]"&I5Ygma+0L@W
%-4s-a7dV:P.c8r;S#'(fhpak\bI[E&QtMd<*;.F#J'.-#A5jY3;eSbBWi\]hrPpVhX^/9d'V`@e$khBQDsF=GFopT+GM`.j-=PS]
%6@c1SoQ_OtCY@[R/'Q4<I(saOD_h47?*i3*S_jKl^n/SlqIFJ68uuYIO7KN>gSHjtHJ\BE=)NfM6g3%Lht;^d!qGT*q`'BrKUdZY
%#s-,j8_?&3r&N[q'\FDt*2e?di:G-1Dh4P@%!2u0NkocJF?lBg&3:TW'F`Nsdm/$5X@Xg$@@G;$^/FK0iLZ>/f-<#gd[8hWO=]W8
%/2Nua;Z&:aUBWDOX8U-+#.mVlp'qBG2et#,+Y72h*i;e(Fa]CP@]*?h`T<UeRg+\)dm%E"ku.(3;0kG#+jY$dIIoW<R1FU*4mq`X
%/<A/t=O66ITJ"hR%^oMT;'3s.=9rD6Nq1Ie];U'\]NMd5l$n(^[_h:t:eR%VC3_4[0\B?f*kGXA#*^+MU06KKA/:siTsTgo@;1Y.
%b'%3NAZ2siDWVC`X)s;o=XD?H@[*usAYS(6$!Yc;+2Xmq.DTkLXC1uPbLZla_Z`SnWrFF.8P'4aKcfVhPRrS<ktYguVqH3D[KO%M
%oDi"G7-g&A%L8KeE7pag(+^9e!A<t^bF1BHam^<_=f(;7)b7OX8:M%'b!_;;L*_N^l=oErD'<&W2!VJO-GM.?%>Xm_F1.I&e]+Wn
%&'h;.Ub`[cbic4+R$^asF')YNg[36@%_D%<GHp$bfkp]A`nPq-ULr2rf7+"2$u$?);Kh!kM7o,&:+/LMd/rP\2\J2<G-I'$a@Df$
%7!>(c#gjYLEr/.^1A!,k,^Z;f51`OX!a0+/+qsFDXqAm$4OiC13Fk&,Q1T6c[sb`o@..lqYn<gu%_N7sATa?1h3FMc/er(;$)57?
%U'L.l8QNN@8:[5#hQO?F4.BdIDiI#hSOlkRle2re:';`;]JEnr_%)kKCH7pl[QrPIW`[UqPt3e[ft,d!DNZ#,9r1X;bqXAODN;DZ
%&o`jZ[RnP#<8RiBe</4a;mjCdn/Ps$T]^hbPMfA(H5_6mjZ!E/'jj[&d$_,,.R4T4HKp+Und)9FD&gjK.W90NOiAOcm2iZRSCVgR
%@b&VQ#8:ik*US48<CK[h!d.-<P=FU-VGuq?%&L"AlSZs^L\@oF*u#Oh16OQ[%VheD>o_I]DBoZOPC&-;(r<>J2N=)%=Zr2:88UIb
%A7;G]7bN(@)Ct(7qgZ.$WoehEHLSK.RU2O:rX$<L-%rL9i%HKa,A,XBo&qZ[At4Ua1_@1\&[,%ls$(l!dUL>(m!$_ooGqsMYW:'e
%^E5gWM]RZe!l9S;&7T_69b0X/Uk-g*qV/LXbh_<a+sM*1==Yo.WY2"PC0O0GMD-tJ\*)Z0$X/rOP0bW3&%KU.*k-P#9Dcu7C'Ll-
%I<qs_^\a+?8F]!1m:BRr.U?l]pF5aE(X@E^%82VTDi>4FlWVf`VYA)t9pGHnk+<59eV-h*&sN)G<dibRH7ci@[B]%4-$3Qj%o%Ou
%;,]1fq$-XZHTi\iKXIZgN-IRV4smC>EoPE$+r!\D>ZFe1hQ]">e_I+":S2NQ!D]2(HLJrh:@C>m`gqtAd\EI0-a\a&$=#=G8]eT$
%BG4uNUJri(=\ro;0<lPD'2^:uf6SRZUKm3r!n/fGMMC?eLg46*Ctl1?e3mI;i_1=F2Etrhr8nr&?r,Mp!pQ%JMpBfMWtQKWdUKmE
%4P@0?'_.<cP#>7@:InsMgIAKVO85Pt7;QS4M?VY7;luUFPl2Hd,>LVUT/G3r.D-O3jbdOE&W^_p5<LNTTe+3Y2OT@abEQLq$rY#,
%j@q);$;u1^Jj[-]B**s<HD_US,R?RVT@9os(*'9pCD./d13=Cs39$JC`,6/"-B%,NG0dAVQ4'hl7Q;d@n5Ij/:f0SBTjb#\K/aM,
%m8NO.6;X[am<UE+1::Ci>&-^VVO$".IS>_0f]8m:Q^#u$WOQWHh4&8.SFFYLog*UKN"A.s;jC)Aj\6[]'7M"JK1emGdLf3\[-39J
%Wa%TG1\ifu#&^)ng=8S?^Y%q8+tZZO`'ijgF.?^,me-5PTnZ22'=.IS9f%Lc&(!h^&8arjO%`)bXm&ClN7E@tL@Lu?ck#!uE8aG]
%^*[qR_O?<Pb9uNGVn_Ae6ShNekjcc)V`P>*[kU_u/Ol&M*(3PM(_[nn.dDTTgtL1gq`H<1eYK&(Zlf''F<+OQS#,AUZY])PPEkZT
%@9f9A(7ea`dr;6gcR<?FJ0ds"X)b,Q8l`pn\)(ps2n"/<HhoV3j6k!rn1&_tfCh%I-U)VTJu_X'EtBGMqjm_#,9F?L=cO1LU9]i0
%/%RpA`8I*^Ftp]IR=0;GRf:./[\p)7a=dOHT&DO?&58%WG1&#</QgFMMeSRi"s@I(3oK^u*K\8/`9Y$&f0P2HYF2N[Tasl?LgXFi
%^09TR0,qH%AfL$>I<",2?,4U!SBH!eHCs&3[`=<M^-?k53Q4<i]8D7r+07q"Zto:JaD<BcL1lLm(Q<Us]C(T5]dO`\Bm7,-I@1T"
%'>`uTMmJUCg72GWT<pZVH%4--<:tCbo'A<-Zou%+EQ7kAMVt</fd#Z-/^SD!S?tS);k:?`qqWXecu*KeZUE-LV3S97&!E5"_9RbK
%g]^QqWG9BS/p(AtGl'1,e5&J_jgf2RPXnI<]lCR\@]/FL@P3u#m8q!&J5fF5O'5BB?^uu%MbT8$?N0L7]3AH<J9=)_;k7cR0'%f/
%@^ReYWSZ'&;Q5*)/'*G-*C<[:Y"t,a,"8<bF^:_QHJ6%PC=bGU"/uE&79d;^L/udO6Nrr1Z)c"@$,/.Tp2(6\K?e9fk8Fm/BT]Pj
%EU:OG^kS$9QtmlO?AXgXM3fQk[S6En`SAC8rI7?a;C71gX/4/21-\ln"GHXJ41!a[>GG/^<>80)[ct*,X_(IA\ENp&*)UY4nB\r#
%VAW:_&iib/c#h21[^EPG=>1G2]@SlC:.,b,2FC;c+P/6i[HiN;/lG8`4O1M%GI:AY2!*6m.S'K0RYK;F8.XKL;FTeS:Vo@khDVAR
%Oel?N9+4Ou7U7*,O_p*cY'.B6UBOUse'"qjBMqK4[%b\KTCc4$o'*8E\9H?."!XUK!9nRmV[3+_*AP:*bsg^F-B2alSPi&r[C:GP
%k\,<V3%Mo4"(t&8.'MGoKV@A3$pPBcQ524o^*\ctbf2)C<F"o@ToI8C>M*3-mbraIe/D[pXtVDA!#iaff(s-joW'q.HGV+2^A\IG
%.Eq@3h$hZCdWB=_r3]Vmk%"Pk^f18Vj=,q7'8'3\dbQet.T0`?s)Dc5CH]sfO5`B[$E6L"onRmjW7@-feojiMoor.L@X^AsVO67f
%ba-Q_Y0&KWPM9qq!B/cD`!i47G$snp1AgJt(E3!P8=+4.VT/Xubc]5O&EeU7fk34V=]Q$'E[]U7G)Bc$f!d/:H]d"U\%.<C9%7Pg
%E@DE8F&?h573i5TDE?#YgifD=_D^f4\=IE/SgUD1'^!!OAXp4Wg0F>&cE;98fpmBXT!g]QmaH?W.^7BfB>=>>mF_r/;q@j%r3ZFU
%29ADtZs,ViCf&qfB<BO0o,0WsRoq*jd5(b*\`7*MF/:2E#!k,C)iH\u/XJ1iOu$[3\X\L$_)X_p,XLU#>i\LM1#6$(/h7%,D0j]"
%=oRDKS6g#XeF`<uhq4Jt;9*-jCBe?&.0D<J)4$i#Zr(BW/G>_eC.J=Y9He+r41.10?$#it'gN7+gJD1PC_)[qCMM9;[(UXJ9>1WO
%>aXr][SqSUFc[[WYJ)CMII3io<%);k`9o;[2/7rjOT2Mk:fT>G851o8Wpj&^)7j_Kf7nR^A\m!MrL#gW.=$RO7`AFp,J%Gd=K)B9
%F]CV+!Nf9:ACR#I1HOnn/_](In%Hrs>9/`2VlFRmeOQembFAl.gm51HK`=e:ftCK^Ct'*KB`Y>X$ME+6pX`_K/"O?3O;"f+Q+'iZ
%'GFm7/rPk)7;UQ+j&G8)(;iPcdN9.'C!mG4]nF_b5WHC,E9M/?dBV:bp*OnJ,;"??GZ1S*IDGNf:EFNSHoZ>j?$f2VDCbf?hOY2m
%<9OO=,LD_qAlQr=<%ZA$7?OEuVN@h1/>gFA?tEg3#<2#bR1tWW?"k+TFdns@Z5X!d].+L@<S&asTN5l+:pO?Km5OAsF:R:B2Gtq4
%8h6doJts,h:459.q'q<sUr]/d`fB$>YV7RcF_d:Z#Zne0ESqa^@>AVj%R#%B*+OV%Y<AEVA>>Ro#gd8DSGPnRJ<p'L+HXCBkILeR
%gjB"5QatLM(q9GVp;5b<,m<'41EPBX!\`S,M'FSNg7->?W=Gk(,$61.LXOsn0<e;><SUtDi_a(+m$D'Vqr19\(K<!m+N<gB`Q>fh
%78'mp1$mR$Tk5p]:;l&q`HIbn_aaq`"[E`_Sm^$pnG0K*YhlWDfaGi(qW-n<;LSChlZ\s^iVF.+mYndOOEf;\ptNRUUjr%q4GCjR
%<EnIPnd+^'^7)!X0qVAIjBH/mg=Y]eK-T*;@OpI<?/*>m\4FKr&EM#u(d_T;]H+X)iLqgDZ\uMY62%o*MLSYTbP!Qc:6_&Hp?7Ju
%?WJ"e&G#ap,-3ZA07NHc*cqZE2YOWOqB!j?U&0</)$CHpPpD9Kh/K3EA;"H8YjW\)1bTW>@=F#7b^fCEMp#2VjrZjj$p7@LUVBZR
%)%rVH&u>l5%T3\^GT,37p[2#K"oa^Wc2K]S8:^"!T+1bMW1ZIWlkOhVXk:c?b0E.M#,u.H0f,Rlr`+f%N>+KS,DNF#S)NZh'u%P9
%$A>C&N?SbhPTgH^gaZ:;.l"D]mL1.KfkWHb494:M.0eGCZiT&W_`\_Y<"IL^L;1I-HiastT#BZ!$qTWT)YeV.Le=,h'^,Rs%%a`'
%Z\dg?-l*5`c=&H5)lZ,lkXmOPV%[-=S7;7!I2L@A?!',Sg5kCKD^C>.qo`F,#@^:o^QhSk8d7``i_oqBc;m/0H'4eaj<uNnS;W#!
%KC'ZPo=^_]'5]%Ol0F&UQ[QRDmo%K=>1[/hK6XK4ITJqL%2j.]4!K&@a[##?2_jhj5-/I.&&8K=2oOCC67Ol:9E80pKV14`U3T;E
%7umDnPo:H>iK*Obkmf/H6!V4*'3L-A>5U'&rqL"%jr.E\Btfgm(VPsok61tAD[r,Kba"oH(U$rKZ)B9>A+RYu<Xqgir<S_"IAZrO
%r2XL'nbLRt!u&-Zer#u-BVPg`=Nef<43U1:Ug;c\(9O+W=f9c-f+p=(-i`OYE1i_$G14]Wl6!t2HRf=`1G[C)*[q_n8pDbATP/?6
%$%.W]g+sQ,e1(bu`Ycjq2rHWc+_DI@:faB.+>t=]m*lA264-.VThDAp[rS-7p8\+G6UH0q#F8IjXm3$L7J(-ITR.g7=L1c:dXWIG
%\\JfE1,OeBT<)ion@t/thd&5bc6*R_E@]cBJTCu`3B4+&,5.ef%Lg/=9GA8=)J':m+IauO>>F*,4JD#l^"j@U2*."Og?d=aqlJbU
%2kMoi<ILDq55"'Ek,7'`g&ULK4(X$;V)i7BlHL^$:u+sG%FKY!3E*:h=f75+'7k,[W\n<)]mN$0WIC7[OJU#R<rb@^Z<*2;g-uEC
%SJ.0%8*<9<gY_U7Z@L++_-nq(5;"dM",M*r=hW?7/</FW&6SN?hJ"j,r!&pd*(^J*1o;ge!YUS6pC_Knj31WO<#Oj).0m+s+h:PW
%WFiDaXn^`r`VEgtG6pS!<%5#)\U#ojKZjaU,_e%g&/`^CI7Zn/dA'MU>hEqZY7TY8W?Jjep9+X!Ln'G.9=6L3;aJn<rjTD_WGrW2
%,:F#3W::_52c>-6=U[fjV,MeHT411T:Fl:Kd)<<iC`,GFSh%se]cS6Efkk_V"4K1k0LGsTefUr6oT5!N'tkEj8!c:*W7"KT;s69+
%m<!7j4OI4T[L5M0i`NPd3%*JA@W<:O$.@9h$:+(c;JRF+)d0np6(<R1[$2EMj,D@]B*=:lS>c?"=X5,jDh60[jN5?ejG@"(n?SF,
%Als&RNB\o$(&+lQKr"f^rbW9l-/.U$H2jtG@_O[lYEE*R&C=kn`%HO$ctXdY]Qd.rTJL0P0q7XGeP-uVrd\n?`gFHo9cMkkRTG.^
%0?076C!6dY(Q)O@1qN*Cr@LaLNq%lNar.t_VE*=V&cDV(7R@")R!lH5k(p">qi9&8`]Y"k'AQIT_J5c^Gd!RMPTlS$cp3f'b[/u.
%9XB'fB&E!Q29B1:Bl[MoF1"ff9[+gm/TV9;-J>'Y+PDVBaD?`WeaEYaj>IFQ<.Xl&'Z_i]1`sVI\\8``mrm/><geuQ(%&%@7BR5>
%COsA38NaDla)+30W#X\=rKoZ"LisC-nd(t3mA>l\pOo$EB7h]4Zk_9uqj\\,.d45cb2)5td;en@CU@:eVsI8lfia6?YLZ:7<:<"f
%Q0Pe=D3st.:KjXOgcB/=T((>ulON)<Ts]LPeZ"ECb0rL:p/%bDNM>)s+Vj/1jdDp4O$G>*%UsZ\9#`gX&$q6p'5K[Y<H"^<"h)f.
%cRa%/A>[I9,$5!&1jbTfj.p>/YMQ9n;qQZl@g\'U6AfUh,:KgV7%:VsMdoO8l+Mq`N$>!U+0ctIP1M]2+dmM.C#r4Zc(T/S0e#2a
%9PJ:QIRVZ>M&)dB:(a%Q9pDX2S2cdJc(N.gC-kmfa.*Z28`)q(>fr_LIOhbU@i3_05X)(E0^A+KBaZQ,rp%!L[(K"\3s#`4OY83;
%HikB.J^GE1<Et#)W;b:[GHUF]6;#dOXl2.h""EkJ@:QJlK,QVAeQ*p'$aZs\XBC%C]R7Cp>TN8G=&M<(BlIK0.iV'/h-2\0Sq7eq
%:Wu*P[KU>`PcZM:&9eDob<N4"Z;Ta;LZ3mq3<.T[CZ1P(*tW`;%UY#k,pKt\q$#<qLpJHPVM,XdH6>GhG%i.7BU@tO0u+!D7:oDk
%7u-TL(f:]rad=t;[U@L3,3Qu%BI75U=6`cNZ@!Y[`o^oJMkL>bnV0>2BD!:3?[T2\f2lY3eap'KKHlN2X^'mA#6.t6]h;;n?<;&S
%eqL0fE4+T=eJ#!.&$UQFlBrGo]jfCo46DM2i_*n@lfnZ9)W_?J39'm"1*MFNQN=3&>A\RD6ML,(GVF<Ehf7oFe[N^6/JE0H?Lmr!
%:Tk/7]Cb_8_l^*7oV0S_Lqq-uAQc\e_2bMC?s(@n97(/5A/g@KPTu$8YjnsKSt=8tR<RO[YjYB/q:na0NG(O5Ls\B!ON#,o1:)=R
%_T]mP]!qiA[nOm)9pB/6e!gj8)a(gkrm-$e/7.kUs6q-0rL\T=j0/LZ5QCJmESRXd_HfO<e'FGnHLk9L=*<%rF-iBB)nb5!F!e*)
%ph?M4oB`"#gK3^*iN)^E2LT`JSMkroh'^J)DO$bLJ?Nnus,6dsL16P6Y_.l-1!;dp`j_>KV&59llSu#pc9F"9E@m1L^OQ4^poj]C
%s8!g(qgY6>H2>i_s6[RjVuQYOaWLQKNYhPQJ+nHjm2rI5oBAJKn/#ArqG`%[q<bN76NTPJfZbg5L\-JV;'.>=P\+:mV.!%3,pao8
%;e]P3AbNNHc]!N[kc/S5;RLA>;ILmRUSNG\'GO,9G(rnI$Ajk_@rHO7%!7bB-<J?Lq;"(E9d*nHaat7Jef)KBmLDZ:CC4OiJ6&)E
%D0k82dX,]B#7GF`d.?thNDYII=r<rJ;4jq9@"MR+RCouW\lPp\N^N"F#u#o$,cBm+>*o.0NG;Mi3LXtMeb=@mdHBP0[ZLtM<rI5h
%ZF2aP.&F\OQ9?qS<qrosN'KmV:$_6os-,s:QPY7u#<F:"'2tt*^de^-\NH_kG7b^m!9QO@A=m%=01H_1S6G=UZ0[,o8d]"P0:1+j
%F"O<n&jl-UBs.0FSi;):%63T(=e"X2@sOu>+T64J4>E,L(A"7b:&`HicJ0ocNP(m"g]B0.+JnP*"45(K')?RKUVOtc-%M!&mUW(?
%&Qm"qWl,o`!3$N"&AGL?8ofqrR;j%_Xc,PAr'D*kAf`>ORDdZqW%:"nc-#dm0TS#3Cm`GLe58Ri=#l#(<Yu0q+aZUJ+B/ZjMW.\/
%mP(RSoQR7NPc?%g:4)oOYX!sZBpks)."SQF3p.ASQmSV01as.-7nB;[!8qs%@"<c_"4OT,UekU;ksp"6W.hJ0oR^G8.T3::#1J,?
%UBSGbJ+0ut:`U3HXL+\;(KoW2;McYdMlk,eD`Cf@H,^@\;D<8?=UNo+4\E`ucmKGleo_).;+Vf?O1)WG.nC<L1m%jgoBp!,Gj!h(
%V<X1IJMWB(5c!WBIG.Pp=%#JR_AkXaC07SC3M!I['6oq<W/eeCS7j;'*qW/`KnsL)aJ5BW:F3bA49#+[T:8:q''`h&Ltk['JhqJI
%&lj]UXkq0i"b5,sIF<t4p-lC\cZUb,U7/LLTt;&gVnM1_Y+lHXhZMP/bgil'R`$TM@Zp:P/\c]K+Eoot)c7BuK0IH1"daV;:t##<
%>SGd$W&d/,g2E_l,(%:SNbd6),fl4-*i#qm]DI_;pN@hSZ[5U;Pd@u"DVj39d(Kp/Y)@4-6_qXl0n"<=$C-r1=esEE3A'I#9B[GB
%9:kV?P$9,6dsZ.<]PuN'q0fk>-Z1Nkc3jihnqcb^-26+,*Z&B";q/c;Nj0Rhjt^n!Du1pY&o=WaZc0k)(Pm2e7p/a68aJBSZ?U(F
%q"#3lZ`P3'*]Lonh\8">X@u-MbM'OadpQ7B'Vec$9Ek*u(A'g^ZL;Z1SBdZOZcAd/$VGT.&!%Q_@T%*d0FgIUq3HX3['"rm2.Gl+
%Y;_'(R0i5=\F_U3mhL_9fik-&@@X&RnO;cMHm(pu]ZX&5J!@Q:b)3l-d-H)_q_0:BpkL`]-I_-VYV0Lo@2#HL^FBIQ1N%?Df]T`>
%+[fjNdWsAgdng"5_YSh`6>;4"?9?pX:S;r2ZcIS&RiX)%[Wc2'72JW+nRb2:#DolPcD)EZj[-J4EW'U41p(U`WdTjRPe7$7ZH%./
%PrUa^8]3K:'n.dq^2Hj'K_!4<"Lfo;e`SEV)dJXkY^ndL+q\`;JUh=Mo[r0bP)#4@#807ss5%F"cE#BAQt8AYbJbeF%c!6'_aXDU
%QkYL-YbX]</tLl"KR>Fr+57ilJ(_,3rSe3.X/GfFfPQRg!=Tf"\7M_RPO:V0'jkaDN(CgKh*%_+X/YMg\UA:]*<,%d_iNHn%jB^g
%;MlaVjSQ19*EW5F)(:n>>!IQ&NnJ&bi'i:5)6W,F<jt.IY2,A:&ri+0[1T-YNqbjZs'2kB5&f7GXRf_j/2:qA%Foae2rUEh?#n0u
%Y)@hb/[b)g1&TMBe<.X5QVQp>r0%Fe^&)nD<AOoYPH&!h\0nETjc=a$X*XO)e>`]Q:+',Xr,G5Q[<oe='<Ku;5/jPtQ'4ejmcU*5
%Zg,f5'<QTTku?sZQ.e6hFB*1-3piqkT1ut5;X&;goi+St69Ob;iq;koIs%c6/LqV6Nas8a0Xm%%d&%jJ+HYl'Uf$YIEmshMNG\!-
%Z=Ng=dPirn-iI+pa7.L`Y'mKUL#^c;B''s"jT]rhiHG<B:EHDk:'5W4"LjIMVS^J(ncH]A.`VqM4%0GK3qlIC`mqach8+Xjmij-:
%GD[rfA.Hc=8n(>D)i\(g#2h+3(kj+IVND).XC^d)6nTSpi#u3&if-`V-N2W&%%QH](Deh,9?r1h\DE&E\46MO1cNC+Ks>m9J/XYN
%TmoIHb*q_-r)=i]%]Y.-WN1.!oK)#3b89fU^L2"'/W/t7/"pe=Cuap:HA/7;EOr0N*<qY((=@=_7#dKnL+K(?=e`!1#d*@lPiu=.
%F:KX*W&Q%LU;X%14Y`a2Q=%?[K[G16!s_X\^ed][bYJ<Z;W7gA`itM[4O'3J#t.b[id$YOO`&A8:Lcf>5.>c.\O+"U/jEq=eMfBI
%9J$/[4metrIEJk/NL9P(11YQHUVjHq<p$l*@%33mFDu7]a^5nP+kgTWlCF>\j=#Pd->XS@BY:"/L&&54j1F@hr$FOUkgE_(WMHLL
%:rKSK2G0llq`&1h9o^)O<D;4_AAC3e71a)u9J>(<4$Dt#baW!VXl<StpN@50Eb.")'b*Z,psGMP-J@^4%cBq8>mlB5Y:/B7QE;!X
%U7:m&gEs2'>SU2-/GtN=doYIt@>+OgJ3\B,6Q&f8ZR1LZqC[6p<jE5<IojXg388Q?moH_9.+i""AB)^OjJ1OHi?<+ZCoVUHC^6GR
%_$9PT7o;e^oaVcYmJYs+e'Ym>!d=E#,Hsi63AXLXmaHo`C9NhuT`4LbA$Gj)-dBJFEh"ok^\i**,ja4]P=AuiF\\BZB=ns"nH&*[
%3.9f)G$no0Jq2#s<8/P:/78lmD6)`4-X#u,#&0=-A)=&=>$He.WBg'Zd*_AOn&PF.V&Rl0!%m]9PPF>RU"JBC`u"el+SS8OMl-iX
%)oL2=n"VfK2(&)#5_+mkL?'3XY%-IsMOfhKn-4tf&t\O!L$DJ3rMnD?>c<+N,0\$Y81c_HU_8$02;ilmYe?2$j6uW`!&@pa<h5H,
%4ESKdXpR%q?kZ'Y6=noi#m(Y$4s@l\>Z)>iFk9/?13<#8U.tu=e)O>]LpN=Dp><"NhM;CJa86Gd0FW.K>/XM#*&G58*:W[,Z1g12
%!&&Pfn,i\6"PTUik@234Q0't?Vtj)WlWB)!/kdSdZ!sku4P5I<BmTrpiJD93!=e"!:l*#NPG]EE^;`ZX]Ht_:X@25Pd*/nsb,"NY
%,)$?bU[OieNP[,Ai'G+KS=0b297.e+*"bB-,iTAX-;>+JWsZ-srNc,D\M7>l59nW91get@!&[_:*Z0!0+eb"jDo4$/0[o#5_=4@B
%CAsC@2rEmD%0h;I%r"sAE4:VP'\qD0'(0+#"+/FS'ZD]-)fqE?baUXdbfF8T?tOpf@.<9<)/3ddQSVAn67s537u)^e0gVik[2f,M
%R&UZl#Aq-$]0X2"^@Pp9PG##0235*hEB(n6.cQZ[+sT*8,be*t>PA,6`K#&Vj1'n>Zb^=%)[C'Z,(2[6Z`8SA'QZm"r'7LEP-XjA
%eqpu(o4Vd4SX>0&B<4uL7J?X(0fYO,/IWG\o3EIK[XrpW-TD)o.G1b5f11"9k:0Mh9>EP6[g1//Vh(boa,7Uab^NX8Y!tNW.t.d>
%Lt?lBj4HL"c+Gbm48k].fo&eSR@\`kT//Z2GF^WVqqWV/cnBn(@=iZWSMW[F(--)`lJ3fs;;G+t:!mtL3FfE8=m+#V;d`rI?prUo
%][2CgBUW6;YgC(4hZ81B9/[D$n@<,o"2dJQ;X875/?]M83q._nN8no(YJO#Sq01T,NZs&r6?'MD?5qUE=PeT\(NbTq=mBRuUS[_,
%pJ);'8:c%ch+<Wd<7K-`'.ie(>EXC!EfX7Ik6PYWR/9pE^mGb?](kdekDbN+0jJ"4SM%'&$;;8fJ:LL!m`).Y8-A192Dj33V7O\+
%?n&n<^k%nM-Hu+_rRPZC]28e"ob7]>IcAc$+-?h!;S9:4<[!>_0>[oZ@h6:)_?M,Z,u&E](^sB/`cpR1LlT=2H+@6#J\&]oC)kCa
%17*ZY(g"U!!>G*86<^1!Jg[=Tm:A`l.#/B#,57jj8.in4+I[e+SP.DM8@UqVV,;##<Y%l'61hD3nu%1C=okmQ9>E1\<*4Okk-NAZ
%P=#)$ae\Ru3Au:)j\7MpEJ&TqQc+a>A:]P"mcKZl@Bq>rL9u4-Y*&fsdYjb$j1gMQjO9r:HZ(Nnq/05.[-s)LP-&3"OV;`\<?ddj
%6p"8p^VP`n+a6drUA%+KbaY;</R9[;nW3.`-$@%aRp;,'k^Y"b_F.Y-TbZ$eDi@C6fS`O/gie;1Dq+*lW.'n$9PJboahB^#"K9_F
%<CJ4g4g622P=_&=?fZFW<?dhVr$2MN2Lag[-A@t\=H2<\>uM@s:>QX1TmKgJ56Od9JU7')92P(@D$tggj1I8Ejc;Li_>_jF/AeOr
%cImkcF.BWFF^(BD$bNffdPAJkAQb&le>]FL4AfEfUubadf17QoPA+[p=075bK\:uUl-=daY#;_XOso$]$p^qqXMR1cdnp#`)dH+c
%%^dLI!Lp+>S'#AP3"Lq93HU+"TK&iY"c6%,-51.J;A;D3Whr>WkVD8&,"T6UHcWnif6DRlSC,o20nY]^N)6':h-"oqXTp:L*jFu)
%\rkVF\lC#ds%$s!-sjJj]Lp+HNO!t6mgMgC6@&<d"&MAYCncTgZ[h=99814?<)<]3.ggpq7[uIGJstoY\mYDYeUG8ReE,di&,PBs
%J,/.&E`3m'I_dlfXXM#6aT6A0d=A'ZU8nlPp8!a]bXq-&h'12)8SHG:.e4W`Jbal/$hrbD4-ko!5.u3M3%i[.+2MrBCN,Mp>7:&^
%JcU(b*04g=U,iGPfcpF?HaRY'?o)07CfJ63^haCN`=f_ldJd#ACcAueQ^tBeFfnn*RhkrV]N,\A/0;f#L:WrRnst#Rk`R%eiI]\A
%Ufe&u;#DDig#V5T5SM=FNi3fOC1NH::8j6(H6?Y6`dp/ZEub&AHWjtIP%W#+X+=rSHC:?RN:Mk<37^bI9(Eeg4B(,/=DIWK<2(=@
%Ef9J#;j)rh$08V;"X?Uq8$EL[`E/cO9P2KZ+P6YuA`rTAhM9d>+f-]o$mr<!UTq_SC*4RoZ9;4`Z3O&acls9oig#dO>Gh1NE@]=]
%P$e3ua-Tc'jKplAJXhm=iX6)rI2$b45c/uE=LL)Lo%dK@XL6BB]'$hmRQsI]Wc2=#9aSq`(W1#U9.6!`%<]B!)I&*48ul&O1c.W\
%A,UItq?De=01AGtd1_Bm!/r:/,oQSHj/J+[9?#p2H0j,YAmCYR,$Aht0btYV-dnik2_ggl(=b)q/5V9J5&AV!Ehh*bpbGd8/_hg6
%AR@TUMJFaB8E@DUGrig0``dZPTOXXS!MmDWL)4VC$Io3r_JJZuP6Wim]0r[E)0qajWW!+Lp"j[%;;g\1*,t2CD56=e/eP7dTh(q)
%kUQ$YlY>W:0LT%cQK]3^,urg?kXb(,8B5A>=<5hYkh^LM7c.Zr2)1k"=X(U49]B1]_-j<"O%4t'b=^M_@=V/e[IR>&@eGXmjKS#-
%l'/+@^s]o4F;8P`]Gt*_qA@#WL(<7<'\S+4W69VU&"V-'[hg:eWR1lB[Cg3lk$X:RS,B9p?5i3X^tZ0ccKW\1dIG$-o9HTQcX],H
%f5P-&#..ra^<Zm8+r:r6d-8d4=Xlu7]*BKp41=9Y't>&KL`4co!OB2B%snleWRB"`2j+,+PU.V..Gm:[olo4YSQHFj$=-?$]3BIj
%4',unB7S#Lnu9[F[Ti=WeO[e/#2oI7U2.E=SLK;t.tc$a+aFP+OD&9aE=Rn*`DVZ*ER`(gpM<i)=Bc[QPcjqWrCD+BW!1ipNL]+F
%BZfLQ/`gj1aJK=@j\:doEaX5-)J<.mJ-Cr!j<ktH"gT5cnEf5LjlPb`$d=Z=Z,FegCDL%jIWCj#([LD4dIBOcCD)_i&C7XOD20O[
%@`Yk*mF;6>.q:+WK!DtKYumP=q8.qbF.3b5MEnV$aIeh+9GuYm+P)f:78>Qt'`9:Hp)DS54J<#kj8o8)$>El-p0fN69#ogC;(\u"
%dC/H0EQ7Q]DC:rFQc3?lV/Dsri3pfpb`7@WRCDR%Ee)XF.Rt's+fae/RV6'gp:['4_$%G".1lq+GkVHcFqRe.YOC]U9cIE<CtAf/
%Z5)\O$[8GQS]*FAbZ-.TXb*saEr45&^X=,[C?qs*An;:%5P\_qDoahmGiJ"Eij.;gE+GH@]L$C,Y^,D`#RXIK@U@&"B&5Uhqp*n#
%:0?u:]ae-fl%,M+HI.Q0R)*8f@BYaCMp%HeQlA#WHY)8Ir6c`<H:3/(oN"CDY;+cQT9@eHP8Id>O7tuL`P4U^7%B?UZ,"#bIgseA
%kA2Bti^6`g5oQnQRNrXjU6F?"_]@U6@-ps;+'/JLG>;W.('4LQMVI7`aC@!"QGH]>@qQ=J(?tPR)Eddg4/t]E]4=$L0,ElC%Foik
%h1t1S1$7qnh8*!7BeQS$j8Eu\g*t8uAkob$()s?2VR_VchW/&^'Y^WYR<9A[HXJY#n@Pt&)"[L5P7iO-0DfiCh$b'H+`;YH/.q^O
%@P!GhCNjU->YGISZsq+97GZ1NP3E"A73fHH%f'E>g<%rPEP&ir+!sTTKd_)M7+l**2@6*""bUt*&1eJ[h7*D<bVm[fN"d1_E`m;R
%-4^JS^,#iX'P:KeG(`m[d?QAPI>gC;Fekf<V1&El:6ErK7LlYHiq@@Lb*D':;g@atD/5s9_m!A%a-Dh#PLJ*@]6R+fpCrIu4h8+m
%=&SnJb`WljQanCO<1V;eWFrT%?W-aB$krC'jd7mkE&Pmm!o:sS5sC]N_GT+NR\67q2T_LOq'N$f1JZU!gRJr,F'0m$F"d!8*H3e*
%oWonmG-XrRkI%AWcGZ7D,1;#P?u]^][f9qt\I%nI+Pf%1#c2Z<BYL_"KH&ogqkrt?MCH]`c1)a*TF"9clqFeX75RqRmHO%7)2.*I
%9sjFSj"^LTQQO[;9G)4[%7L>KKP:sTME"gPd#d`j!2_aHAp$C1NQ_7pTZJ-&f^JI".dINjch(FoTP<9Pm.KD:MZ>HSFahOW/:VH0
%N>ELoR9o^[]@uG*gph"_g=%$in:*$HkS-k8.tFX!R+%JE1j8`fPDJQJn.*<(0/#(fPV^*cAU;Mon*s>F+n%6bHkib@4f&oZPMQ.8
%K:lBDr]Yrm^[ZQop;=lT45>+FQ4#5nSsJ6P$4B9\4ZtiYUC55gpR+!AB7A?4_"ec_bM3RQ)O;/*Pu_fZ5AF"q^Glh'(E8F(?iKU8
%a0u;Nd4=e9F0?#B7F"=en"@aO;@irZqM&-Lk%usha6&k`1\U#0>Dldg-[rMG/h[m/<e=O<C/@sG3"`&))is9&^A>51]pDGWIiIK-
%P9OT=/e\6;jDq>B#WdM1_!S:-1b"O&:,jkQ2_QR!)_!Ta1PcfCXN:6pH?S3gg-S-Y]34[IGq,i.%?[d0K*65oFIC3d"W8i7c^IGK
%hcs!UGEXUUkYRc+s7.C=CWttNIt%:X[srl(YOLrCHRrZW]B4n6\X*X:>16/F>MAAh(eXE`D6?@P`<\<H7/CtpR2%Yh^2TJ/QJ*d#
%r/t"bNO[d4*E7"Y@g*1j!%937FCb'WnmP?3/WicBEtIjSN4Q6JRU'n<./a;NVufe[`8P[n.Je34X=:Z)'Gi.[(N,&LT5b]R1I[(<
%KQ6%kAQ8Y,dlTcd-uoNYoe0qT8R^]P?C!e9@cqs-.>pulM1ZJ*#;pL:VC]5<'*n8Sgom/t@u2Zh8AWs/;W?A\C;%+cc]9FP8M3W/
%6_`_.:l6>F?fi0a;oENq>*2nVS$cIH;"2;,<q&dOBaX]pYcqe:FU_#%![!?KBq?nm%l8n]Cj'ijM,dS`Fp$2]$?Kjm1::/!,K?S0
%L:<#?.rW<j)$UfN<mW<3UXk<dr(5$bfis$$#>fLFM7V<LB"_'cq:'f$$t]stDS1cl#d&&FVcQ`7:=WctC-FfPGaou#YoYr@WTnmq
%$jXn,?r6JS$i&-,R]e"i)a650>hGDMYId9#"?o7A'/3BmQJjR`!`_FQiAWa@U"-M^7;:4j3mS:t*!.<n\n7ce<`g^K"b`jb7!'AA
%;oQs;(mieh#0nKBR"f'8O9R9E5\(>U=<\,L#lJ@@a&@P'2>5FuPR.D:er&>jW>@#,,3Uj7hLl2()H$(T9L:1a!3rHCHn=^XYq$qc
%$k$qJ*)j/WFiVK(q@'!D;'/?#6Qq/H@Vj=VIO:D`Btr#7HASM!:IrU4%n9R-=SY"6LLp+/&<s9'#uo^g-*$M[KEl6)GF$`uF>_nk
%<"b%0`r:SL&Gs=cG\nI,Uu=[9%tGXoL(T8@E%3!5G.7tfY50d(V$1J4afnktrqd20<(?(49\[KhKp3$l[@OBf\kB?P$eq23H#$U2
%+@P8,C'QDjA#JX2"?B?qVoeYbGoa_9<;l5+=W3\lI;&9\^lugi1.ZQR_56UKmc\D2VGi9%,"6Y?n^Tt*B+?U>LaS7f7C;R86`^G>
%:E<qPr]#=f!=aAC-j,e!jC-W^b2qR(WaD;GGqME:WV&B1HF%$4=dS7EWh1`(>SO]3L/>iil_5;(%9G&1[A^&`ka^;UTGn(&>&,3C
%q[CP@6J%dr'n3!m98_1p1+a"I)M+/jm+h6'4llnH]Qur#S5sUaHsXeJ;XZg*pSRWO&'C<TPSh.^XZ1<9O[?]g^e^%JIh8sT`G_-h
%^h""".*#+q58M"B1(BPn*bX4TZQBS50Pm_b()\I?-a0`?ij]K5EjA9']H2ge-a2,dF'.mXAKgP<6.oepJ+EH0=;d=So-r:0%[Ab/
%KV/,;p%LEsX1kmrH?df/G0'"<EEH1gA[V2e7!op*=*QNV0&lD.f()%W2a=_=po$r>A*<ACmr=5/X^o$K83T]J0\)uE=6GJp2:rAf
%p@ja;j,Ub;grCj5\Dh[m=aeHd"h,#U`,#5h7p'm;]$M\'+%E]lIlX!%X:^6>^D460%<od-`g>N=h["+B>.ZZCK96lifU3dJOnE3@
%GtMMKIF3E;K-U)*W[U"=ONGXP'2tPK:hB+7m^r?8adC"hVll>JVoMpd%HJ^q@J69Q*dd:M3VZuE%DHsH]Nd`TjF/<a@>``^ktU&F
%pMkiGPsun@dVdn3ALYA!nGT'JUdYbSq5'T>UJMlOKoap`(nuk6P:Mh#D)!f)/D1I:bkGT@$Vbis6NMG<c6-fd8Z<6lDijDNjFI:b
%:cc?=h'&+qjlR9%AdY5([tt)<#+lduqHiMP%VoEs<%9qp^Gm_7F-7&`,SU7:.ju+Z$$f=7"RA`63>`"LbK^ck!PGh-W9>Go`U:X=
%dTqd!A$d#iDoCBo<k:`4KBO!6j7eWO>_l]GRVF`u%rYO0QYNQ-hBaLH]GJ0jO%OUJBT?TF7`h">gUS-S*)DB7[Ddr8(CSR``7lt;
%85'hm7<Z%pBP\]b<F%ZEjZJLZLM*HqEb%us^KF?6`AWicIAhOOjDlBqS9L)HBG_J*cm;Vr34aIj>Du"X;,,8AHRF:>_o'p[!&'[j
%fpLWhi]bdMTq)T^V1uPdXrTp,7:Ub-GH#0B$)4al*m$>%<8S#J_B6\=?/7BoX&ptpbOUe2/oW@U-*>B>QYgcDqL28f`#iWCY=o$o
%ANueaP:P:6BU^"Ajau<`+R2H&$0Gc?-N"H,e-ZlIU+GOE9RtGEe^$#$cSF%'1=_qu$cj^m/kEM>FC)0kkB\cehX#>k5X*kN!B.kk
%#6nX`Xp9SGKq0h)a=$j=eB-Kh@OV%_08@>rluZa9K6=UE6hT),7u#Gfp1.i6jA&d2>085i14K5^jk'#V#4dO\d&7[jnQ0L:.ur4o
%UB&;bi^bP+)(\?rDD-\)KlP'V!56QKhSiCK/con:WPSej/rqJ)4G^##c"]6rjkOgcC#oDW4ZdJe;Mr-0k)OJ:aCgB<HQ>fJ`B0S=
%ZoK"9<Jur77/`^m3hrHk?;^jtl`G5DVD5V$PR8gr)3=8IFQJ65(]C:;.BZJ47ubiJ<.n\cImKm6%#?KcbnnTq[%KD;DD8aGD'B0P
%?.!XW^mC&@JpleSVp<YB2K,qP.g&%ANoM>>DCMA<5A*8cr8(,<hlFm+TQi9A]3g"qqf&Ujc>bCq[A+D#/S7idD1Sej(BH!Aaad2U
%T5kPqAOX%0"b%lE18PbF!T%?"]GWM;\I;)1,bo(a)QEA<ehp`rVPRW2LP1I0+hY$P0p8`EEr*!K$ZWMOkF?!e?KaXGWJ`Ce/Xs1^
%%LpBce"Zcl&([J&[L`6ODsRE#p<R[Wr:\HTrtW7RLQat$qu;B;q&at8Gd@%b"0S#37rauRQJr"J*\hX'0-&P7[c<jq.\8'Bjt;)r
%aE[;fo#2)[@=H^"l+d"+)e.?R?mZf/"liH$09^^?knb_iTAB(t`?sUBo&EU%Deqq8;)[dFpobud?J!GRmB>i!q6qR=U*S!A\rk+J
%1Olb%46!Lu8,po=rq.p<ctiI$Ug@k.cf-/Gc5HEg`C^h9H4EBYOItZ%0pb6R+H[*(Z#nu*&9B['o>;L#W5T-C"@qH4arHnhRuJ-g
%1i^,HHDWYHJN+YDdPPbtBG/f/Qi00u];hq#9*6hQP'e31aM%3f>BNj.G0[a@A@NkX'f+chCE;2i$dtYq^g8G?/]d4Q1JM9I5k,ls
%E<WuRknUbDUs`d8VT$"MNF(i.emGOV!X<O!rb*EMd9DMu"(@sK3hC0"=MOSnNa_C-M'_FP_G11[BRKV2UEP\T8jorL82C."U@.;?
%b)A']"6cR[`T,ETbi3Ve2fsm0IWpkfo-=;o(fqO9mU"/!Rn:f\>u8QLcB"GYA,Eqi,@A8LFU1;-Q@6ZTSVWpeMYu2:^_+*0"j%D^
%nR]KfFt.`^KXU'A"^q\AT#IlCP%sD9raWRJ;e:$4@s*^-/P(el>u7HnRiaS;`V+)&dL0&3K>pV%![6Xs9LN\_f!Ico0q]3#=1!6i
%QK5<.b=@T3?N0df/2Y25CUU9:@hLfNGh)`5RC;tb"aPFAq2pRGg3icu)6/t;j$Up,L_SrUID`KuO@ple'\]%4n#kWs//eO?"<qZY
%kTIWl!ZF87-S(qg6kk#DmHm.ojm\":Ms:<R>]]6g'7B5WX.ECu#Xm2dKSW)uXPsj>#\>Z(6kuTG9!nQKS\/uDeHJ3Kqb=r24l@f%
%$NL[&8r?FNf1n09?*"nAb3;4pG-6i'[t>#6OVFu)&!k-?8BspG3k7NK?:Ih72+3-qg^1)F;_Hg*-o:gFVZ#2a2GJh(QnKbe>F[l4
%')GR5R(siqgPrGK_$=cN\>ZFi7=DWtM.<P(PN/3saHhsg-8.p$cQd8tb7!FV6e:'n;#%iO!_AeafN]sZ=52++!-b_s`<)FT/^)O<
%2h6\g1n"E*L&dQ&.iNGfG/7GcO+oB=o-+l/GC@,//>ANB%?d56N:sdd%149+7`;Za,45#!(+H'm;=>7"A#aJ];L("-OJ>Pe(&h2G
%5B6k<_DYo%[%@eR](pejeI.4akpaqR0NBQM]5V$*(3V":f=@&U=\HBULF1\S7o1d/@orAN)qBL(XuNhp)Fd.g%#=!GR'>4F=UfpJ
%d24Tgk@o&V3=F(4OcL[;<Fl&.i1O2Vb?5f.)F/n.a[UM"$_Scc*cMT7Cpt`O%eKCh'2doub,-R8N_77<7:)2-'f4HFEb1=ha@pJ_
%F]jr/9r3t]9Rsn?%S@4&bdE2kB#M'\W=d+8jZ<2W7+4TM$3cP]Vm/sdCr6PYoZg&O?*cJDN,<F@An@hF9.$40ce"Zkio<'LR=%Ct
%7FP6X$UJ=+M?kR>"c)*$IkF=BbTZ2SBr3Wo<CBN1,H;$Ud#Qn$[6bMJJcqrtC;5[pUg"V7adRg@PR$HiMPY(>,ghREk!%(7U68O&
%$Eu%tR8o\4]9ua84%O+'AmON[F^cUa<uNO-L]Th4M^FigpmkDONCK+2Oc5'C\<<"15&*-Y.&l?`[Z_VkqO\4K:>!e(.5g3ba_`=6
%"7\IX*O5nJ("@],r7R1gK#.GRY6,qN6f@mD9@5An$0OlfQgT?2]3oeAWi;P$q*CNP9@j2)Co^%RaTH3GP*_36gG.p'@VYqUX?a]h
%D0u4)\=f`;1h05sr(?q3:Rq()%F1\WTGc"EoEE%i(?=(`Wbbk'G.Z3hC^Y9YOcS8D>eI^TUtiGdl[5[&S[5mDLZC"#$Q303LG[-u
%78rMb9L?Ahon@YVBds`0()qf;">#G?fIonO@V7:7+sn@*`H3NPV:;qgF?9*rSXH6kRlZZ\CqhS,C@n>O"JbW9L<9'-'hX\=U!p#:
%V,qe;dX673#"LK?-(0Be"^#G<bpp+<qHAcr69P5e:0"9!<QYoLZQ!ipgU_O@W(BoJqoW)l=sJf;:etZ:<2W#!e\4Bo057cT?;\=l
%='G<t1ri1\2"A-DqTQ0;Fi_k[`Sk9KAqed]lpm.LXfN#F=<(>,gj(M4/MEWqdHTTD1L0s-'eJghgg0r2S6BakV;d)L_o-;<"Vtm\
%bqt\#j=KU7A?jSDh0hB(D6jZ@+EbQ<CIY4&7\)J"20jY3iMi7EHVDal]5ZL!Uu^RKq+7R/Gm!]^+8;.q'H/\87\;_I.`rnrNP,a7
%^ln?$!S3Ed/SX32`g6=+(WCfLOF,;WKN'Fl[0aD<ZrPas5%thU6?<^*op(eEPjM).0dY>*M;WR[0,r@fRUB0.ULd//krU6P/FBgg
%in4Dq%4O;UW?ItuD)H(::0MH#DPiP2i-]MnEh]Xc7'2',TS-p-0G,P+;4&\'@F^H4&^@!=W06ceI*q4ooj)4t/d`VEDlm9e>,p^h
%V39Kn>Us%%'g2]]^#U'qo$,^^b,)\g=/tf//Ci@S+4Z8CfKWPeFcQ^U(&N7qL^,K4TJ#2<8VlqZMiFAU\43N+f:,73(+(0Kql>Ep
%SQhKuqj%N^hd_T.a`rk(U(95%O(dAI*>ZaKfTu,g^BD(.i7E:Zm"tn[:-X>Y/ldo_nY$g0,^SIUnbQi+5^U=a:>L$>8u=Ifl+$9[
%`c_J:U+Ck@6W'qp]$j^iZ9bpa8A3b9qYhg2Cok%c1U8F\\7*:9JH@f8q.n[Of&<eZgM`#Q3'0PZD@[-T"1?kD'YLV(<mDV)CYSN7
%AG]+I^tF?FO1XjEj/6]X'FSl'\(BF'T(`JQD/[@>0B.Q8m.8J`!Y:I]HdMg`CgsNTHT:"`Zl]Y\3'oW@Xkfa5+%W\)$@"qtrYLd)
%IjYr66`^&U4MWE>og9^^^&TQKQhrj1eD1Q>3.cjV(8.,h:8,[:_WNWC#"67:340L5!tcZJ0&2rG$M,>$hM=blC.bdl0"JRZs-Qua
%:VeCRb)QFRH]p]PnPOtPQs5itUSRe6YeCaFD@/N+gqNZ\fR8]UGFcuAL%&//)*Ji0dr>1]-fq%5I3g)q8:"Mr>9f"Ikb.Q+Qk49J
%iqh5M4"--j!O&i?Vf^:Ch)tc9e&_6X\:&$o?OOV.dV::MO0JOX_sRbt,qm%e*ZHYGG3<KG>/?*PTg"t(*b^jm<'i=]46rs"oK,q%
%;T7Lc1YA1a2c"D=504QKePYLodQ;aC`up:A_CnY%g9iQtl*-dL\f\oZA,+"nLY[o2o8;?KIJM"Q$[*V\elSSO:,N#el0dfu:Ng*L
%q\\]U*Bj$%koNh)57P4HPb1'Ml7i^Eh6QnZ=u;+R(rNb#BqWZe3<?1ag#TY'`YpX]0!<9NfOB'qPD7"dMT)QU^,\e+F\fj)>&*"I
%I4sPC[.^YU(*2KtCRjBjU%>>,p8_;GLM#K7?S:mV]tS4"mSW9A@9cFIn<3t<24Kcoc,o\bWKLbuemkN!Fg4:aHG9RuD9CpJZ#9/<
%;\`=60q;1rehUpD<6d2Ha!a^7^,#4dg1D!sH)G?6rD8hZn_2<;<'H2sLZ[I`?S;+:M@)R"_/&goBF,a[jVmsoFEA#fI2HQZrlYJ[
%8'1&BmDhHV]KA$T_kD?rEF*7-.5$dKKW1J7%h!ZPk9@@FTe\;@;rd""A9:9Rdp,TAlC?`A[K&TLadEM6H^9S-"[7EtI"t)djS1AE
%ni]UAJ*n`OU\K6SCH_[?Rbq$Iq+mPkG`]BJ%ZTi8^MMT*L%ml!#-@rGl*JM)S]pPA>\ne)[IIp8p_hMtCS^cKO2+I\o@L?qhMuHI
%&%Dl#6m$@Y^'P=[$fU0iB=$i`gh_9XnV"KEe!ML'(&o!58LkW=MgP#Qp:6b`5iLS+(b"0d)?ls;(S&H1q*FmnRmK)qLVh=!&Q.8,
%Lm+2SO6FkPO,NSjO#rJ$oE"\oUJ-6uZfifEI_,O:gJLk_r,EfRb..I.;MmZr*itSZT,l'h2IA\aiZB1(<g6X%S"JCXKpf$4*i`$L
%bKf?L-hMp;As8]]A\0&f1a+PGU+eujeE)D'NpShi%Ok@&jlq!"2_3egN3*LS0qq%A:+hZ1nP40f1MlgiX4('r!)=Xp<%4N@rTM35
%MMg%9p./$!+k$'XctrarQ\j3G["OE&A$U8md*It?j2^0o\!d%&@JoE+2A5UX<**o)QZYIso4(J1#a`M=dUmgZA+]5n"5W;s%m'Uc
%!jsI<B:#P+odMqL!pF<Yc=2T*NU0^WSnU)UN*7rc5t%,7IKkjX=MhK*l1BNg`nL,SYqO94^M[f(T5K&*2Z*f6CL5.K?T1<\o4qV=
%Yi<G'#hFgj+mp`lFN*lHD`/g9eH4MB!pZZk!QH2X0[,j3KXj;jM?te>`F`HTG@L:92"'[s4nR+AQY\B&`:Ut$9h,j6n#pjLLJ="T
%/Rf`YGBp`rLU#[q?D/C]?H40O&VF?UQ-@5`(ZR]uT`<@*P\5i&,>LWV%)36u.3pV\X73?ff?0sQMd0EsB2#H8@L/3=0H5<QKY5Zn
%[fdj=l7m\;<bfBtdTUDaeL0a\07Vbk1#6a0rX1QhVO=@^,6*E1j[S$#73![;.K@J?Qlb;b$I69rqq<_pDYoKErO7MO=r$t*7<$I<
%r2W\KR%*ioAA"B#U+uFo>W72Q"4NJ7)AJZIpgfla%+V=iOU:3,[p;pESM@Ul(J9YS<0E<5'Q'JGTWn;_mhJWRfQCd!WXa\5VM-L7
%Ur?\.5!k.J"1R:^l9YKj`EZ9WW2TqB`$BDl8WDJCrOl^JM_@a+`o<\LdE^*7oc;)V>@Z3iXG_9:R]Lba='BuG,<*r(n((cV/FH\6
%K0:+eY\lj((5u45#RYcU>`U;t'ZUD<<b1TmrjX@$UX>dS7gW>=O2USa"Di0bUXRHtPFN+Ugj](fHfHSp[D[tKOJqr+O\'U'aZb'K
%T]OVC8Km#u;$],<@d*+LAK?_-HWZi<])&-m[\>0BhZC3?+nOSP3Q12$3U/!uBPm!jh2:3NN>>1VNE0M)@'th&?81Ye1/3kV:Q05>
%_uu966ZB<X@VKgF(=BUXgA01#YPUBXr6[aa_'-@]O2PaMbU?eNibSRH`p8'M9WKC0oJ:VfXa[.Jp?4=,?hs#I:<I\=YMc3Mr*&h6
%Y;l"P9KA-=LkQRK$!EM>&*]n6)e+dee+^k;iAPaJ,D4/q$'^\2aD_n`B5BE!b!QG(Id^GnjiV=pKG>9n"mCoj=NZ[U<qb3G3IhqQ
%P3YlJ1@m;sR,*KRX5/%f%Rb5`$<[k!n4)2^CLjkF-*Ks%]6=0EZ7X(4QN(=)QXr5aGHC_,$RL(VTCSjLkgmuAIlM@[N&179WH%kS
%I*,/c:)SDCb@!neM`Ij0]tKf9.B"78/eR6#>EE\FnYGs/d#sD-(B*nWr/-IlN?f.C7XT=N-V/LIXR[RdWU6$eAcYeYN_,cET,Zh`
%DC;KbUOo&?/YsRH]JJ<j?T+%[ij.on]Jq&8E?a/ni]]?FJhsi2r'%MSTa"5UMAcP5SKZ!XWK*am-:?qjm]85,To!BArL%bMqaPE(
%97_bVs+V4Z6p_JUg%FNNla:t,X(ao,1-5ro^G$$j5=Smp;g#f62)f4pkN.$EN)q-Z6c0WSGM:t=jZp[QQV="79[s`rnkms2f+F(O
%%6]=0oTp\5E]@3f+_b*dOt;K/1pVH+A!l_^G<6GMWIL#YU*43$*5(hsi=iZc[#+i%EJ8R_N6fYr^-"G;?Dq7KCBdC4;Vtf`/8^=0
%K'OQQ8-t<76T/39%s<<g\4VnG"`op3$na-./Vd#F<Or`8=^0Ps.5,8"Y7F(.V3@unVV3uTFO9Z'PK?BLGDh_L8.gt2b9I\+j?Y6Y
%coH4X)8+NJAOBLQj)<Ym<Y?3GG)D9=Au]U9TM*pT:,S'$E=OiE_jp+o(Q(g\RZGB;9m,6-[!mXDAXcjT)lCb]/%.3>CClX'g0LbP
%>JS@IR;<cZ/sW5D9<.2pQEtCAf//(6m!47BhuRV"Z"=U*gu_VY#pYe:ISL<<f-N?E!@O6!Y+Td.9K#gjp_71or_!-4ejH@^70H,f
%WP4TqT2qk^an+%Ib1)$B[M<5d!b%rOIX[c.#:F?J?;;[T5tfU9:O(.nfj(hZXB%k@)S$1WN%/XdX"n&Y7]N-*P*3<Lk](Fl(j/fh
%d"k5Q>oY5TlZX#:d`I-$bXN4K<kZnP8<Q4'Uih*Z[c,q0.\&4_hd,-'5Y//27u$8T*44.Vbu^NDQm.[I.)j$!6=H=#UR@N=;rRT;
%KC:?]!S0?tSA;C%?^:!*PdN)Vee0u8cC@XcPBB[t4!(65OcUbK<^bA3_N`dEdOII\k`eZ80Q:>#,""QeG5,$@ApY]G2/jc)J\X@*
%f;'=_C0dJQ+W\9i0<Ih?Hrd#p2OXglgV39]nk$s3BS)is)UNmHlc&(7jN+>^Kk;604G=7Z*U<#cQrKg]ocVRhTlQ690<WgGc9_Bk
%X'l@+;CQ4ur[H,7!i&GEC@&^r>d)lpP,%U1n'aWl_"8>^,428^/s[EhXJI\D_D2Ju6mcJX)m'ZC@X)qallTXQ7FV@7gnW47r6!6Y
%/F4`*8URW(g^Mulr;6GA*TlVAif1]JL*UZS/"6@-h#[2u%`O_$QIeZ1mCa\_Js`jjKU5lL<S06Me>M`8cu([XQ)MFR4_dr'q&Vu)
%&(jgWr8A].b5DXdq*$7WX(KRD4I'ud.8r7`Askp-=\?0WRh\+=g:Fp6SH`QIntGqAN<e78eTem4?IM-/f5/$Xma5l6?rst^+/gQ/
%]ah3'k4f%;dtG[c`o7QNj&:80a4s_80Q-e'V?oro>.<.f3:P'H5#;p2]hoJ(ke'GdU0L#Y',.R/&74$tO"]bg"ld,255+*lCi@]2
%!"KRFWPt:X60jVl/m<p:a=cjd@(k1u`Wt2Zm-QC6UGuR<)K-JS*T!k`e&mU"*3gGN-!\1J@;+pC(\0o$*<h`F\TLct_*'FID04Df
%"otnBn+UEQfMDY6k(4t%.9!um*@N2U;3oK(=PbJnGVA(QF:MV8B<%BlJKfajb.5TMkaXI.NH,K3an@I!c]u2a\Fa8-CkXsjGheh"
%GtA@8UKA;+-FT(-3#-qUP`TYrK5)XC!<;gl`Cg`o#C1AVU1^A@fc/LTq<-iChb.r2kB="-h*bJcDD#/D9h>"u^#&=i=HfGQ4dd<]
%_B;#[/P=,][B[&(Rd(Z,=o=Dp;+KLOE:XoqqT=K/jQ(\,-@Met6OCuBRk=m)"_?n.=Pn7Q-`E5T@@DuSTsaMolOsY$(eRU':YHX$
%U`M+O"FWQBn!PL,<*jPu`-07sR<J4ZpYppafAs6MhKu)VmtL5$II21KEVG2ON-r*$U/[(IU>O.@2:p^pi&c]Jed9RgQ@9tJ6mP,.
%f21NBW8XkAo<4Gk+'Ki.J%8B;,N?$^4m?s>&&W<;4Xnoc&apuXc9'Rs]0lJVpb.uQ-Ts_<3UfSW4s,O:,h,L2Tq-Q6Yi_MOI9\"H
%,rWm[G?jZb`8<`i^E(^P)W`poL]>&lo'V72T&[1.IZK$DLH.$&RlqV,fdafW.gt\!jg)UN;13$FUq-*bU:eW`c0htk2]tJdpk;gE
%b'X,!9ba@Zf9T]5FjIfJcrGZ[-7$(&^CkuCPN<[45)@V]:=rV8d)nQObD"V/Z2gNfI1<q%XmG)_>k!(c9n!*@mGsOCF,8S[M$SJ^
%IbtO'4QiG&^4"uK&3beMdX1N]DWp.AH1qEohdX=6PJ?\jG4LplpQY"A+oFu.A4KYk42k"nEV9'kp@je<rXn-;c;mHL/XeW9#(JYh
%E/XdGN1IVi#H@[DP[[n;#K6ss+P(8'=sh9pa;F9/gP]Ji+6oTl@MlYHpgA8*LkmGEF*1"CP>qYY71T6]!q>6MUq<Xb<I`n'?d/KC
%<#Fp+m*lkrqWTKicBrZq`laN-.ZJF_m]&/,!V]P4CKBJeH=J##=)k>6HYST6!V]P6J,/-M\mp_ugf&LR;]'._O7i5<e]2#\Ms!";
%F6@>$HhcQA26u(g:H^J5k,sU&0>D2nhHk?1ro'IFjSn63(!8YsXr?EV]:2d(XGSTK[+WVor`?:e0=`6caU+9%<%=sP"KV<]4n_o'
%R[Yf!K50pG7ZO,Ze`ZeA8FI@a.];:G:Rg3B,4"K_TReR2<>gF"W7r[C$E-JgFAtL76qLpppOslC'GM$O,tp7^d]`_Q4t"Bj]41,Y
%?QdD3e=>GjK=M/X&?]YB@#^nRf(?&iDQg3DMnq(sG5?707Sq&^loRFF.5eJ9H/Zb%>:/(RRLoCil*%H_k`<o'hR6Zm?`H>\qcCtl
%M66m<!cSRkMZn.RoVT=e=>@15Dh,e&eYtKa$!Gbn)%8"ndUMLK<F)26+"ZmJ0`7#[U#H?iNjr=Z+BBln1&0iI$iXj9e6]>Z?e-g(
%WF1&@>q?=gW(Mpb$D:m>?<*[=/1O=(W%9T%S79qo&4kt_,q2Z,5AijjFKHd!mCk(f4]<//)Bc08:=\i62J0D/5U^3=\i5L5;#(dt
%Q]0Y)QJLE9GP)/F/=)f8#R_/9B:L$[(<BAWXkhsOXcR0/_`n3k^dZ<:B!h)J:A:WM^dUd#;"!i"H:g26AbAn7ZD)[uG8)DQ,QL.b
%hmQ:la$D7s\;6IgnuX37&*!<Q3.PcX?F6N\$g\(_oCt#`1L3g;?UW@TL>D9.BLE*3^/VSa\[@Wp&NrD<Sb'gWdI]m7h:K/b(ra"j
%r2CbYS+_$q1TmjW]F%?*\lpV7nO63I4_BUkk@B3!4hCgDc:(u<-5ZP<Wht0'fnV#BCNBLlA)LgV9,$\/CAVo3[Q)WCjjt><\@7i;
%c#BDc<F/,Ll(-oIdB;%Vk$"R-1\Pi*9OOC0-bok./]R5%S?s0GA=p=LeK26<DX<ego9Nm1-;WBVSHEN,a3O[Jp7pJmNs42M_l%?B
%^&K-(neA7EKZ*PmJ*FuMLrSE@2p=2>\BbUr/J0JO;9%e-)@uq/cgW[.J=3Nt-bcarD=?*\L;0[Z=)4/%!ksD`b^0T-D973#,N@BQ
%EIDc_(?_n2.-R!AIe*E8*dN+.mLp/;UP>E5f44$RQ[q.Fn*(hc.0a\<IlV(]?F9u4?f'/Prh1@H7^eT4)%[g^j0)3Qg54P!4HKh^
%ZL9gm8G"$<Pl_)mme;8DU-=3aY0mq[jD--4WhVKWp.,M.#LoQQi!"E9",L2^S"F;/&*:692X_?MDIA$Cm:7pVFi+X?OJ:ZOl;KWd
%Oo2T\V-!F>gf:`[G!Zf,U%R5;m!h"nOda/Aqoo%pUsGMbb4J%?;L?;:Mbe]'I'Z0p3:m4lMG8*8TgNgBcEn.Mg4aLWV8e<,N%-<.
%6D2#3Z<=7T3<FV>0#^R_\rgK/50oDnLiK>F$OA-,a`RO=VV(1SJG#K-c%h'%P>b"I#J?412Fd31b#$t%:GupTNt8oO3aDAJ#&j4;
%SE757-_"*0%ffC+`E])Vd^X>U^TFikj7GHrS_c4YqB+!%)=MeST/AMJ"&JWO8"u0'=Y>GQ*;4h0c285qdWAW9N82mT9uanq)L))#
%g$0,6C;[s>?ne`&3,N_<I&",A;;HfQ9NK,mWKX_NOifHD&/XEd:t=fe@<*I5q!H]GZ?TsL_XsS:]oq*oDZ6N261WKkqknH.lk9#6
%5l7\O;oqMo\6J@.Ef2Xk*D4pj5;ZOG\XPgjOmF8d@,li$39R.d:4?*LduVhkqMY%EG(l':F-aunJ3@0:3A`<LL&Br^aVV+o\A]Iq
%0CKJH`Q`UCJ)]dr2X1"0O(a_`WmJ@p;G2&ZfU^YoGhC5\QE$5rMaV/<m$XAO06e)a,.gscr,->na<.Hf=%*FDQUp%hgW(OnDb;H`
%6ir!hp)tH#<Su*h:ah\c.;&CI^$u>)%QK2eM!m"/GUMp:U<7M$AN=\g_>&Ylk4W5Fqlm!Y18R6mb/M0N[ukOmo2;Q!B9krLD3>Bs
%Yb9nDfWlhM@SCfibI-fVmDI/aEA-SlZ<bp8FbpWpD:&OHQkFr)QgNc@'noNaG>GZ8MG_47%H.Sd@;V3g_sW1P\nh'45Ff00VXXD8
%m5%2WcWNJRq#$rdURQ/I!pY7pD$+KWIa8@ij5&nbTIJfIee6\Dj):!a_(Q!U]Er&O*4jHcB1#-X)2OSTgH<8)`%mWL=grcc1sFNZ
%E?^<6KNBetcZ2QAMb+c@Z!p'Q9I:MUOe)>R4D>'u4E?X@"O$V[i6jFOBk[L6*1qsn6P+:S-]:Y*VD]X:/=qm9-%eAj,n7/.)73gt
%F$l?_X$_G3#:O-WXE1QgGnl<@.G%rt5ndC#>,3ds:3Tp7Po\d1+pENI$L_H!"[:?=lJ-3&Uj@"i>r&oT]gcl-<%M?_+9SA&RttQG
%H*D+S8DOSZNY@ga3=#pA1-POr3M-]b\\2b6,*2@>l6D56oQD7Z)Z,S.L3?HQC7&J0=#,RO%l)a$o4Pnr"TMU<rG<opULaF?U:O?u
%'a)c*]k3Ig;+2r0W^Y;LS;Pc5@kV'WeTHC'MF5@_,W>`X\'D9QXH62go_^3E7H2lTP!TG3jY%Rcpq"&$!B8,SeKYq@m?"7=Y@l"G
%;'Ci6NTBZ_d.7Kf+1oIn^0QLjGnO17RsYVOpp9%Y-f'n_?1V>q.GtY:/*&Jg[t@nfUkg-?8\J5JYP"Z>,p-H:;c`iYb7X?-]T0=)
%M&`.PD6ch!'RSoo=k7GU@VAfc"XelQ?[%_ZH+ViNckrC_fKqXk8^!/qRn^>e#Yf?_IAo>(H+A@:<cZrQII;OO.Blr$J0.tFKpsrT
%A#2'.Z;NGO`=WOlQhne.!*O$"hJt%<V!g9"*5C>\0jS9:,>_U@]^K3!cpm3Kb4\bb8;;[c*Q_OOhimKSXACT3pI3a\.R\E>S-H"^
%Ar3-ns6Q2Okj5GId_JGQ$/4XCJ!Wg'B-qjPMg++"U(^jU"k_]jC4<$/L@J,&)STeF'Q-sS%]H,M0!')i*WV3f0X`i[D-i?RTH4/,
%Fs;TBB6mFD(<O-WSu%7IhK(cJ&"7=:+`4T?E1f\?K88#M0YK^T@]D`FDI0?V1P9e:0Q5\Uf#.G><<.skdg6'QEm`j=KuqD2bNKVi
%e7GJ*3#(FbgO%%#EE\;_?Q(>_en"@La<7+D21n-l]'@T:;TJQJbb`9'9qo&-/q4o?iPZT#b&;URq9o(kk!s=(I;ib`1"jO5[Z)g$
%c)aO0Bl[P1U-.(CUB<%1oFURSAK+i)U(5h>qHb&!;c$S4eNtm-IUl+h)1)2X=U_[XK)E;(#u4.Fk=^HT3SelSaC$I-:?gciK@T+:
%\pDcgOc'b(IXC6M8?%Tb?AnN/4:,8SSR4J`o.68[M0`o,Y%0M2#T..(,jk\=V!BpWMnm\$c.5ZPkkG%BqRRR175;W4p")l>%Rr5E
%(oeKAV2Cd(`Bgl:BaGZDVntM/3MptbBUL1dI2cT!;69WheABA-?03P5O=/!_\5"jpM)NS/f688$3s%e-Sf#>iM#$k[#3DHan'5!l
%R*:o=egXc$24fP7K:&U<SUM91#CC?70dt&_o9\p<*Fo!-h=sTtLh:s5W[u?3M%.@+-N7r$L2OuBg(5DtY]6MEPhI,7C^DK/Xjn%,
%6N\$#>>TgC2]QPT9'ce]#$(gQ(ktH>f[_Z#YH87[U5?6j)j]\$UR9m.$_uXN$/hpD8GJunY1RT3I*.Ag;(h\eP8<2W'`$O@`4_#,
%aV6fg/rVjkn]=gXe!>YdVh16=0rSa?RZJ5Q>Q37>Lq?(*P?%[?5suunc%Znbd(Pk:4aa^M>NJc"/uKR3+mObWOWTR2(d"UGr*9]4
%T69XOU'Ot=IC.$$`aegYJPW0lLM1SQab8][m)3]g\pjRPoPQSWo?]=]=KX<8=*kfr&_IK*[DLIKGTOG3+c_MO=fl>@O]k^kFaI:u
%aJX@/`Q3%+>B^Vheq0ts,?fTYbfh>KU=f?L1o@ArO/"h\5OAa8>W5UGW3]@3.gtEB?U`KPnu/[3I/moRng`pKa^MCA;0:He(9hr0
%T*+96pp.Po(\%8rKo)SY)%s/J:i(\SLV:Q3NlFof+L8[j:[DQuM22Y_$EMQUe0NOeW_R:X"(p,"@GQ%!NV#rm=bA%S/`%YKT,M0L
%l>iM`O9(*O37KPqheK_NS^t!C<LZV`VRLpVZg=_Im9HQG;G:QsjCi@-T>",*#]dJMcYJJmr_lt"pd>K9NL[-;.\W;ApG%(nqn'/$
%=dF4l-gW1F][/C)1FhSM:Je<_@Hlc<;M=TQMl2Dh0NFEYq5ZN?2LBIn4!Z\f-g,D5f+Gu-J#p^)LLX>eLd(@2W68t'+((!b8;O,:
%50=8TiRrpTd^[pG6O-K:ndoPoGk;`?2op#Rjlkeb_X^$UG@/]#PGE.?e9iE:U>=m!fsd1/AXom`dR$28g0c)G$-dCT&teZse4Z>*
%7?S,Doo6urdT[B&K\f$k);69kd^!%\(jVt93_:8@A:;B?Y[-eH+j;P5,.qQ_0jIpJY]?+JgYRno^PSanb90t/S1n69C#1708#F_q
%>aj4S\9YB0.I6HC*Qke.-S5%k0g+u?`RL#k;Vk<\gE_Z/de9aZ.l<GaQ^(+#9st1c_J0]Q;3P,T#KP>[P*iU\lf,l_F_F/5o_PS2
%6rMUnM1.3`B00CT,*S35c!6H28e+pFL)8X!Re47]Q9cKTI%.WJXK>\(F5bIWq:F>!D>D)DBr="s#Z9,mN/P/Vg=R(`'$rf-8CEDc
%C=L'kE>u_bBiN?CajIi6[)fL($Q.KVjjLrsg$'5PO4?V.oZG&<lYat`B!)i-abfOB*V4"H;I1?/B0UQDFP9n]9F:P<Mos:\E>0Fa
%X:_[FR*_P!e;9gA([\>#)TZ%53Q3.(/\FBG^Mc!?=qo19kn-SQHgA0(AF%49"N.U&4&UZF1s4YLas$"k7U*.]$>o8Z")R>R@)aH^
%eQfDX'dNbn"[."KffU?@b<rpe*"2/+S1^Vd\8^D;'>UHEkOm8J.-eIDZtTO^I)7tsGgS36(8pP9Z&%&@36cQ5R/8!8pt>F.]Yu_,
%CE'8DX_Kb(9HiteH5\Y5LVZu%%=G`Db\6u,Tt-O5_X"lP>jCnj1N,Q_R"I2;=H/S+fe/#UFD[hXS(7No2P;$Cnm]<R\fd(n3An'a
%m5oQCH<>)ClClDR.GB>je&A__1mW@WF2tZg(s0LVT-Y&WI]gb[On5mG9?O+L\Zr_hqnCf*GS,CK<']I];q@pbl$kRbQlo.\J_f;G
%*2p+hV233=V'N>EgGPisSKU&L:jj6I#E85V@TY(uOM694=L3f"P[l<.I@:#H#R-d3RBtll7*GF;,mMXY-p[JV7C5`cMJU/('[m,?
%d&c2/J.K^;3GiH:WDP'LKbF$YR4SO]#5:,#$D(qRNjoDQ)C](.6,\7mo^9U$q<qKR>=%Sb!h6%[c_59&&7_h>0@Q*f8eq6.4c0:k
%dD/_V[oWhrC*Gea^a=kCpoP.iOAMD0@_!5s"#m!L,,/(hkeEjFJ7ki76&\6-hgc`A.Qdd5iLY_MnlFBk/N;Z,,>ZCfHXT7c)Wuem
%2,$@oP$js1h?gTk73gES-IP^)fL0VOlI"<D?@SEk$8mqG?cLE\?F6N]L"]m0'f%S=`Wp2LQ$H/>opHAZ^G)&6S,+]m_qL)b$VkO"
%7QHjPk+3CI>9d_u<i:(<8kP#LKTZON/@ds(`qW+\TQjj;]'SqDL-D,!^poAiL`j9L'#\^JBS)[6?!aYLnJ>,=P%c?8SnSIZe*q+=
%`A6lm$a9b.("44UOt_?^XnF-;mIA*R]I1HCX_@@'D-UKskpSQEgYS5D<%Q9rL'H!,Wet-R?$#4oqMLPC_lQH9cHG0&.ic)Mj.d8(
%+dONlRD<?qErb7F&QK-p9)5:NS8#bi5mJPYV'WCdSq-b>ncj\,*/XimCh1hXq?N+p#tbQ_@Xr)VA-de'nYV8a(t_4*^7"3WJRI7L
%YO&5a\[MWK4g_s,#.HcN4j)8l+W*s3OU*[!j`nUQn_GP9_Drajq^rLS@A9\5O9:/(a[?7]+V<\&*[UhP]Ygq%dBgZ[Cn9gu#\^8g
%0YP$k3e#2S^(2D4GR#%Z?Dd89cDXJ=7&P%2eEOu1N&R=5]o3T'Yq0$,*f"aGGYD#9*+mY,'9>p=?:,",8(6c5."1S)kE)TSN*9?N
%O4&%P:578a?Y#QYL/uj(VNe3_)d45p:*l0[ObD.2JF$&JMaq;X/\-IcC[_qTL8mL;ppaF,d;<rLRj:/j9jD!BfbJPhoJCY)l2(3g
%gT>-VqV5-?B[t-s(Z-IC+_P8O5@1=&To^1B,9AV[21bW+8.T-SEQ"kZH+LkXJ].E.=C:j)6qDpbVN(M0]VAt/o^.\*o4BAH+3'q;
%IrH1F#c#,SbB\+<;7,,'IBWE/rphSQ,/V:&i.dpJ@qO=nVLH:^,]aUYO&;$R7H9.Kb]:)F?JQoL*UJ=1MnuR-YW5tDj-j#-3cT2e
%b@f=l2@Vi46*)>nQK<V86/O8g&hbIb.%uf5I5@8*(Kl1=RrTOj+1A8<afFDX;CD17#u2kj"%A9o[P*:<2_FAY_;TYbEPG/fG#S6P
%kmS;Z+9EQ(71m9FY7GD$O%4i(GYRf[Pr5a6+fAim=c/W$M%r9D&GLCg#oOQ#jNIA`)9B,$CH5!l1g)XWLfs2alf3lGld0T2#Fo(0
%$`IPGgtUkRLra(#?k%c=NoXMj:^Khl1EtOu!sM<Q/)_'pPq<PHm`hbj?Y9$1Za-#e[t\KPL4IuFEFQ4GFU"0\DC5Ue*hem)oSo7)
%><RQW9bF\$aJt6V%(YF6Fs!'n+):2$<CpY#XG;nNJT+[`G<BS%B?ac#Js`?g;cJ.O\ERha#l!'SiP*P'j7*B+l"u%FnY/2B/bCs]
%$k*fa`&-:;jUpYV-s/.FUhkf]?L$o:_a&O%gW-Pga%BsGhoX*E#>Vp_7?X)*-d(0D@'j!%0E-a/hVb'<[)[#7Or2,P&Yg\f;9SNG
%gjW\1c#rD56sSa*XR;DJ_[t$2QD_6l/k7pel^f;?S=rN7aD0gd%nph[[p65E9AW7&\3oA*4RlqS$];H>Tgp<Kr9uCbI[+^]92QJX
%30E(R1K$o/Cne,DClNG:-&JMYV?[INh?j&:hJjW#Yd!3]nFf(CF1@TsU0`6>dFER7k_[L_Ge[)t4VkB^lkFsF0YmT.A<>'lK0H1%
%eW1j-Sd7r__W.3H,KF:XY&eG.cd*E6g:Ppb,UT:"D-+D!>qt:sejS-D+c/gPZ+.(q'MGiWoJn3O'+VDCZDDJsOPej@\"!).jAUom
%(@aJMqW6qs8cH/+rL*:r]CS\t(h7BG!cGpi8`4dPWAJQe5&:kJNI2obgf#2*P/4X1VpiKL=?2i^-=:dC-&d%r1+A0_\<@\GjAUoo
%rl!Pi_t[(jal,]QPoah7fr5+Z-C$J<@\oYe&iZ`Mp,'$$Z#3;NMq*8'<@kVM8eu3^m.PPkqk_M3-B1#e:Ss-KX_/9eQie^7a!^!M
%B]#]V^Tt1mK9iqTTisi%),o:Y"Bn`to^NJu)g7)\AMr=A%ble:eS(iD:EQF0bZa?ZCXdg;hcFn"]BfgV&u9uEm,5R@a*UGc[N%P5
%4%c(oL!-Wa2F;3U9o(]IIR<#.JV>cE/tYL/MPF1*gC0pE74o6.ajbkDkAEC"dt4%IMeV$5*'e\DM5bu2UA%pu2!?qt9l"a#ii>CE
%Fm5GF]k/Zr4`qR-dBGVP(%d$TSt4J^Z$2WN0IN1T77f;Q2u:.q^6AUKrpg^G3n.m,KO1JqDOje0@jYe0<ufcD/1M.PpRk'TaJ/-=
%e),6n19]:\9O&/k93tZER"h_.[jUc%G]oo*LioW<<e"K546[)ap,ub,e@)2r#nt;\Cp:on7;ej>>kPJ1bEX3e5E.<^^N-JPf>1>L
%6`3Gj)+,G<l6g"7U+pq>2-Un*"_G@Gp,d1dTF[?;]_m'.q#,F!cTA=2/dn:iI!K6X7Ma.)koFH(:V-pT3m-P[<m6aZN'-74h!BEI
%,4aa)Hk-I%bNh5UqaD7XYcR!G+l&erNmWe\j;C<Ac4r^!fH)l6XF]DJQ2N'ojA%0o7,Np])<<b.>Mu">`9VanqjUiolU#W&JD;@O
%W7\:_<E/.EgB-prQB@:3Ra(qrr>iEa5$'N&iWP'aoj+<B>@-3FfM=S&>mF2q>hb%rcXUS"R[Ah;5OHR8%.lf@n0YW"f8j1[5t>Qm
%3"/ikOc9,SHNM9%CX=r44CuqukP1!5f8fS]Af^a5P[W22JeP"eqoi!Y?"<:Oo1m,bc5ClJr](Xq=YaWK]JJE`@$pJqNRYWa:F\+b
%K80a?[_bj*V*p'BJ_g_^^?f;)8OG;/XNkf"@A=&Vfeud5]>epr&[#"a_^bM5*)d6VokbQN#VkT-:gGclB8KA(m544Ma@,:d^:7<g
%E>_(E^drrSC;PW?fRGV6#G])[nQo@&=9>Tme%<4[1Hk1$r.Uk+)"3i)5-uq?8i.o%D)cioot=Ua(:6*,%YUFh5k45WJ7k_kOqW[*
%`[d%,f)u;Q7R,,j/.BXD\rHfaKf8&W;1"8<q`i2kS#TQ1I;`kK5:@QG;ASD*1@4#t?[9LAPRMo<-KH(OO'T-PFd)5(P6oE_Cbr(q
%2O9l$RrJRLP6p!f_7g_qFiUHq%Gi"7+'DESJ>a$%?\719?2t*?OAT@ZhVu+MiO-1*@QHM=#JO2Dc>-d-kic8Qh`#97T0TJ2OR8C7
%nMXePLEEn$9V1r-Vi73Z$(iu"38[LL5*%h`Djgd)rP>:>jII1V),c*8AOs-X:ROFIP&[)EFl8PcLE\jK5]<`"+GBsgV]&/JY*F-*
%3Q5W0[.esD1'Zj4@c^&USB9&N7&QD52U,%pHYZG1\`EQF*H..[fpuHml$L"\]44:l"QU;S'!`O4KW-0s!SW\B@RCJ>0/b64Ah#E6
%K4#Ual(C>WGgn%CI\5?9%iVY]feP5aU3]a$_#W!f%hTNhQL8ldQG.tW\thYDY"6BPCOW-1P$i$1kVJK?TME$QbZPLrs!5lMhC26"
%5Sr*)'1nf%+Jh'-MsKSg!gmBc[#$Vg<Z<//._@3ufU?$2e?&/TOG]C.dP"Xo"\=ISG@cbP,K>H!WU6)6aD1N/.KQP<BV<N,$,\l^
%af:SWq[Od"("t+M?WNZ`KYnI'8:c>6EBGd2&lXV+YP-7I?iX)1]]$=p<A`"?Vgorm[*[fbQR(OKT:X]6X2UR,KAEpbfM%^bU]M6(
%FFLcB,/VYAGdmK(fg;*E`;*7DA[-21EP1,:$_i*(;Ij.\T*ckk[p$,<Zg)q/RJ3fq%8D'\P:IIk[^07@!f@NJoIj9>P6mJ8N.nA@
%GT,n\p/".Hat+dmB4Y44=fmqj<hPQ;pP35<@\m*>(#_CSNCmHWdnH9VCI%c]a3OTA*$0799FPO:A;;OA+aXN9d.F9)Z<3ul3&JF[
%$_hAC.++%#D"Td;6I^_CiAC[nH;U?WEV-Vn"VS#\.?1S9:JdQU\PYWU/jQ2/IUB1]57Ae`dr#k*B([pA'ds(!;QISjA<.H,d^S3V
%'$QY5)+cVbEWU]D#\kP?gL,e-#R;KuTQioT"%!lAZ\cQ:307_!kGsuq$S$-q1b0N2'QLB`D79rm@40DsnC'2RBu"3N>$3+40X>;E
%2ebOQ<(:D#&pV"Xg5T;G720c%J3sdW%AN=-,6B\VJgEKqhMKZ[;eYh@'3/#:*;4Z,Pj!7n4c]+eU38-]/-XQf?4Ji%FmQOBanQ(6
%J>au63IU(B1p^[`ls,aH0OUE\RC*e])iJR=>QLNF0UD=q_CQa`kfmg%/]L)>=.9t25D'X$WF0lEpsuF%RQehj]9#;D,]$(.6k5PM
%BsjJJL,]REP)P=*J6U0JP4,l74<LWiKDO?1Xm#)']"0YKcFZU>MLP/*c/#:YCMmH"c2+I=Q.k1G9ArTt)=@(X0t+`DmiYi^D`l1V
%r,MQeP?XA$fDLs5I*!0H[F4i.X7p`8P'j%U(N8fEhP\+uU#bB\/4%cb6(1k^[&[,0"md,/.X.K5X5%qpZaPm[NG]L)T@C"ndjOf=
%+fda8$iR/eeU()-=ad'OHBt$`"bi[j0":REF+)m7.:7lK:YPAl<,>B4%BsS!@PV85NZNq0YDcs0EI5B+7slZ,lu?<L'u9%'C3?E+
%]o\:gJ(!'UC_*jNdh+i"/hr1t>g:NUbX_?,gc6-m'$V`/LQ;:H,4lCTp:XC%-X1*&lu?]e14/sUpC9W_Cp9O8Z6,mKn"$Rm0M'cs
%S!0WI30de=QqO@lPAf_joEeJWLueXOm'\Xi.*cIE-8GrS]bdm@SZLD5Lm;?q2+V';S\:TI@c%/uOK17nNjVpa-$GYK2:9LWdtIsK
%I0p"*<r(X^/,adVfuFXQa$:^_U(-Z1cL=lC+)6glB5U!@V\AD>fdBj#"/``Ar6-MBd3ioq+s=J+<]*'3C"q[JghR@^iS+:\CAUlp
%5471<c6SgJ\ke7F$>pqe#@(o*9ECBM>.,NL\W9VBXtr\cL:e?gq?D6bS&?%?X`q5AU0`[N;CJ/tbUS%JhL60FO/pR0ZV#NTY^QhP
%,frQ$fgU(6DR;`l!VbQ][Jq>e-uk#3aY>Kr>-r-UJD6Yinjn*HS&@#n)C31Jd&Y%=?"6gh`?;e=hL8F[j>]VLSP:lYVLN?gr?uP*
%)BQqK=`\pXq*.T:/%C"@GT?`pocI*:jJS=28*TDNe>qn/P!YV4Y"-jR6"h36aAcs*!n]YL85k&jo4"0hfDFdYp7o-GBTjE'0s,nU
%)N/"_7A,=`ot#8>:2W/F5fR9h2t3n"K8K.?"o.E."cOsi.Ac<'#WZaLruVE%C!)Gg\NTLn+/Vq;Se,?c?rbr"_p(H:O3/^f6SVkZ
%!DXNo't8P4nu'miO5fl,STk!u27H)iIAs]&f(l4Pp7i>DEL,rP")t8F=<3R<52ZMl&hAulAoaQ7VDZ-9+o*Us&'_cI^Kd-O]c^k%
%fr7U(_f/gR&fC"1Nm<u%DET6eV+;(*^uN2B)K223Aj/)o"h,#%lJoWa,SNZ'd8)@LO(.jW]m]gFom9Bo>X+J8IP2B(&=)8M0,Nsr
%Q#8gm<UqPU+1dEOJ%69]?8;4R>MKb;-/m3`4T<MM]3C-R:[Lk?-rLZfIE$6fbS&(m_`A/"pddu5?8bV+QXI]`_G/<%?qU`7`$0LR
%;W=kDZCMmDDJul;D(=oEPAQ"<5e"UD0>++<emPFf8inVZSURT\Ya7PECbtFS-(@BA:-[EHpp#0&7a'`oq1bb6'"^5BLQ-\]nW6u$
%[2tKegGU/Io\>l._iNT31>39maL<uM&cggt,.=`NWFeP94kYkjff\lZ4S*=ZbYFX:Vk7d)m"Wca<lJ>H5i:d+.#=ieNchXJ0Ic\t
%j5pACSqtplBJ#Q^d:Xm\..\?/BRPH/-V[:,)tFcf;^3OS3DucufP*5s+#R!Z+.R#nCQ0^dYJ0hL"rGic@PmZHdq'JK',T+kAX8[q
%!nqbob(@!6Tj84bHqmJ,Kl6b?<=>r!W;[Er(Bt)_aX14SDC-raFs>582kIJQLs=O02JfW`GVnSF]A=`?ImI%es6p_cVg5APY34MN
%+pA1S-,\^dqrj\L&Ep@F/VDKc<n+A?MO@'W\*O](r6rR%SeP4EE(iKrGS?eu/;B%r?h+Xi!D!sY_+t*q&!rR-:*.K!feCNl@F.[^
%`>U/NJ0`EA=o7R(ELIuWjiEDV@2d<==m=3PTZR3Pg_!--%g&t4\Kg9cqe.+8on?f3TM3R<p@:W=bRsM(4f^<8MRK%(;dSbhC<Iu:
%A83b:S^./[Z[jRWbHkXO^t@NCFX&75:nSU_2B'aV0:F@?Sol:T\=g,gNfaU+KbJK?6fXDsBV_sCW@/%)dTeY%94A*igd,L0^XZWt
%KGBbTb5gba`"'%I'R4>U:8iJdB$=SVMM!:k!NcK/)D)i^+j]KcLNW#)@k1fJ;U6586*K>\5l$'[L(fX?*.bP\*0[+^,cC7DgH:Dj
%j.T/?!C`4:+i7rA+`U2G@W.1A"DXF0Mmd%o[Z?aKbi2<!5lQH@JX_<C7Gf,BA(HKJ'M)f,_#N<K]<th*AGMeb%K.<m97^C`\@LGN
%*kN'p$m]Kt1SB1HMGTuaaAe'uG7F02BDqhQbhRU7I54Tg*EdBV3XaGp>\C[Zg%&_?IL11kBNjI[;ufFs,&gsi7ppd2Xr<K)$qVr$
%[R!a*N0Wi0EMfF?TJ2h7(GQK?=(GnN2cN$5G6bieRh+7JM@LuRe:22Ej9(([<_WJVMTI)FU;>4frUJTKNqYO]-_eID;*su0+P_"8
%/[>iM+12>)6D*38Lm3@9Q'@["UWFa3@0;H0!>pe0+#6nlqtrkDXF]_5Dpf:KrMpFq*?bo4Rsfi5cMmY(f%QcL^a>A#@]7XAOhpCX
%]Esu8k,ua!?[rrme#-WWmQlnL&38CmfG+0aR9jc!>^1W@+bjm2U!Xq4RmYsrBg2>RN2B'r'u&0.*?DbZkY>X<W*c:;=4+]ef<+>l
%gg7R!Do=[4-#dRGA;n3XdIX1r0U=qj;P(AA.qt/R7'9Yj]86:A[@ri&rm4!tm%eJAq.#nubuBWrX#&mJ$_gq5%<n#GrV:!IEO3.d
%XWF$X!u9:r%f<-B*tkcKImh$Ki?86nLPI.V5<L-!Sad:0o7mR($rW]@AY+C/R'j^CjK&GG6dS/YI?c?'n*7d8pG&I!T,="\W/]\A
%*ms'[&+o-o.#4F]i?OT)6g_Fm)Ui$:R]ULGU&)b0#"[4V>][S)"q)@3fBY=4O-o88*a:E-IoOLN\#j'2<DtO<JnG$+i2SW2ASN51
%B'ur3s&q_4-VLfocb!S3YeL\^GX,'W8ZO4R]^L(C$bfg&_:W[+hVsiW6/2Yc^:8"S9%t8iL)4jK2N3S_aZ!\`FS&a(23)4+ZfFUi
%+W?e^21=>a9tHt2_/u\X>=>9'FIKtbG%$oZ7ce4<mY=R8Q"^'F./Y%%o2D5eZ/%k7LS8S_%F'juE,9m+]D!6JeUD?WY6NtC(nI9k
%arRq<=$B<n(tYH1.G33`E5_OJUM%;=I/_Y=r#;F&;tIWjm@aZ3(i4\`CkuGsMLT,\IO`h`Hk5'0D[,*+X0qij^"qSuKj`U`(OQaW
%jhp#G+,"/keejsGJ,*=-qrp!Ae,6i;]3Bk/$f?;ER*L%A?;$.Mc11aK++dp$YLoENp4q$he.pf`E4)=S[J5`kpTo8R:+sNhhnpW-
%@As'uE:;C?&\K^]qfLOsn_O.&+,7LR!mfs^9lQ$7d//fk&c=,m?ah*6R.icB<Yp.-GLqU9pI8>YnIag:VL]grXEo@JFMH]0iJiTR
%F:$fu>Md1,KPsd^>0&#A*4OtRan7'3E&upl4Fcj/^oTWihB+N=rqgmEc2,H:+#`F[ZM+UL]&2]LTsJWA^GgDg++Je8m.Ue(LQ+R3
%5H+:9Z%IGig_@HE:$5?#?5[TjQS:D\89U2G'NhkS,:$\8c#RHU%/4&3a@FW@8tS^+\m'onS9hu[J:<#<Rga/c4Zt8Sjq0/IQNoT5
%djWL4IUWd3R8t^7INIED_M[V;^j8+"0eseVEIR)H+ZuU(oO*@$ZV`?[fOU?\kq@-JejWSJbt3tQgqBX;Xu-i^CA:aB;EF&)<@/;4
%7;-"_6omel8^=BSb;6,3*jJrpesSd8(2I%4gK@[tZ/%gcNT&Q1oEEk!H&f-#F;&<mRVPP(?^X-]m9!L&Y^1+oAQ?MU1B4LK!Hq=)
%fquXIJD#G+[T!I/4<,&hXNje+r\Op4[1<3%0.LLt`6"p`_sF&X-6"-6L@p@::]@!]QV4n=-SftR70L9c@ZUuHG$)05O6-M?@^t)p
%luEF[P*cF-FE^ueq;);KR'iaIm_=]X$VEtX*S/:im1M:brj5O[b5_iUBSLa"IRti]G6ce:pW5<[V`cf/Q$MC07YF54<LA_YD_I/h
%h%+FajZgJbit(UlZonB4[H74^0!7,%`7;g.H['i/LI]rtIs?'dq8:*#bT@m3iXW`<`qk>0oF2[dAhsEK,g"?5LWn\^<9dbDKXTn:
%`D!2VD'HT8agu_ERm\'i3L)Gl3?fFcR0[QU#0?[4o`fRG`nNF[atSKq7d_F8dh(4OiI=PP?PLc"YnXA"I&-r!9-7j?^I^Ebf;sd8
%nrLQ)<grg[NbkP"4T-5PVS<[4IP\E@Hf'`+TFchV7`^%%QG=1IhijBW[+hC2mpqg$Pc2@oE8OQTr+^rP>8^#a5JElu7;2(sC$54F
%oCl5L^8pI%rC5FgeLCJeDu%nI^Sf_)pf=p=cXpT[oAaaNF5e]Yqq3O%C"*#tk668[:@`3:ehE?'Q^"s!>-\$T,MVAF,cp6[phg^*
%e$5h..S8_K=ZLps'%S#6Uu3G^_t-1*nlN0R0a9S#^3d;0Cg2<EH7.<mh[_ec#koPGDUOekpdPRsc_ma9n()]JN*h%/[#(8=PP>:`
%1L?.3hjBXOf&O83H;gfb0<!]6?>>YW;=3-#P\@o,!8kaHWt5cIdJ<&*(HY8a6J5_8ic'b7hmhM!'ZZi[a2R08O8ntcT0NA1ci<+!
%s7K/I0s;2hhnA[>R@!o@E*IPX^H:B)jiRBeDSj@K6+7m^G^%f"kFW'nl1l\nDkbEfJoC+6q*TSLP?UM$rb$e!>KS@]Jc*/"C6a3'
%j8F79B3b(s)Xp+$ZdL487dY[>1u!3gc=VHrmp0VjZfD-Lf[2A&#euq0FW?@qJMV^^ZRb$4+F5B1PWX@ZD.h@BTG[ps^6k1'H_X_0
%h!%8Fc=>Ug>r?)$G(96@;a**ODX6-r\C(XMYWYIl%ep8>23ua''Wfja3+AWmYkjnZH9HQ!$VON@RXi4O*#>:]S/sn<6[[l:]@.4X
%O3hkh&VDVQP;6Clb*<`ZO/&`k4PQ^2r`L0<1q;hu3!*BDW*lo(Y?7CPpX2IL7]gdMo9UCuSS@ebkXYeC16u?<8p2&OT'pJ/Po+2(
%GVa"r4Rjp7'ngWRj3^^1?M^WVGnM(iGTKF#]6D,J>k(27.Ya"d.bC[uhQ8=A*p9sl9M?`\q5,5RB\$/em'qKR2P,p\+6V*q,WO2c
%c9QRI2nu7[ej[,h"lVu2:,%"8a!ea,Ft4aV`tS]+n=m+R&oB7_PKD26oMWjJ(RWZE,71QU5;e+`qGYhJU6-V3kk<iSfY+QaIGLd*
%bYL7<oeZ_Y)I1T?YR-m96a+AhitL[-e\%`.*<cCKOk[qSMVL@(bOl/$K6Lc,gtJQ`UZn]K^CpE!)EJedQ:RS$iueEl?YE8G+!Hn8
%QQQiA8[T!'Q,#*++UgE.Dr]qq4o1]loO>Ql\WL+\;/IP7j5gl.q1;S&L[9j^"P+r'&n)Y9#pr#UBY'[TQ\lFRE#?/LfptE2Q'n7V
%Iu(6u(lp,&Z?B_#7OcKq1fC<Iqo;rn"`->cVnp]*k_bdQqS_;'E.X\!%?47PP4#]V7s*bT$R!,G9oL+ZH/@,"33#p9gHW?Q4TEWR
%*RDLp`p3@Im]=.<'=V!fnAN!TD*;r]qZ<Xi?9T,`^uX.^IT12lNLmb/Tn!7L.&Br);Ba\'U8BsT<;IW0\imbo?e/ar4STN"/H"XE
%)$=4^e+\`NO5anf``_\YFc4#"TD6FVcu(?I?CtQq`h!sMf_miKd^Z(:o%RB2*Rq?TN:V[&J9SsGp_f$If4$dG2T)CTR`o==[[GZh
%M2Vho]:$eBK8AB&aki1S]DOi[f2EZ;I*sqKAi=&7@fBE(rMgOuNBT2knWId)@<T&K/7/k@7b^E)Agu_7:F/+GIQM'sb;bukf8Okp
%ps;@1HTZ6rCtkMer&\Vu0GKdf/@CDk%n#'?)IXGGe&af,4jAC&dCn.n/HtB++Zl,^M?ClN8G^d,Xq)3%Rp,GAGHi[**sUW268L'[
%[q6u;<khd7o[>B-VU]\&pTQG;9_A16U^B6A@UWGSJ(sVo@9P3UU\&d0rE"h^^P_K0QcdFRRZu,gY7o=0]1.WjhI"USnRcfGXJsPr
%nW#Y5+k\KBR?h&PjXqG/Wd32-?K!9`kk3IfnKh3!^ZZ/UJ%S8AnsP;.(V&ppfs&7J;&d&ET8D=DfR&,/VV@!sO59"":IK,MpBQ0^
%J+,O03T><[7!&"u1[uG:n3f\-*V"?`O`n)^Oi?bAcTQO.FB&?s,$rY6D'5?M.cisZ'2k3j4CcE$UNqH$k<l55Z/SeF+7aLCmP7,L
%Red$Z@#.)aa$MCo`Q#DZh9,sk=R#$&T4%=aXssuoag1Z\g$tG'YS9Nb(e`5%$[giEE3Ocjr6in9-GD9CB^Z28O"t-X#2SZX@=l\G
%^u\Zp9cSiYf\`7.XiHIhcEoq>/%1juDP)?)Da2*Y(t,e,/gk#BC,DZedk=mkk9,bH8BLfXs7IGs$d71^a&HSBn%QY8*-&'tR"%Zs
%qIQUPguE0W9@'6fMt(UmO1(qAA0HO5d?I_(V:I3;1hIHLkXjB!5A'3;"`'B]<aN\4GfKOa7e7UTj"1E(JV1n&rN_'4JhIW8Fc:g'
%&C?C@R;Om_=5>?ED7&,e_pqIf]ue8q;]h'DPe(d;14@4,k!;gQgM0:(W!<:i"33!8@u/4\G&/>Wrnol;?C]X2K'bkfs5'7t^IHr'
%p=\m#s!D_kK>"^sR(,=oRl1HEn[.b=[\'\kRLK%2K!qlMd(1cW7lReFMHdP6hlXJ4dXJ[r-:[WdqKAVFI(9<V"eJQL3X4KD`-$dp
%rG(,I6Lr*Qgm?aql^TMh;aW>5lc?R:lr-825%]fb->'r!2=?3F;o+]"Ri'p]YnRYmE0>H#0F-qt.(Ek\[=hDer7(3:O'Ylc-dD6k
%8giLfHSA4O#95$[[=R^48@'Qn49aifB0*3fNb#"O2G^O6pQ:_UQ;l[&l^kY!27S.PrZ>;;N!E*TrW*ZT;+GB2:O6Xt^jB*8\rAO*
%>m#^"]A+&=Mi4t,]]TJPak]H_/7g5CP]K15qs'KFL48\2n['4d,h%1jd21T[Z1biYJtjOe2Do1!XF1:RC?Nf9/bO_j!W1YNN0E$f
%k>0QuH4G1,&PKHtJ\:ZHmnBb1dg"*h:X(L\)+gZ/?@[RJ9Ue+O:%O*^n.`K?6<QPqV7&+X;CPZ6PNSQjaf5E$8=i!=&YpeE7jCBA
%5Bo3C9T6S^dakQf"3N:h*N7%M>8.fkrEE'Zj?KpS=r+%Q2b_Z/cdca.-DbqBPPhUs8A9+Arp[s0XpTZ'o4:c#cWdT2jPcjA_^`u;
%)*-5d9<)JEoac(-i+P30:h\(]e`K97V:mFt!Y#`s;_XVf[WS4,O[o/F<@-u0)X2F;:1X^iKm9T;g![G[FI"nqFs'k&G7*<E;,/RP
%bnXknb#6f:BocF:4shGEIu9&rXEE!:n08d+^O>FFNj!4/O:)8aetTp6?5Hd3I:C-,[<qV,!bfogDAkY%K'gBB4q+l>k8O*;)\_D0
%=[1f`ApLh/e)TME_8a5KS)pD@)4OOo4.pGSd5s*3V>Q>LP!,974&q8%^5_d`0\D+uS'JP4ZjAYVkY'Ba^Cho>[Wg2"bcZB9\rQLQ
%NK`.Bp5W@TfW,Lp<tet[4F<sF[_1.[,cUsAs(`rECj,hWfud0P(@MIg&]\ge,hHFNC%X[SJY%3Xf4G;VXa$Z2V(Gc_&oBk(!W+iF
%Y\X'Le+T80@,Dfa_*ZJE5+ld?%=H.JVtccd.?*46O/Vqhc1FlF!+pZ04282%]+o[Yaf)at,9?8(U^.HongZ*#Fnr_upItaOMt-L0
%.9-=2ga:AB)Kgud]T%7:$%J`J2G\Q;H_T<-I?+0dcZgJ<^_;1;T$-_Ccf<W$)h!hjs5.^?9OpV7jH<lUI>^eJF8+m>Xm/QV,uN@O
%ST!]6<))PhHkQ/:<>3K#ZAfg"JH]Z7AD=_Y2'gY+"rJP_qg5"gLQAd>*=5kr7\?;H-6+\P6&G,-R^`K@n9eJp.I4?(aU3)'n(7Y_
%O*4)g9\@BH49WG,.I_A;fVtQ7+ijaCb"u=;,PT+>Z5;A`51/L*'("XHm)se1PSe)HiY20U5a<(,S3VuG]?`Lk\X_/-,%?ZV17VuY
%?#YC-m"fgBgGX@,.(3*5m2Y+FHoE+"Z5Ze[SZqk`M.^MQFS"7U5?5>ZF4hX^M[&`WQhNup1?3!DZ:d84m,I.e1#!jM.*K0#I^a)u
%(@7,BReXl9NB5A1`A5$;TU`PM`ib?fk5cLb["%n9XADP@k@Ym`"+ls%5mgDGp=b^bB[IL87D07:g^a'D:SNdec#r`DDAd4g9RiGj
%rI`,01qFk_(Z@kM1DeOPX)+Z]JT,C7H^Q@&=HoG]I"LsRW)m[6,[`sOD!a[88F?H?a.As=LeK$2[UJtTIA9KVWTT0=U^Ls)C_,q0
%o"<G^k%:7[GPama0%@\QDK9dVOTS1oc'un,XHK#8Z\K-g%@K=.4'BBCDAuInmNC&:HPMb`Mg,,;`P:VbC<+,;Kbl^U97+u2A3(LJ
%;LFjKQdE+W#Nldj]pl9m^\$)+E=[NWZKL*$XnY]j<DD;3b"FLHP\/WY3G>;N"MJM]d/;i*rFPU?3Q.<QIQ1EqYCa*6h$EjtWW\S5
%Z%B5`jaK8X/uK<i9UFesY;fjB=qU%KIY+1R7kR(D@!o"s+>d$0I"Gb`'7j)KDfrgh^Zm`>HP%#@T:uS??G%R_,eqZYgB:+f@)cC'
%\L>!@&=@uR+MXoiLuPUO^<pZ"gB,ErYpU2iH/Qc_1`[_HlIm$$VS3#T+X^'.a@JQR)S>fJ-40PN\[(GH`hjZD4L^V7Fbjhrp(tej
%aqK)1UETSpXXts56ga'uXtGJQ&%e*epuFHd'.OEZenLV_0AQl:SY-_l'5F&4pp@99S:kC`ltV%j(K-7Anj>/G!ZePkj\F/;)\Y7k
%30u^fEHg9cDkKiP]:]kbjs(Aq2!g^7QqsY.<PWh$^6:*sX<;&rhHMn/d#F9.V14Ne&7T4OA"X6F_gm.&_OtaM\GYd!%3Te^)W4/b
%h29.s>u9*k\/o.8hqa[PWC?lpn*5=B-[PHeM8IKTRuGTgKZcoX^X.n%ZEKA_ZmTsi-)-[RhsWti*Ki'd3rZW\612CPc9Fh$-WIG3
%$AtTeL:W>NJhDC2TeLFsf?E?tp<>ril*UWQQnTOXGO56uB`r$#jE7jD[(^]Mci),Mc;WMip2q9r!i739@G%/ZIU@nZN#h%cJ--7Z
%aoO!P.NpoMPFeF`6FO;Y>jI'3fWR^m5@_7*VM&%^o=Yg5B/;CQ8<;kfjc_N/K,gTY@Y:_]o=6A:Ar[8O>42@],$YLU6]H6VodN$q
%hb3h.j?pReA!7BXa#J^RlKrjDk]5;V?*I4'i*'<(GDG7E6;LPtZYPqRrWt>K61'=D-r:t!fJsec#`h&5QX(&6+ZV&e38do!)eY%I
%=a)_gN^j`!et8@=P8K:i/2faP\/<S6HbS-QKY+R>^<@ufq[>7(ck(>.SB3Tp@t6)i9W?H5CZQ*TBY?VXFKh:"GLM2tbN)=jk1]"$
%'fC:sSt(h4PW>GW:4@G+((NE);^kKPM[gbqc?8^:ES:f87^oFpXF*/OJYK$IE;pSn3UMKkBGnuFaLan38s](0/)sS^:ZmmnjeQ_-
%gU;N=9IK&0V\;*nh7;<OM"A#)j%NIlK'U`48XAk[F0QCc^3)cgm>]ZA1YeSp%AFl<msnVI3+i^Xn]Z!`rAj5:_NsnL7nh:k!hI][
%FjpZ'@+S32FDjHnmWOjES&`Y;:r!`6l,aP+mBk3q:>>KfSXm`or^ZcX-6Ji"]eF7Rj=TitqSRuG)rng8:XJ45"1mE%/@T$U%a?Md
%T"A0O-f%j@1Fqpi7r(8.>F<kG\pf;B4k\XrmUV4<Y#aC.f0kJ]n)tfdJ(A2=!P6!g6I5W'eWrSXSb=e/hDj-(J]f:]AuBDU33qkd
%%-)@0GNrU2CaI4rNL.EHV0Zc7`WR?j-pp^&Sp&Y],+=nBZKh0p)CT1'GRU&3lGb=Z!0`IEcC<57q()8+EA3?jbht:Y'FHMV>B(V7
%[l=1ASsp,[Fga`arSO0oEMK$gRC!"H7F:9Hd.CrI/GPPA2/0Ahm/<e<jE&!8i%pdD9Du`uX,;aG#338BJBShp_#_J:;*X!D'`KAa
%`nPn""Rt4!f(,k]T"3;*$2rpuN-j#ja.JX9TMX^;lCHJmh*0Lf%a,\G)1O$ep"0H8#QdD?>Q_bR"s>c>:^f4IN.II7-9ZeZ<X9f6
%K'fAE97P]81`Y.Dp2g0:+#o@>pP[!a:6pW47hIbP%=`D+UC&!649rL?c7IArVgP8PD)FgL-lZSLCkU$Wb*C+NHg[e_%_R+QWLWVb
%J1*!N3+[QL8!kOlh\Lok2sQ87ad\iW-XBb+.^(:s5n;7n!VDQX\!#Pt)GD<!Td#ic#6rTDUECLc62:sb(bcQ_3FjkTg(,c)T4b;I
%5l3>0"\=lX_W@OApB%;sB9TOMJH_)Pj4Jjm!?MZuVTjG+]3-t;e7\l=8h27,V5Yp7nMl(a8Q3Dl;GJ>G@RG54'qe:2C*Zp=m9IeB
%rCd73J8*ldm?"R@'0TXq`/02J00F-H`;m@e\42)u+ZQq#4Z%E<D!@&$BCdWK)"')\f0=6*;?YH,j0o#L6ZJuoH6n#04';_^!l`Md
%^M,Fe@o=G?'"a7?6.etg2r(l<CCJg4Ri6d"^t+IXlPJ9ABq^!mK=k`>B0G%LC0Zlj[WJ=1'6$11+0fnm>#J;G_8HQ9F!jZYon7=a
%m"`h%Jj=#k+/n1jYClKmib>!um_Kq#La;B\B[0G59?6Wdr-(3JX3foS@MW!*2mGF\EusQ"SXn,'!7j'4bl'%Irl1;7^QGRK0[=%e
%'lrGDo\%+g%#egXh$$Sc<SNB@\?PH'UE;ig\;tblR.7e5Eps+f0p<;K<7bP?aoN":Z-EJ'0,q-:7t$eHcaP8`%4ST7Ck9F(?#qBN
%Z\@,$ocY(SnCV/6cE35Me0h09XmO(H>24Q8DCr$>+R:eM[<T+7LG]QBICqCorqFO7,CmILhL,r8K2_O$+e;KB3$S&pdbrUO9/IV*
%fB@V9F;FgAW[N8K08Nom/.Nf=jt)l`]!Wb,UN[:,4,-^]\\jW+nDoU,Es#s"Sj42>KHjk".,es!%8K*%&0:?&UB>PqUB>c"UB<L/
%k#hTcoM$laFRJk#.r;CQ=.ug7S?f0OCi3ZH,V@#J#Oj)GqO%QWJg%7GO0bgRDD0`tL46Uus(q_U\9pY:0J/\DR`%E]?O/;QR1K'B
%mRFeqjhX1\l_"1UmnfMVr^b[?`AY0N<[+YTO*h"'qRFti</:n#'RT>2l=W$+6/mVR]5m6HZ@J47d5:*uVP/<!?%PEK/e4<S_+5]B
%nFfoIMR#A>"(GYj_NMZcRGYGVAtI(5*:=sC-V^;gB2.Q$n'BL%q-o.h/@L2c&7rdP,K[M@G't_l2(hG@M?,TG:h'\Wk-Yb@gd*eZ
%4kRJg!b:<p,dl#oGlYIdO_K1qHP9tO8TLf33usF/@%V]XXdhWi:.C!nBW8N#3)a**<X&R=6;FtI\i#iACb;<eJc,[8ZJsoV1Wj/X
%<$dUsPkW7$KE6.-,/)h.8))g.kBdr4UJ)fA^"bp,m*\?LklNk9A9#^T?ma,,NTK8,aY&N<I7\qIJ:(rFgp)8&)81c$=3"2djF#nf
%le=I%)I's@TcY?[kGU.J)PTD))PK[f#ukS"DnI:*hgL'G)jrBLfjb00Pq\e$@=FUtS.Hb&N^RnDk0L@(!91<6KIec=@:NMOV/tsH
%-gW5DEl7%4s&_EVRCV*DeHn(DZFbp7-iGH#+SZt7jQd-,GAkSZ=!CMXFK+ab?T92kBVZ6^UmXJ19hBg$Z.'(??[0HM[`1r&f'cAt
%-SL;#lPG<q-9U)t=@cB+Yb%e!+S,]*Yjn.D9(Q!Tf<*rBTSt\=l26[#TcKX%>\HHif:B.NWNjm^nXJ##1S^],IM'R/0D(Zq=Z:j7
%77%@"\4R.igr>#,CO*'>Y3u,&jb>!A[OnXH4%u1YFj-[/A9m,?)r$f3SQiiliF<[#V<aNGXS?)PpBT>in4d:jDlK0/5pZbdX&ok4
%rGY&/GK%@W$o>`/VEC#V7q#5fd<%;"mmFdMV2`l48tF)78l\H-Cm:aE6="kYLPVp?$6..p9IeWKQ_dB+0Q(Cp2l=Ir<i4dfRrR+#
%SZtLYBVV1$D31#mR7H@/Z'G:+#.9dZ3CXY`UT_m#>Cf"!:e'79XF6I<'N.?\OEk7QJ):):aGQ,4+<uZ?.7"+]#X:>re0"FoUdKOS
%jEFAuZTW+rOA)gl+PH^s&;h>+Y/24m1h7Mf!CM#O$(3&E(`M5jEs*<'>f]=MP^loV#9"$fQom;&(dkLu#@\D*_MeD(mQ9T#<<b%j
%6eC'&RP>P]6X'd$47ZXr;D4E^KofoY+>t&.Jd&=X:oA\X1`Gr\%YZ%4"lED+\=iUW^-u+.!SU,&J-eTFiarlWjEEVSbG2g4`4[-m
%3bB.=#<'4toQWDTIuq<!j29pd^jZMVCnB.u\?A-7Zp7ZPV/US_am.uI!)!h!\M;FAbAHYf^lGU?Sri+hXD)W6EUf4p1]FJ41=I[\
%TD?DTOR1BUo6V1'F7A#YK9Qf1D9J7JP)^%2Es&'rj<P'JK9##F+6<$W"4]\U;HZl21-BJO@NdO+?Y^h;6K[4_WE=7JB^UG&3_1?!
%Bk$[[6&Op]_W&'p!:2V^o;WO"_$fF[K]-b\_<&>@5<5sEI%3..P+P\4b"js:Sl`Atq%5:Za^*@Ks6r8?neWW["F$IYLk;6P^d,c@
%BpXR?NM1?'A*TXo!!deBbJo4N?gM"`<EsG>/C>/q/>9W($0cBh_$MB,M\t3Z'WD>ih<,^^KEp\[k0N2Pk>HM:m+PUfK\l%VljL%9
%fTra;/?[>1KnHVkHp,*3IoRp)j(F1.d,R^3e-S-ZEWX:9c_\XTc8R@g5;tKM2E*je\iXER<="*58mfoY!;hMUEQj#okFl/R8XH3I
%Nub&K7n73-`b:[':<9u.'0,]4/iCp2?auX(gt)DRh"k:?mY$&[MYM)b\=@pIpAJ$69Fn&o1Y'1#(`+epYP,P:C=2T.ndP&-SkGW9
%F!i>SD"q7M*9qq3EqXQao4N.9F/cc-hWnlXn>3tG.FXA`ZZis<EWPX)'snd0d6igK^J)76r4Qd&&[=8\TB4tcm+W't5C[A%Z6FbK
%obLYZ[@TRuQ%#^6^8tul2!su4mK(esk:Y)QSu4T8]K^WOfMrP5$6a6"?Uf/8Hj+Gs_h4&#`@'uT0ZMi[dJ[frMpV,';Z)OHO%dF/
%o#jGZ>GsM_4CR:3rqHdP8=/@J>uGf&$L5m&&!3AH[s@sn3TXN9ro=lFcR+5%km'r]C"8Zo0Y&o/(+_>S$Ib\+TOufnS[5"9>#WmQ
%&p(<o"DRYqTiNHf1T#@DL[F@kMjN!pEs!&JTP28L[rc\/lABuQLF<F.YX2.0rk$mj.iUM;#G!WV"p@kZd`BC(P!UJj<Gt>W=7==+
%\!(&["o`2IH\FktOKuQN6%#Ep#(Zf\([j=W1Z'YU[!TSg.*>N0W3,Mc.bX]Ln;#Q.@*nOL@'PL;_dWD[SeQtcH-4Q"BQ9jeXXs)p
%dd:nNpB@G7GFF:!AQjP_JV.t:8A;'-m+jM'f^oq@f16iA!k*_f6kit0Gn38f/H0?tnk3T6J^UijI^:NX[%A>AWK:7MD^#9WLCd!t
%A.R1p"B'dkWIHY<p!D:U:6_,R3)]a3*G/8L*CdaGYQt[HZn'YAb=s':.uVH]6A(as&1As>Nl@]"$`4A*Y<KJPO@!5P5S+)V1HdYY
%8Ws-SQr]cVTW!jLepK@85mUSBH'K$gM-],9,k,Hbnu4='>-P#;U"X2BSlV4C:;@21GR*h"q;07_!>\["#>FsDrT0SC?saJR)>hX,
%Vg%]Ga*D&T`3i7K3I)oKg%MiuW<P)SYi;sOMlS2d*UTE>&D>sd&#@t`Gk%BfLPu_L]3aYZmft4iW7I.p34P*T&aqHRW&RJqcnG"q
%Hd"[iHBMkdbt[er:D0g`*:#2]=6>EV"T!BqC8$innn$tVWVCS!L2*nN%>eSBY,ji>7&]`Nmd<gqZmmJ,lF>t\:X$Te.RtBs6%VDQ
%-"8nh%aA,Z[cu]V"7GA[*!7a-;4%sc_13%AW)ueG/!MYO%i%97\/PpS&B#MrKLHuTKSceV$bt2V,llGZQj$uZS\G17M(^.rliMnN
%49'64a=Q741W<lYF^nPPE>Z/S;lej7cqdY*R_#$)\ZF]9I,@B8&_bSFR'3X9a!#uSeA23d8MP_Lr^J^^%g?:c53"g4&*F+d0P?kI
%P?bq9-5,<;2S`SgJb]-$bu8'nb>/%u'NFH:c0u;uY\d&tpT$"I@&m,0RBk^;[?l7l`9_cf=NZd]"cJVk,4UnlPE'Y(Y_$QAc>\@6
%\D=0ZmlUQR0)7$'L]sB47Qf!NF]CmBAWPj.e-AYF46-pn/l-5)N$)rFdJ!E!Qf1#gY/<q%nhT1gb\AP&b[Zd.m;H+o>bm0>+OPt.
%'[M=_=3qsnQo_cL@6@nrIk=l.J*X\s]&H)cbgU87$95N[/4'W57hWGao_7\9.kXXGP_gm"j%e%CM9q%%;4E&i4k]rk,\><(5K5FX
%:37jP/SDYXhsuOoWlq-#U*"G:G/+8YNRtfm31I?D>\2cjOpK1t.r7?JLtAl;Vmq^7lPY0C7IB[.KE!"Hj\:-)bp70\n9"8^YL2FR
%1o9$<GbLCT8\a/_=c.3YC`KLK=53cTeol=W*2tH(/DOVP$-n@]YLk>$+:(]NC<"NlgI#YOmS4dGVJekYG=-S,#qY+&Bett!=E=;e
%7R/&kV:_%'(MjVBpL.a)n6Ds4qOhZRbC?9iC5aDsRsCpNPM+FXp8bs^3UG;a=4^a!hCmjA:`[6^D>RPl!0K4[^kKu`.oT7c9O=BE
%O7@VpJcTla!8B5ERgIGFbXgCSq?/t9G3OXdYFc`o"kuC]pthG>rRTVMG(T6\\$)U`[D0HoAA=[t1m8r21k91-rTtVQ[8#C/9Rjb7
%,U=+B2gi5(gV;+toZO'Vrf>;<rj4E+r#mFZ1#oPh3Ss!%9V+1DZkYCW9e33t2jul/r/B6Ac<]p&Co\'k-ZO;6e'+hS_JV9PDq6U\
%5>!cm0r'terV!Ss63F^KVdj'4UDl5F#&_@^;Yc"NDKfsrRMf:aD&%>F7spahT9%+tH8Bm7_EOE>RHW/,a$SMLh$W5qfX(CH4&O`"
%0#1hP^0_tSo1$u8p^98LH(1Lu$AFaUEIAeor<n6_?YA_,F>Gp'e48<kX4fO'0'J-@m3t9(EONQVgh;^XXEf.H`^nlHeRPLbkDQnF
%f4kWkWh'.c?Z)jth,/[V]#iPjpT#dbl[QH2p[I&<D(FIMM4<k8\%I3#[o5_5lE-b4=dd!1(O!'I&BgY=nh^"+OYRbtk.I."C;5-M
%0`%u)mpDp[='[&Ss5c_I%c?crGFISUVN@1d>`R^?lTM3N[+7'.b9Y3$n*'XKQ#D045]kP8d=^B.-!3K\I1G)(1<:TE@X-%Nh8Ml_
%s%IVpCc)hRipf9<gg[C-KfP;f`U0G3"SYt,p=K=b6f0+VnQe/fmhj>W94#?4o=b-i)u_uE3Z!1)(s_k&0/).]Ddk)$d]NB=aS*Na
%0SR0sT,FMKT?%K%q.I"NH=6]Bq-bL#rS@r;`T<`6&c51?q=j'/Fe@<u1WB"a1V$sui/)9TSf7+tHnd@=B/7If-[L!^R,\!=A<$9S
%K_OYh8JQ[uF%h>a'=hU6^_>C2?R8"tR1(hon;/-j@>hc[MbM:6'7"+o=aY]GR21#oQgB(AnG(PZp:BF@hLVh^KC>Eo=C':)(:EgH
%c[gP"JfXJ]'!,oD!/L76:8H%`iWL@KV;bAK:J2nH8XsSNc^0^"=QG6^Pbqm+D9VRDh(EV)'SUo<D2lZPhL=nrPO)iHK$1)-eQ%X<
%^&("GB()@D=KcT0?%XDQ@e[Noj7M=3ZOu1ZH!F`%,r`2SK%%oYAXlEEQ\"ii?J^S`N-,u.D0>1YQ;IDT)OI/hlpBK\?&lXLKd7pL
%?SZb710XY(8,rMQ1Kj[t9),<RdH4.R+PPr3cue<h%mS?HDLS[e`#Z[<Y+.!_ZAq+8A3KeemJYH4EqA=4(D!tP:CjVM0-rqZ%"3ds
%.&:W7]tcULg.T*em(_sYI="f1W;:7aX+*c&^7&=uTqlC)%3qBpUcUB%rko4PaehJed-:]tPHbA)%>Fpf6'^KbfS.Ys<h*7MK'bkS
%hj[X@>LW;HY.N:Q@uk:bh1T;eWIFI:\Np$s@jAVUd:=O#^kDo.f:?:m^#NuZZdX*[Y9ptX5!5QVe#n:.!#,#KHtec$#>*1.h"Yf>
%[P&\_.6YH$j7-7+l@4&f^*Vcf7cVnu:Zu%B@f=KXY'ttHlWsI8^L-T\-[8,T\kt`,>l/i6mXEM<6Dc#/F`0APfLoLo>0=r*`kp=d
%<I8,b[0U3?l"gi&;u]SgHlX3^*FUKPN$Yf_C=@CV]6!A^2jFI8S8Gb@Wn]o-PFF4[_]gn)EX]9<G;j4C?(QQ0AV_pQ1=fl0a!sN@
%h@^f`^0F0oD7u<4*TlW?p!;:Gb>6Y@:ZKf(ZH+6-0[/CJ*9UZ8?IFRP-ldZ1<ILjkYd.ac=luOoirc[';0u&npV^)[OYX=Wo`aCe
%)bl"I_kRab"p*,^CSQ%A.lcj4\bBV$%tAs>Di28-0qiLH5/@Mn;/:*tN#esqXg>AR*.2I+_F42i:rb<a$NnrF&U$c>IKO^T*OdJa
%GdcHK'?g=1'^]#GZ/9,Nr<N![,U,\cWs@>_.'8FagGVAQq*%0-#+?J?;DUm+q+dFZ:?J(mgNAM&oS`EO,%?E&$ttY0dED8+oWP&2
%5$O9@8j'12TC5K9r2j]1ffA5ZDr8r#/Gpa?p0PtQ1>/uS/[\ZS]f3NIQc8F@`?/eir=AAJT=QBHD@K2F_%SlZ#LNdJdA3A'cfts0
%QEt.krRO/(JM-e@?p):!IY)]&qRft=apLY6CM;/#RnAb+hVLW;)M7"'l)cEZ5A7DpN&mo>hStoF76uLX<&K@h?1:!bhJ\*gj-hSb
%h3dE$IEj.h?86A4H2A,U=1/o4D:\L$EIo9Z]mHMSfQ,QCR0VIF`5r,RI@_Ik]b=N:=AB*-Krm!KJQD:(i'XHrPesgQcp91u5Vnh9
%,7ri*4gh[B:ntr'EER/[/cC2pkj7-3/2qqR/2(>a!A.M<IsN/I0)=GT^LRBC#9!t[5q_Hd5Q9\-I/a%^5Q@("rmsC)gFIi%$$fYM
%qYY_lc43)E/Y.#McV?d'k:mi`^M,0>BHS\]b2oPK/<6IGn%%Kc>FPu%i6_U>=`UqX>2Hu:'j<N,r,eNNY'>0[YDUuEDVf,*e2/g4
%jqlLK5&kYV3K`.65ZjQjANETPZ6,4F#qqer2213M(VmQTTp0I`_\%3:NoNqMj6T-s":eWiaro\=Cj&I29,rm%/pThh,B"SF[qqh#
%3*LdPO9*5m^)@!7>KZW0Q$r`B3]K'"eCm+9jTn7b$gsp<<,i[b6.e)L(1Q]@/6,UYD9kX&<T,'Bh:L\lo\o2E/#-Y=L!BuV`'!q*
%'`4LgRI0(/p[Y:;q"[_n+S)4pKIhr8K<E`p+2B$J=Xcic#9u\;@A=8^TM4BF"4;YI<WQ0\4Qb<NWA"&XgYk-pA/^[^cllEpaDSaW
%CO_8+4n"?g"8+!AG7XF\g9$Qc;PQbZ$PT`1%CCr8j1J'@0U#&;3hgQsA"i[c<0G<9;D'F4/R"fiH(UF,23?@Kfbf((En<8p^&UDi
%koieS+V)lY__JfH@!,OSj3.44V7QZ26/V[qhC+(oPf2>QrhOmS;"hVniaC1Nh'F_p-1*#Ha,1Z>gggO6ltO%g8/P@Jd6(NLB"eL`
%f(VF>cm';%CL`mWOVsl6iqU1b;.ad#8I!QuLj"g>`'TX0Tk4j+(f]$-[6L-o3/N[u"f;Ts,^M.6]&\%2jeFRZGX%_^Pm>br.;@>9
%`fA+"T!eKBj-Rga8GR9:30FodhTM+IPkA@c,YdfWI#1ANc^BS74Q9)Xb]l'jlFB2\Pf1VgHZT0S[C&ONU3)7Z6tR)R[bo0)msZI?
%3]I!FAD$SBSAH,biAY4-?K2aJRH\*qYLG.fp'n2Z<BBFuVS)$P6T"IRN+IB*7\NXfIf>QBH_cai"Wq(*SsYj8l8lCG,0C\t`N<,u
%LeIg)TZam,S/=([()6!K`>B@Y5.j<HrVh09-'#n=gdgiQroX/Q#.><%rWWBF^tq#!Zo+%`M'rii7__f7jY-C<hpu21F6+.iK3Na@
%A8>-R)02!IR]V$Qb/Dm]?2.lipl1b$gir%OK&m(X]<u*7fXP9?<$m*eq'f7pXN2H7rc]aW=*BFE2<d1FlrJ/+e6'-9W''sdG)/qr
%niL74VCn-iYueZHqWTLRqpk>=2`;_EWqrhQK%Bp0OR:1]2QL=\Z)7GY.cI!p],I![MX7$Us*J8/=Rn;agip+!c0T^s6_s4OSpfAS
%5rQtf5V`uK#[a]+Qtd@XLdmAB%dd+n2H=%Z-!WM,^'P.BSJZ*.)%Pm2hhJLfU%-N7]+,7uGt%J3A:Gup)g&idA+HWhnt8>\;hGn9
%i[`eOphEhTe=C&WW_oMUqQ<2Bb*`N7V&5qHkIXu<OpsbeKabmO*;Oc3^D:t,hY-/m9$)2#r(c'dT^LEq^0g'gf:V#--=?D:GCRjA
%4j7!$_p38O&fsqp1q'h7a+!CP*G]iTST?epDL9"A-i[sZpZl+GhH0eCh1'n^MTN7+rp"=sU&t,I*W=m@dJqKWUn3$Z-up_qmgDT7
%aRJV:A9TfA1EcLK5<]aD*,/:=$;1$e`]M)$4hgI3^grcGmgDkTiV*O(p$d=GP@$>So'<[h$d4EV-tTL4EH^*TMilJdN>;U\p8I:C
%BffiD4?H6qVUQb=a<m`7gIIWlrm5;>F>hNRo:q&?%"87$*Rr)1+-^0r$Ah`.B2=r[Q7tiCV^(Gu=eDt5<'FMd6Bna@@T:Xt#[:K"
%idc9HS?H&@?a8r5\%^96mL1VC9?$"Xin:T-4.C&7mf"8s*]F!VT<>T_\2gbDaD"FSWKhJ9.@s?VW"Q:d[oSJSJ=l:A:YOKae''R%
%6HY&R$9hJ)@[EC0!Yi,nR]kB-TU@aS7+q0e8=-W'B/e8k7HY<u$LK-c."+ElpdDQ$?gMff]>K(]B;I8.1>MU1C^62Fe.0oV-^pCk
%i@61u!a9eh6Ab:T?8KN'KJTAY,?HEiO=+A]g)d6#r(oL4T41ZjjB+*h6NZ<$OI0cV1P`+)qPe!IBcQ)Xatk:2rrN_cogWgPs4RA^
%himnLq%EMK1_icA=$!<#S'gBlBl@3hjhX1\l^p!HNR93*\F_+!H%Q*i7P@K_A=BJ0X\kGS"Xm$D"#@lZ"d84RP$VZMWh!*>W`'>!
%Ccq*="?u\.3@HW*[4s`hp'F9,V^I+FM0es4h]J-!V.''e01PkBAT2V'SRsK.9!?3#F:^19%rKhPH;^%0mBfkin#QRHVTFFXUW1[r
%2_W\1Q)<C!\=ZRF8OZm,:HlBcd$tV4O!I#&:H':QfX]Pi"]-Z]L)]/ka"0"+&k6Yg<[f_X#3m8As00K'T^CqcjB0`=M9*l7i;A$p
%]A(H+(:PZb=@1.A7B+<8]nH*]e]Gr@`,Ulki;'"!$+Aq!nR/YM8nJ_mAqMm>q<XEoBH0@^,l7YrV0]/=hZ,DFDJGGkj:2O'=$f<U
%Ep2)dc8::-pi?7.7Oi*Fp\$\kXE*9\7SbKb1a\!Mb7AT;>F"9trc6^B0cplq9+Z/q`9H>,j=."=L;UX;30r$\TQQodorjK`_.;?0
%^0#;Y;a7ff_jB3"F2cGT#sbLdi5e"dRIhO[Kh`mg9t;Xbfja5p1C3HiSdCa`8:(mr:M4S*8]?4S^A^amkfBQ0E%AAoM*cpH9Rn-1
%a:<<'j'TrM7OP,_#CZLd".,k"BpOlWdh[%l_PW6LbQ*kF>NFE5E(Fb)F>f5NG'l.<[Wd1oXO#,Kkrj3mOr\!b/Y2e*I@QXP3`?cV
%oHf^/lA*:lCP5r$I^J[p2uO,ln)12USD"K(KL01@>r9!(]TTNKB'Ur8\hru,csdmGNddr$2U[$@8Bhjj^$`jp2e`IZ+AGcMW8JH"
%"jiIRjL<%)&HU^5Rm=7foKsqFe&`uaPDA6lN*WS'i?UneRUe@I8aB/-D,;+LnksTaMIi$c;GaSe<?sG,"Wf5d<jd5HX^H.N@e>Im
%\Rl8QBXRq9801?YG+Z(5VP82*4r2)(X_$f=CKAji)pEjN'GK70OP=#:)-41q;fP]bEu6K>$8QYr/OI1k]ZAA^Q?+1BbC68QJPGg3
%HeZ>p[/I!J\A@^Uk](`4ZNGD>VqsMtJ@BR8dBbe)!^et0@-E!H.dh_XeOBd\3VM&C[)-BC#ia?gjt.8pNW&@sd.q&Q,-)LBCGS,7
%>/lN&HIe$d;pacRB8i[3)k]@H,'N^J&CTH.YqqT[_2;+*iJ4NS3c`d#14^p@9>',7KB@JAc3(g:=9G;tUYdT-^@&u?)i@p\(d+3\
%gbZrIk5Intb7F/Mq>H(5^0cKdB8u/m^J,Kj$`lEn$6!]"5"):R2]1dq->TrboSP>fXU88+/4i6>mU#43f>P$?6Z<FVS`'s3QKIrt
%)R"!>]SJltfA@f$BRN/]%m:PBh*""\Vf/p&hV:f#^F>AObF78SqgRi0l3Gb7]0"juDg;-7&dL'c6AZ'2UndAVBoL\+>_X1Ydj&J^
%gB*e.A`=C/dOqk!>aLP?h)7Wp4;#R20(<I7&'hMqq*Y6!2ai':+#DTtIOM/R*V[qEUgCT@L7!%#CP9EEd&HO4m6)i_h3(IrBl`:Y
%%@F_Xm@MV:p/N!^B@LHnl&\&Sa"R:Pn)kNM9e3W=l[ns0bPm2YQ6p8?#e?A4Ob[/5rNeB;Qpc;7`Z;R-db2BMLS^/nO7;,sk<Iqj
%iM.=a5U+rg<"89$d>0EK>*q5JI9(J$H#lP?l([@YUn2D$`,T;@=,<?FI,AQ<gCV\t!)FC7*sgI;N7#lBD+i:OppZ*X4e'5FeX7@'
%K$aMRJn_tW_gXI@r74-<PiHQ=4@Zp8'46`UW%H.uWuWE2HK..rfOc%uh5!H`iPDnDpaN)BdP]T4!4jq8)o@%])Z8/?n^+6g8J#1H
%rLL64U@PLcWI7'b)$LURg5\"Urd"WdUH<WSb934m^)c/u!a>qWX(La/-Z.t*pnLH_c(s2jPA[dWC"Dh+8qM;9k1NrPlA*p`4*A;h
%\mJ63HY^YlS?o35Hd5p3-?V9$5FIXYQmmGGR)*A33ht70dlQeXq29<``F^IH(:KC?'m78TWoXV/O6&S#>q,SlCqm-#]Q&VJoXB3q
%IG8qeE5g'qc>Q\"n9k5hoMAgeamQ8,5j46-C-'`X#S)5,f)6!Jr8+B>&0#*G4"j0BDacT@=9@M$.^N6o6e37q?u]$2&\%C?c8HO[
%7lKJ)*i=2>A_&*Nm=0DVQ(bnY9BU5A-.`%k'Y-0KQQ+6!Mdk*TJ,eAMpTIKhlf7*`W0etIGi]m_K,STR^S5%t(tOn<kAjqU"EEU8
%3d7UOFR'0qD\I1qigr*`kscBG)\MhFg;iN/\KUD"Z+jgqG;oEf`-m:+=4NB,]!_@LVS!Oc@sgoJRf;]u5aalDi:_DI5WVdOjLSre
%K6JXg9esl=Rd$]KU_LPjA@_JMjjWOF\^;0_i95CErcR4\YA,0LNAXR$l>+&<BsI+(of?f)"PtUW)g0o&EVE#IgCk5K&*=he<FL+&
%c(J*8R'sV(R"$^QIasqdqHn-=Hc.U>FH:D'h[FXW/Teb-ID#QG>BKV4n)&^8GV.>]=Y0"idWq)Wg>VMEJ5q?J]5q@EBHGE(0'n,'
%0,sTqIs`Rb<lGa@cA:jJ)Xkk+mA2H(b_kcpeGJfGPs4j.bZLjen'6oX9Bog9Z/(i@Nr7OjRBuN6:U\0uQRU\f+n*U>jl,rHbPpI]
%cfE9le9uP\lnF[]QSY\5^H643$!m#FS,L5HT?Ebl/EEA4Z[2J]fsAg]HZ/n"=-2=-6*$p@RmYq;rOsi:kHj1)SOr]`Zh$gQ=>j`!
%Vab^)BWSV;665)rF:_"J9qMd:7\E']m9N_9%Uc*2!C07QG0fk(1gbL\UO@5Ah55Jr!Jf?l-E7t0.,hNO`$d50ltq'e=%ZBbWg[:`
%QJ3Sq+hpNWi/nP<i+:;T^69;T&845M4ChsAJo22\8KHiN@gM/e<AuZk%tAcWI"84_M&"bk1<F1?<7FR>.C0rnB\-WCe$b322ZHc:
%qJh((F@6qP:s*O9MFgOAK4$oo.*ls2mCE0m.A`_\..#Ht1h4X;IgP59J-tRn5]%Id;X:e4^-QME%93+2h_WkO+JW/u9&)M2oYWG5
%=0fTYE8<fgm%bbZr3`5hY<@BVD=Q/:0UCH8^%R5AWe6K&SHNDhStVRH7_3nE8%LM!bXdHh#pL>K*kcI>IVk-ZqQKiB;hLO3.eU<t
%m^<7/pLr$Omm'`q-]JNF;fSaQ'F%*Tr2mih))jt\Eg*CJ"4U!!,Ud]#*G;,KPE?d@AJC/:Y"8t'NV,MMaFgAUAnVBLP=+c6$uLTf
%bQtK+?`K"B%!U)u#--'NaI8J:d77ms$F;V+3/p>dKMi^I&VKJ;D'fHZX6VrOhh+i2cp/&3WVND0WU51mr+d+i=BF]/XV.W3c$;M=
%10s$pD?6kBGN=:\KA`E&OVCcKk2%C*'H^SX@(\cMitAcF,"pB5$d-,:#:'b:j80pi5]4rnr?,OL9N;9qRcFr5OQg"jE)6\JUg2O$
%+5If?JCH8&U]1'ZJ>B0n.%\q$C!7-VEIXA@-OEN%?rp)tV(6tC!7WG7K:n]1c.JOQ7Bc)of*,)sq>CI4:O]i=a4U.g/1(<*H2&+0
%`>FMlShiO06ZRZi6\UI>)#\(dK<lj[klMjP"_)u7k-Z#&i1!'TYLjL$,9BC"PYq-KTm3ZeD53`+p(oK<?mER]55Qb:Yok6Ok]h[b
%,BFN5W?%P_0.eD,9[lkVs4Dl/,O,+kOZHKa'>C1nC,B(:,kNqD1Y:..MpQk<F<Mj(GD#2U#Ot4I?tlue+gMrI/7D@",R#UE28EoA
%*Zu$\nj;+s9rX'L(8.2ug1aO9mn39IRf8DhV<X:R'$WCU=`0i<,261fG>qZ.0VW]ME*h\:+]MlOdc3&OG@Z9%LVk%qTrZ+"5:3"Y
%LMSRQGE#+$5.c%K'd7qCY45D+3sN?6Y;BV;#_n%Sn_X3McJ[n^iE._$.0pl':1:Lk)Drq_fk$L`=VG6K?PRPr1'ofM;,]3,K8u[Y
%_8LXk;T*7E5D&[@7\N)?RCP4pI373]TB?m9q*mJC/tJ$N7;gQb';O&uQSt<u&VZoO_]t4h_%2;l$bJW<K\>I^#,'bdG!&sFG\Q^r
%2fL;Zg)ocW[+t.pL@J#kDF7CP+$lR0:Ctel5UPgnZaEkf7TY6>.5]ood#S+`>!qY#]B1luKDo%!J_ZNK4c</T/O]LtJ;P1f1qhC&
%Gh7[2.FN7p&2M3_GQ4*$J?DM$S4irA5-ie@G%GbabH8.M@6<$#0_eRL1K03%_H!YCdsG[(DON+=gO>OR>)im<i4l:mcVtC:EV7F1
%d"G`2,85*K%In]FgmhS7qia0'UY4#P--UcuTTQk"eZA6V)@IP)KuCIa7BU51>.-4CHCsY<<R:f`"_GZC[$T1gJSQDs*OlXDKJM](
%LpAJd_%DsOo'?^Pg/DAF4o'&SYha2o@aT[5O+ZNO?ZlR?mA12I866F'Q0*Z>Z!i$#5_cAn+=:eZ\fjTdqM+cCHP]S)6i;qO5FAts
%LGkH@5FTN2A+L*;G267UKeoU_R_[F!QPZ:r`r_H'D"I@;Ke@'eL^4p33*'<Ae%c+XImniBL0%c(##(,LJCnn)B(oj7A.;>/jajCd
%Q/K+C2>g'#S+R0\TW&W.KL!l40tD&NPZFQ%\@f'H]>Q84dM7D0Jm-R#DQ`W2>?/jt5[>q\9q&(\7A_YY*f#;VdLe\or)rC8.(`p4
%mT\nMD(puD(H;?"d068FU,aFd/'Ms2!oJo$[\Q&*R&/i9>Ed9h-Y4tKfa]fIpRW,*2\8X<hXHT<dJh31Hg0)h?bS=[16nH5>7@[;
%qI6k7Mqu*hlis55^=K7]kK_aQ**/4*KK,HjAh.N#UE5&3VTBQs]&*'r2h/93cAY,Q!5EsLkG>![7Y.*_M\]%#d%3;&9]1H.$2LL%
%:>5Ht!?P+5]pQio$=f1K1i-ronO^nAj4c;24nRm55FtfWjuj1gg6nhh5M67tl[WU1'R>o>_,^qm;Id0'$k\Jh!c)kb!.p&:=?$@n
%0@Tni4H'kNRL^1?cP"g8#)rd<,gmo.MAo9^Z4tUF^-`%&m7n!a`5LpV-^$boQL"\*O*CU<#EgIM'K3(?E4<A@`_KtaC(S:@@<<GU
%+$t/ML4(A0ac&>>jZGfKjEWi>&9.(XY%[$`<f7HMU7uk_do7oM$Vd7ZbhM5?O@O5e+XP"CPX]W)O0aSdp/m_q*@]BckWPCTFkK(6
%Q+tPL8,"?@g/8Z6N(1uCfu#D`GDe%+^9+YVTmtdkc*JHf]@0%/LGa.M%8(=f%nLG?8CK\^%8T:G4m4"l1Tn?@_;/F8>c#%&[UC-B
%"]\nO^Yi<P1VbPdk.u3$ZX6u,VEpW8-Bc0HPtY-pLEZjIMZYj`SHMYIFqrNVP-@M*X+%0nm8K)bJYFaEKk8H<JT!BpXpX1WB7DlN
%?$DM"DHtTn?#iQ<fMHp4MdHU#ld-i((OXWkdn\)klY2UN-YT0F\\eN<]/7KeoAr%'+]bdb[Ei"&m[*;uN,2<LcX9(!ngUbTD9\t1
%SiFPMeL^;*F!`B`Vt1YB88!)*3PU7cmdqr3^K;[^KjerrZq0SOd=s"X^tba@SWo<,LbXg.P*DOY%Q0nZ&OSf\H7h@TR`oS53*lSB
%C8&YR$.fa)`g$@qpnS@02_4X3<lS,@al?\2`!C*1VJ%,8L6o&0GVS,YPVPeS4I/=PrKpfYh^?iFb05;cXo;c!BE1&_ANE[>TLhti
%!BRS$@k/n5qJ)kUB*uI^>GfQ&\n,6Nmn\+*UK(G9VdM"lN8_:<(*N.GNYITsr$:QR$[!If&X\U;q;`msUV;D?-3Mp:iqQjAjT2Q(
%-M"rJ]Q"-N8PoP;$h9*e]_1JBF<T`fA<g+[17SmbVQrDATTUbR_;"Ftk47s'$^@;$UQ8<LL"Gg^1H>47s&r6$Rj.Di%)PP"EGGie
%@U.BG$Iu[J6(@MORq*e1Z.H</5m"%2A[>[$Uu2H.mgXJg`pA_c9#jIkF3jK,PM],apY?c$)T=D`'HrI-Pkh!kc"SjTPd20f>!S?j
%Qeln%JRX0LM.DS?ZLs<)gBAe:0.e<=4kuE3l!5573@;8>0dZHbI`OWOctM24"R?2D:$\g(VWD/bMpDD]od$TOVQXZ:"HG.B?*eCt
%Vf4#,A9]gMOe[tLg'HeR_*Iln_2M[Xd/ropq?#(sU#^gU_KX9gF;"-3nE:AR%)!ZI,$M+2m^S/IH&^,($Q?:L!W(f4fSl8(AE5P,
%W,TiK1eDP3g%a7J5mO^PE;_48!^rBnin$CB2)8rq6*mj+="k<[/r$eYP/,qW385SmSi^sK4VZk7`+fQ0!ALYkr!8!_U-)S8?n95R
%/jI]7W\5B-D)H4NV^UO+LD_k$TFN5^2^^\Y`:J43@Tdq;#$aBJT/B'NUal*=4K6MV!c9^HrDDkLe4-[bh-0H_;Db&TiXI[7Q.8L]
%PLF!V%4;jRE*7L16mKJXScTj2&'9d&a2GeADp*pt7T29P.M<Ki]i,7s4Ib3TK73tGiX9g1c+ks'9-PX1G1r7QWi`X6f.dk9dJ^?9
%\=)cjJrKVR"D*.YM;i^.W7Rt0AR>in/[%%2VGGHlaAU_JdD"H$Y+eZ33ga2E2,`38DFAmo^#,a_@L*?;7#lEa#*^Y"_gC,>blkkR
%_l6/58bp"fn#u!'bi5XXL@FWJI,uJo$^5FWMsBj6hQX0eC:XJ!NUlEB2>OAmMF;hoR/upe1c$@jEc"dk6U;XR8/l&Y6Z4JRR0mfD
%]ANC`_81<*\F5]KR[W`i5QJhjZ6qK))E+7,A10U:(on`+D/V0RBZn(tm"#qpZZrCR[unX%i?^IjPFCr@>YTH"n9&W?MULB40$:U:
%(oINh2^78p/8F(!(h>CD`i6FgX_=qZPZ7V7m-I,GM#FtVp?t>_$EkK/fr!;md]MD=%8TaU2L!2?`^YjV\!UB*R,F;Aogr,(>uZ[:
%W?nke,m'IXh%B-q\4o,G!RVJp]\Ck\PeJP`=k`Q52hhd2=d;AWGrmigI&!Sp&eZ3bLh^ZAl=>I/d*Ua3NL6H&cREc=S.H$Q+IGAh
%gD/CK'Gl\T':D5m56K^J2B32AlRr8?f>hf_LQ*6e5-O,g&4Z6iZj"d$*E`[-T7mE@hQ4$r]`ShB\lPBQ;_rsl]8h`GHS\79@dtk[
%f4JWhEX>-Y[:)2$`LW+WDK![!3Ri#'%Ds4tLI<PSZR4e`9b<pm*I((U;aIt\NARngKkC#3nbr-)A;jc=L=a[\F@F.ekH7N?\^b_l
%%8\LfRhH)nEuHhTKe8THBltsDc'[6[,NornZb]IZ>Wrb?fUSDMLZH*[hB'iVmoXP-GLR-"^k+d7TmB:n\lM8\6+b7aTW6534Ku%=
%>-(<Z6r#_3a!8Yi2#9<;1.ZAu+1puI\Cm+3Gk>poEiI'M@_su;p,DY*<f4p=#84BIcOnk&]83<AO?t=#:+IpC6,>pRAT*N/D[Y'6
%?oO^JJ\GMdnd!K'b!UW#UUCRWpsH*;\VD`ddb(+S83p`aVGm=4,U<aPk67*hURFD/Tk4JpfUQJm7HJ9'RiBVSMokE]IqJA,9$KGn
%(GqF+Vh/`l^^gg5l7PLTA'0_BbS&iWWD$)&:F\p69mL[e"PTW9M$5LfP\O_G+EF_Is"07X*lZe^5E0ssZN3t6p-T;0LgrlD_dmd9
%)$3Y!Y,b18BtmpU>3!Wln_eeEB7srXXm>Zq2.>*\Zbq/'LHd][(A-e4p]C]R8QJ]C=7O>TOOeiZp<@&/qFK-=JQ5Qg2Ka5HC7ef8
%Ele<pj-T(mRXQZ.NaZV)YGk6AJ_uJ7d.Ym20;L,_itrB_2K<2-4u!8K>/pm<3F[_B&hI.Zh08Nk(/lM>F^(Md*E+#jA;R*u'O$^@
%/o-`O_T0JD+rNgS.3ceUP<bG0=@&^A^7!gN!aQQ]B=ZJZUiEtXh!`1-N=G>EGf1IjGfIX"8.:C@K,utL:0f?d$+dUN'*+@KFPU,]
%-S0V(G*dQo#ugt<#Ue?mjl#o\+L9cEX*c;$\4niDrac>;./X@XKHicCCP5D!=O5t#V!dJ@Wf=S7-g2]+7geSa,pGX,6W'=qH0>O;
%i+OaqU5*P"4L:80nLT!rHjXE;P"oUR<*6DHg5&8)-pSj._IbIa>ZpV!`@`DD;UF("kX"VA\X/-$A!><+n1Xi/K6=VkA8V,;LmW*u
%<l2H7=DYV@ICbRTb^P)o`@kT?$A];qn9DQq@%DQMMV8CE7<55ok![:(g'H4T`gtWC!_%ZU/f50g`<4ZFSqIJ]IRVD\-gr)m:ddar
%IPiJa$rg_E>"h6Y6WmqSpfjNAQKcT,]B%Q:lF)%7B-89:^=3Y#&k$*'oDHV0Mm>UXe/Pr$HEmYK.L9%M_o\?@L&.V#<](D#\8ia`
%_ad'BZ-r$A,$RXUNAg&!9DQ/i?#RGgGVsf'Y%;E,3s4A$J"^k.,&*fcJ90phTTZuZ>umDlBVAt_41&L?7`;,/r/7,al;eo4WBF.`
%@2)Xnr%klY]GKP1:tpP&);b`bgp4@nBkGip.:9*5`7@$[V4`9=q'HSLo^&r<j:iT('_R!t5+`YKKH,%CZmh1D4VD8c9E`$'Ps0$1
%T(!aWEP\db>qm-,NjRkm+Y0q#20=i%ePTOV"!a;fH+ZO^EF0:<OK1;GKi'bL-87YL!kA*rP+pn:Z3h%?pPoV:d+$>SW0o`E?2-sL
%c7U'C:Tqs)AW=^S?'Cmd!_58i%rre3S!?A(k1Q[a'YE3/MQ0fn<4o/gB7od'N_%1(2J?I18UmESkoR1>@Toft_$=@qp-$IU49Y[8
%"NC\JEehIrD>Q!*XjdhYk+p;W]$08=4]7:%>E\NJP$:%@0%Z0dZ)$3Xe-2;QhT)s7FpJ&]nqW>ISm=*c.!b*)7O)q?.%]4p4hF=S
%\^/,KA(";!:`<5kDO\cd@qnH,)?Z8GGhqdlOZd&jmPGZW,T*OCInE_G7WP;Bct$!a>rnkR<Y<8*P9k@=q*JUkcQ:mb@Q4DN&;lhV
%=Xm-30JF[q1`tdG,dFq7K^Fl?MjicX]RY3;ab^0^1#!/ljY[/THce!ca;GLb0bgM8B]fM$R4DgLSSV_?%AWme%h_H4F;e^WGsaG=
%Fh]oZ.RXFU:s<gckh-8:`@HP?kZ;EAh7([[OK?qa4Bco4rUpBuPIcaZ1J4@@@)Q!W<V?tl-sLiU4FHFCB?D6RImb+*H.Sesdb6"Z
%&Fk;&>g7!i73"S@%:hJLXe,W[Sg5a-9FOElgnjfhFjrl\FTUu"3c,fUQi3f>,tUU+14H1i%`>300-HM8Y-G-+e&]n0I6"c>H?tk5
%Hc5@:<NR1cZGA(piL)Lq&en2sT;NGLkGZ$W!kHm]`.+-A30YUkk*lX#+I68ZDY-tU6f^R2"&I&q/+Os`&`3oh-$o;pP&g*#_h[@&
%7UR=0$n+<+C7jpfWrk9hDU%3-d3t%663EHuSHI[$N@s!rns715A]"m$<Y&Q_3YW\m=rg7H2n%G4j]fH4S<+9K(mYi.Xj9oi7q/\$
%D!I<,:mke(+/Sif'G?L/a#/RiImLc&+u0u7"_0t0V>[k(?aJn9Ch(GZdJTA(VjMCAJ>^HDD0X2/`+p@:mX>uS,iiDd+>W!g`=>YA
%L:(i#g-.^B>4u8@(J2!mTqo'mq*hNt%_%@^j'd(uSF"T3`[0g)VNE<FL>#okNMF&?VL1LM6"#Lc9l79]KGJhK5=b$7VCGSb!M(Su
%TnAe`"K;0qEWYb?7^#+reOH,ajX3b<eD^qReD%<sISF_);cT.o:&6$dA664^$%i+5IrkaQXdd/.(>?JV!aaXCo"m-6?Dtoe=uaD8
%6<tGTEn8O75QDsd=;E"bOAf-LG!=-XpINYY`DPF3^@(*E,A#];pe"k;f*PS^f)k</Mku;OdtGu*P\j=iic)<HD4jD@'$]7BO;c:S
%%OI`o!KS\2b>D'\FTNlKO;K)?P>fc:8`7*cS$ULjF"a?->o4d"oqYld-Er@X3mu+[M,ra.-8d'Xj\uU:e!T^D_gQl%5\5jZ>o1]C
%D7'jM-1;=M:cIoF@NERk?=>J+5.__B3^4;OMYkcmP,RI;^%TNN,!n#/g0fAGR<FOX(=e8\cDG#I]D-Gi`UP)%o7OAILOqaE6sp0H
%a[*DR`31^=Z#GQhD=;9IUab!p@!H&6V!H,LpC]$=6/!*/7TQB!O,2.^bo0KjHqOTd$f0kjn;m%?7sL\bX`lDDLD7FUJ<95.GG1m;
%#p5`TRqii=hQEMsD\q?A\%\;H"@I^+prO9E<RA'8[hYc0^_&CNlI6bP\6IGDg>4>#5@-11f!ahg/8bXh%!6\_l;05>)kg6RYdBL>
%bRM&PdG:C(G%";iOm!OD*po*00!RuT_!\=MKq&EPJS^&*%i4K?\6j&Y)F?EdhhBld^L?/3F,&iF><I^@(,]ZNLae@rre$u]Tp+I8
%G_K`:G\fh>5cQ</@2^PaN=]#0i`dg@2[K>G]+6[g>oR5B0Z+7QY_K!HLL.8b^;t3/oQ4c&ULK31:nB[<(9"NBjm$[G5EShR41$L$
%q&r=s9uAbmfRb??&_Zm+UXd;EP]$SYcDrUu+H6[""a$[br@slad->*fQfV2#@X@&)?DrMK<]rP=#EHlc>#$e/S)q/[-Le$L;pR.#
%iW98i)\TW]^Ejqj]%^hp$H&qA4o.ti3?AMaDF`=!aOTk?NLJ4>So"Y%86DMe>HCjaT6Jt.WbV=YY./+km`?KABHse;D6`UOca/WB
%I_gQ;bncgI:FO@p<4drBTTLXfjsA'PA2n@H>HW[n)gt=s#b'//HPN:W*:1$]eY\8iK<PNKOlp?F7DmP^J%S%e'bf(.io;g"[%[18
%V&O":]/N/mAbap.QL;d/.AAD@k5fTA2>I+;%alCX>!ZfZBRu2ZdB_Qg:Zm(+7WrZg1;*2qP:`Bh*W5MaLKsMpG/FOMpF>>P7;<!e
%*%>nXm1Aj@N$Kj9<G6c;o.4$Bb`&7nj%PUC@:P=4Nb=YWTMR*B:&8,CUd@TtHmlsKj@KNY@cC_?6n*a#hE/k;;[VD)bpU<O8<ks4
%Ed&&QR4G\^Q=Qs0gp<gYKhL*S'p!GcKAg?uh4$4kV//rT/X%u!.T!.q2`*:e!pRD7p!k@".Zb%N`NXqC<="fp\EZ8@V?4lY9ppbm
%CPp&9ndLa>1Xi30o-=E1G)aEhI1:DRNl3AnR!^tkVE-N2Zt<0(d7g+Z];sA[BC;#_N#Sau0?I.D)Mt>-bF(L.4HE^R2:AD$!OC$4
%ZE-Ls's6MOF)kef#tZ2L)_"b&Z_^;jjr-6ZJb3UrA7e[FP_H3,7]!#p4)E$6&pSJ6N^TlYPTVHb_8rDb)>BB(-'\i;3mslqOHiJ8
%P:(BpcXa%@nR8K$(sZqI6.7O=PYEH#%Adiu8uL*heZ4JOF=JGt;(4/25*]V0bATNVWXMomdHL;cP#>io]6?3Nbc*@"l,BSaWQH?C
%OGVhBAl\("`2_n&O]FnX7h_ZSRA&eD?!q;SeI!@c<E_-t/dOSI8h]Z4`[/+:^iAETNoVZ1d]JIr?0.Ts]*g4T<<<D*.'EAG,5:$+
%EW[:0!U0H$A6@MJ9Dt?_.9<hPkW[+V@qBITMFAW*/>oRW_/7%8-Y<OC1b2ccHua\oBiYG:K\Ou!--s_W'RMju9XM*rDk0JD9Im@R
%^P?U)Q-g3*"eg^3qf`.]f`ufsA1PPnl7%[-[T/tq,^D2?O_uIOl5:9lhhm7S4f*6p\2&$q4t1-a'b,3\*LJ9W#0XnC[cC[2GhhbU
%F<t&V1$P9PV8qDB=nAd!mbX:mH)2N]H/(mOQ%;7T'O4S?$qn-phorbHLYNTQ)9GtV(5Ef,XP$ZukbDLeR=6G;a<c"0?MRY,gHCLE
%8\d)ASLHi>0mEoR.aCNkeg&:dFV^Ij_AT5)#]+'R%B+d1;XG&M79WZ+H2)e-=YN,f#qE/D*(c1C]o5iH0cd+<;S\]Y>Y2k175G=1
%+DU-2Gl\RJQ0P%h4e/uIPA2(f<6T5toI.T>?52+M5KbWja"a;ca-.)Y[<!F=]p:p`J@W[8,h8-`iZ4-+:hlXecaC(s9Jnno-"@e>
%e34b712/D<no-'c6hDqh;EWJ5**F@,p[EiBo0ZS[H8[K$<E4SPlZ/M_Wc!<J_RfC?];cI`($W8%6rhcL7to^&FQU>Lh0JY]i].,m
%FS,HYW)&PiA?TteXHeo'i5Q9BOIdktd->#I)!u2/i\c'Kj]4hm*N-@O,e/M."19HsgEAmn.\II=KIT<`6MFH6F,1Be-I2!uAGaKf
%dWu5N:1(Ubp,57"2unsSI'OthdmPGXE*![!fT/<EKt6Qm;C6\+TAI/[fMaKnj\TC=5<P\OpY&u78R&Zql#B*n"6I__@XtYh"l)]X
%N6#u+_n]>-%T1<(,u]ocA]0<47Z.qjJ.s![qrLXE1uVfh@F\D6O`78gYU\2tD57H?nR2O_Ic;4f2HUqrh@UnhR(^0\hM_FhpB>9*
%D>"7?_/SJWJ(Gp`!_L146H"2]f/S^+Z!bh7g.%0+gJJ#XNtV1ZEE]cZQQ@@eD*WpF!ZF@6K,oA(jr,NmO4d8Q*GgCc73&)rJQ[k,
%c3g=0?L-tI"N)m.c2LY.HjUTMc9j6[()=4/Kd</QrF>?Fm!:aE:01=Ls!mjTBm?-R(EZkJn?i.62]qR!C=!A)]`?YC"OdZol](uL
%N,ooml_&;lmMJt*1m^@BXlg^l`Li[r<QRMFN(8qdTIa*h(<7pV1SW"Gq;Pgm2.Ho(`jqlmDCiHqa[\XM#EJU/hno>UPNe!XCbgLk
%fQ!R.Pi>hYn2ScTWq?[sC.H@..J,M[a;/&kQQp+2b4q2s?%1dsmgp[A);@<,H4Z/1N[:h4$n'6E"0>7Z<CPDP#S:V(`YM&,&UG-[
%EHaOq[,:Z63tZR!]^#@CBS;OkcO-B%?W@-r?A9D*'r9ZG2M`C*[0Sdhe[bm1@.0-q%B=Wo53bjeHPi$WOUim9[a>LZKk)sfN\h6q
%*+[2WF-fgAh.Bs.$F5!In,c)!*pVEFPDkl6Us$klY`Y7rT3prkeCf<C630MA<RaVdTr#>FrIg;1N,ZB,Jh#bH\FKG"e[E$"0YhF`
%de6]Xc_"o#Xip4aok32[7PT:?JMKdjcqii^"a54l<q().Bgj<ST)Lsf]Pbd?!>p!f!SU<[@+^_^'il./HLA`W\:Bo:jFW?l?'$dM
%OUEem@,uot)3%lr35ZXNfQ>lOck4o4E%rRV-SEus`efTkg/sFk@iOa5cesQF9()B4KF/Mf)^stAI%r1c\@r1iY&(-(N`u,"l#lGS
%E_@Ec,W<3MQK[B5guFUaOs@ADIJ]13Z#4Y/=0)WFfbNi#cbS*5>lt7k38KQY;XFa[G#q^hW%DSpYX3\*QS^'?,U(F5j=[Nq9RBQQ
%3E[N-8Nc\>A;.,q^VGO<nkN8e-7bkpGRkG"P8,G8$*mC4Z9kttg8(64<p7O!@Gul2],3huaU&dQapD/=i.NT;hF@"PR1<G!rVDcm
%ZMPb-B]4X*?)b0e_?ietcQe9VEl+47Vp9<!7Mle.b(r>D,E.j.p/oFEKJ?nE*:\aq7KmN)Vk"D$1?EL_);tp,(uYOfN)2$NREf>r
%]NhR`Y+.2G=uDS!'lohEdHN#/4:f/H_?jKciJEQ9#Z"u)7X3qP_?`qBS;cr"iQ2@,fZ=C8k[]>o/l$#!io7h!:0a;?l9rY6b0FKM
%S1psYC<0IOBEfbKl>V$]bdtdb22)MDnWl+(@O7]hQd+PsFC4=oKF;VXKI_:d_I^j2$(&-)S8d0FjFk^--7<&Y^2Uq&HKBg(I-u_$
%-HW$%i_^_-n,no`k.)&/oGN2f*g>m.Pr,`);6:u<`u0+)f$\MO4!&s4FM!RR+8Y"<N!O9q^!aFmIK6n]^$2?)TX,tHq52r7_2Y*-
%3o<o6D09u"=T11<Be6Aja)5Js+2JuM37:Ff4A#K<E\"kV%9<^La1.E?+Q4$8USYT%$,,:i_.VN'Ssimo1jr9W:<.'*g_MI6/n*q@
%9rOI3??<APW#9o]d-rA]D+#Et@(?pE($oihU.sEO.W8'sS*4S0`HUG@a"KY.9ni2jj26K`rY)B2dIcps5<co`?r@q0gpSuaX7sm?
%7k.3Oj:8L48*LanZHffSGT<TmU".[_:S6ekYT)@,n.g4a&^>q-=2E.Fh#3.WTcFa@VT,4ja%%hMhI+`,+1d0e`Sa;soP9fdRp$+N
%Uc2\Rqdo+n])6X_1X]AHSqZT0&7SirUL+V/Z&0OIX/#j*[,+79"_8HTn)BceZ7^)1s(_P)Sj0OVPqTg)*s&HRRW/plH4J3$:n@,M
%(YQ-`=:NQ_k!Q0KBeCY1@H;e/?:Aj.%TQ#aWnp5Q5mUaFKHB8`:I:Bu.a9bf?)QAgGqZ>*d]L;ZftJtqJu0U3>/2Bu-Ztn%*pRY@
%L2R<j`nQ94!3MocX^=1V+0nfU7rR0^NXk[S'0:Jir2a10^_ct]dSNDg@_d?G>;6ipa2`Y0(nC@\'nc+>VdcmI:;pUl:;pUDnWX@O
%@pI!nr,.FgRGW4N8<X`gc/;?ih$Q7o)O*+fWO&^Br^dh6WFpDham!p6ZV$:'@_BQs%&WHe>/1I_WhU=I[O(QJVO't&.P09Z<[be7
%a6B%sn&kDMX\-=D9HJ6D>gq+iRp(u%aG%U$2SkLVpHBo+$jG!i6eTI,392l;8^.k&1oJGU#o@KS%j3#n&O>]"%ueFr%4qY6GIbN=
%&p6<!_0PJMC`3J9"GK]VPgcS"TL,o,6\nH[Bi01^+(nIEZWpaQ5L;nSDF^$1Fa3iK<nQH2+@,9Oj(_FE=rb##=rLQip"3,NI1E$g
%4*#]6BrZ'9!8Ca#,#=J7=M[rZiVrkgT9$VLk<bGpb1eiYeIFV)P$iF^-`UTupFrWU]g=`7)UGFE0%gP;C]e%"JZE"6LVGW>"k2\M
%3%j?eio[&7O&>kRNoTCQ*biZVH:5d*?%7.J5_EBOi[qP%O:o%MV^"`d&?N7q2b-mErqHes9GW4mal!s;i@%2<46gOkBKiC7Memjg
%FX/#ErKuHaFXBhbG@85YFF]8CG58-&<;-;8B,[0M,!PaUcJ5CCfZcDRe'TnUGoq$hkhJ1jHS^p#Urq70i&[PW&bGBmY1qt2KpAF&
%[kn^WW:d94h#5f6M=NaOkEF"ZCMj-@TVYOd;[,@KU\4n3&54&RHPrHu_Gk"n%pufq9hK;lkH;meS_Prl#OP(paD,?^l_V;_h$Kgs
%M3rie`OV[^c.un2X@i(L58q:O1-%8]"K`#<hiFN%HCD4%'RO)1P8aaoZN_\S`X(hniT4mR\HTLpefVe&cA#LU)]@%;p?j6Z.YFD;
%q@B-#e)lptLoW[#8+CLpeZd"SXL<\SK8.e6So;YK3:%":<mnD!q\j2?`%N0fS"&V#-0IFTA[0$a]?mb@P]s.4FsDIY`PN%E,M\/Q
%qBElGAfT6b6>i(+/Jct?>:nMC4=o/sa_AjLDdP*LAY[_;>n/\Cg#_FU\O.ZjlAi_[SN3A[eXXd#BBQ1]7$!QL[aD-E[MfnT7s<3b
%nf@kdBfNbE=RgF8I4k60K6JY>_o1RBK*4]ZgD,\9#5V\mj==6<,X:23=3=kBZu4B#1=%_@i8rUl(7`q6,h<nd3%I3<XZEf)G*gC1
%(/4$*Qf$5CF)Q\*-^.lj/M3>OU\62i9eBJ6FFc#In,f1bn?V-)JsWsM>4AiFW<Fp[R\+daql0gli0A,!mDI"_T\Jg'eTG@?ipHWa
%c]rC<n^D_IZW/s0o$\R'8RK%`S[s.?ldUnqfVofCd&@t"`SU&pgf@aQIH0Y4At*#HC#oB+Zk5`u]OEnqU)W"]RN(@UDAj\Rp-T2:
%[X7].Em)O_WdDG71-.ODm-/Q6PkjcGB&5:t#0$O]aX64la%kj2@cr(#'g#cN\RO_Sr>"oHk7p))]O%j0?RsI)>-Ac!a6Yjj(Ga?A
%`#Hmj=01=lWMATr?EoZ>-GslCkY7g%oCI\gT]Lcrd!<B.YLa$)qo,VL;Wr/9fVKC:SbL;TW*L;eXTr5%f*T0qjb]"CP>5r<Rrfk7
%Eg'7/S2Y/Rn[qC#ke'D5E*f:Q(TYn%\@B]%M2Ofe:0]=opH8(oN@)WGcKCD"QKKXk/ao*lHJR!pl=K^Bp(rQK5o5*#6DqI[f/r*e
%q<EmN5'M:plgls2]KXZTb3ODGEPkeV3nfO!(-TEn?:I'`2Y6h0/(F1@B7?I"d<U#nRbpWq+n#Lhe,/@?F;3'43G(nIKWXKe$[AQC
%Bgn:gTBUd:g`&jjdeh[pCV)C;YH"pbDV)tuj4GE->8-r"Sk$B2P2KEZ#i;*YIMCh?>q(C^_658'jDh"B_64j-aI<KbKbA:LM4Y*'
%"VoU(mFMKU;PsV*-MS>#@QD$Gee@u2DP>Zt/dZtqAL-,)@O1^`F`NDrcLM*&g17^d\0Ujs;kkD9Rq\JP=-RVdJfLB?=!U^,!-T^a
%R3fCc"n2XZYh?__,K&u1#!XaII]>-r#h>C&[t&+K+8p>fMFGf)58nF](qca@<V#!0.;bsWd3bTS?AoT5Wl_5WBZhX>YMsW%Ng5ad
%a4SeaNSKr]=)#,,T70N)UK^.Ta>QupBLni:3D57e!aAV$<q&ZMX*0,S96A3HDnsBrUU9^k2,jDqngZ$Bbj_AHdLgoGilLWL4*c)H
%P2TL,^Z_b-B)'bp,,h[)bj_[u.Tp\2r9.81dnj\;+0@\ppQqFBIf->rd]Z5kJ7Hq()bGLka_dZ<j%&:%[S&G.3IXu90t$&d4aERG
%"6O6^T:1YuQYVVRO-#WoS2l%kXaC(\No(1JEr6^Bbjg=qr$'?!5DI(9*5*Z;Nu`LHg6ps@c;eSkV"gqba"c$AAr7\Z@DfSjT&E1p
%OlTt_VYJOMYOucl98XgnJE#u+]LIccBd3ra9_!c6W=J<ailA&^7<k^)nb0l\8MeC_?0,Uj>]Ta%;XI/#jS3G*D]ZT"#-estp:TP_
%ERe7VR=Cgf=62Jj=VCX'`fEP)InfF5RIh<+jCa)%_KKOGhZFA]q*Bl[XMUH[YN=#</>IRQ7%e:*0(j[")Uoin.g*KMYbebIfdhtQ
%:D!*$n:W?-g&gUucMH.+iS9?]rPdS+E)nu7O/!jd(i?e4-EXCmc8p.>d-srs]RVZOWtjD_SL&Oq1-99B4bC9V<IY]E]AHFBH*c4-
%4P#qn/9c:5i+[+&]sGRk]sIN;n@V">iHsddKsfoCI\^;>1/^XQ_?ZYrZR2/,iu4PojJ<DSoZg]SrlP:H;dEGnaGO,d*/2`)gR$(G
%Fe>H$Gra/DrE0WEVZ-(DVitJ.J&&Sae@^=n^)M>],PO]n5eH+3RerieT?ZtiHL=S*e>ENXa!k*BJrg-uEMjP`'g-G?25.7=S'Rdo
%SRo=-Fq5d7;n]9]TefKY-NBUo[2+&lO()db>>VTdXG5<bb!,YGN,iSj^:-tLlTI[9jPsD?UEJ8B`a/t!Q:/>'U#nFP:%Sd!MP;C#
%]EDhu'bKVL\*:=k&a<T'QF^b;BCqdLZS:)pHF3*`;.9)(3X_]!kU;Brf/pOsq<A=i4El)Ab4@G;:H]6&<(B14b,9s#:8I[T+92?/
%rpUHuHiE&TqB,b)a$9NPJ,Yf7p`Bt7L]?C1s8C:DkJ-rZs7tp*s75o6pYZ#&TDnEEQTtG0s7+G8qPSiAoDc0^^&7VSq=FX_f73dd
%5JR-"s8/Gg?Q_Hf+8E_qrmQArhu<WDrdWd/D,U~>
%AI9_PrivateDataEnd
